<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594984871492" clover="4.4.1">
   <project name="Apache Commons Functor 1.0-SNAPSHOT (Aggregated)" timestamp="1594984868832">
      <metrics coveredelements="4551" complexity="1620" loc="20161" methods="1116" classes="194" statements="2541" packages="13" coveredconditionals="949" coveredmethods="1090" elements="4615" ncloc="7273" files="180" conditionals="958" coveredstatements="2512"/>
      <package name="org.apache.commons.functor.adapter">
         <metrics coveredelements="1031" complexity="355" loc="3779" methods="216" classes="36" statements="537" coveredconditionals="278" coveredmethods="216" elements="1031" ncloc="1489" files="36" conditionals="278" coveredstatements="537"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BinaryFunctionBinaryPredicate.java" name="BinaryFunctionBinaryPredicate.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="111" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="38" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="BinaryFunctionBinaryPredicate">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryFunctionBinaryPredicate(BinaryFunction&lt;? super L, ? super R, Boolean&gt;)" num="39" count="15" type="method"/>
            <line num="40" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="54" count="22" type="method"/>
            <line num="55" count="22" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="61" count="39" type="method"/>
            <line num="63" count="39" type="stmt"/>
            <line falsecount="15" truecount="24" num="63" type="cond"/>
            <line num="64" count="24" type="stmt"/>
            <line num="66" count="15" type="stmt"/>
            <line falsecount="8" truecount="7" num="66" type="cond"/>
            <line num="67" count="7" type="stmt"/>
            <line num="69" count="8" type="stmt"/>
            <line num="70" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="76" count="40" type="method"/>
            <line num="78" count="40" type="stmt"/>
            <line num="79" count="40" type="stmt"/>
            <line num="80" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="86" count="36" type="method"/>
            <line num="88" count="36" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(BinaryFunction&lt;? super L, ? super R, Boolean&gt;) : BinaryFunctionBinaryPredicate&lt;L, R&gt;" num="106" count="5" type="method"/>
            <line num="108" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="108" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BinaryFunctionBinaryProcedure.java" name="BinaryFunctionBinaryProcedure.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="108" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="BinaryFunctionBinaryProcedure">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryFunctionBinaryProcedure(BinaryFunction&lt;? super L, ? super R, ?&gt;)" num="43" count="14" type="method"/>
            <line num="44" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(L,R) : void" num="52" count="7" type="method"/>
            <line num="53" count="7" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="59" count="15" type="method"/>
            <line num="61" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="61" type="cond"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="13" type="stmt"/>
            <line falsecount="6" truecount="7" num="64" type="cond"/>
            <line num="65" count="7" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="68" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="74" count="13" type="method"/>
            <line num="76" count="13" type="stmt"/>
            <line num="77" count="13" type="stmt"/>
            <line num="78" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="84" count="11" type="method"/>
            <line num="86" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(BinaryFunction&lt;? super L, ? super R, ?&gt;) : BinaryFunctionBinaryProcedure&lt;L, R&gt;" num="104" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="105" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BinaryFunctionFunction.java" name="BinaryFunctionFunction.java">
            <metrics coveredelements="23" coveredconditionals="6" complexity="9" loc="93" coveredmethods="6" methods="6" elements="23" classes="1" ncloc="35" statements="11" conditionals="6" coveredstatements="11"/>
            <class name="BinaryFunctionFunction">
               <metrics coveredelements="23" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="23" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryFunctionFunction(BinaryFunction&lt;? super A, ? super A, ? extends T&gt;)" num="40" count="13" type="method"/>
            <line num="41" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(A) : T" num="47" count="98" type="method"/>
            <line num="48" count="98" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="54" count="11" type="method"/>
            <line num="56" count="11" type="stmt"/>
            <line falsecount="9" truecount="2" num="56" type="cond"/>
            <line num="57" count="2" type="stmt"/>
            <line num="59" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="59" type="cond"/>
            <line num="60" count="3" type="stmt"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="69" count="10" type="method"/>
            <line num="71" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="77" count="8" type="method"/>
            <line num="79" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(BinaryFunction&lt;? super A, ? super A, ? extends T&gt;) : Function&lt;A, T&gt;" num="89" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="90" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BinaryPredicateBinaryFunction.java" name="BinaryPredicateBinaryFunction.java">
            <metrics coveredelements="27" coveredconditionals="8" complexity="10" loc="108" coveredmethods="6" methods="6" elements="27" classes="1" ncloc="36" statements="13" conditionals="8" coveredstatements="13"/>
            <class name="BinaryPredicateBinaryFunction">
               <metrics coveredelements="27" coveredconditionals="8" complexity="10" coveredmethods="6" methods="6" elements="27" statements="13" conditionals="8" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryPredicateBinaryFunction(BinaryPredicate&lt;? super L, ? super R&gt;)" num="40" count="17" type="method"/>
            <line num="41" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(L,R) : Boolean" num="52" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="53" type="cond"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="59" count="18" type="method"/>
            <line num="61" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="61" type="cond"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="64" type="cond"/>
            <line num="65" count="4" type="stmt"/>
            <line num="67" count="12" type="stmt"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="74" count="20" type="method"/>
            <line num="76" count="20" type="stmt"/>
            <line num="77" count="20" type="stmt"/>
            <line num="78" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="84" count="16" type="method"/>
            <line num="86" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(BinaryPredicate&lt;? super L, ? super R&gt;) : BinaryPredicateBinaryFunction&lt;L, R&gt;" num="104" count="10" type="method"/>
            <line num="105" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="105" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BinaryPredicatePredicate.java" name="BinaryPredicatePredicate.java">
            <metrics coveredelements="23" coveredconditionals="6" complexity="9" loc="90" coveredmethods="6" methods="6" elements="23" classes="1" ncloc="35" statements="11" conditionals="6" coveredstatements="11"/>
            <class name="BinaryPredicatePredicate">
               <metrics coveredelements="23" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="23" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryPredicatePredicate(BinaryPredicate&lt;? super A, ? super A&gt;)" num="38" count="9" type="method"/>
            <line num="39" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(A) : boolean" num="45" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="52" count="11" type="method"/>
            <line num="54" count="11" type="stmt"/>
            <line falsecount="9" truecount="2" num="54" type="cond"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="57" type="cond"/>
            <line num="58" count="3" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="67" count="10" type="method"/>
            <line num="69" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="75" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(BinaryPredicate&lt;? super A, ? super A&gt;) : Predicate&lt;A&gt;" num="86" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="87" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BinaryProcedureBinaryFunction.java" name="BinaryProcedureBinaryFunction.java">
            <metrics coveredelements="26" coveredconditionals="6" complexity="9" loc="109" coveredmethods="6" methods="6" elements="26" classes="1" ncloc="39" statements="14" conditionals="6" coveredstatements="14"/>
            <class name="BinaryProcedureBinaryFunction">
               <metrics coveredelements="26" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="26" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryProcedureBinaryFunction(BinaryProcedure&lt;? super L, ? super R&gt;)" num="43" count="28" type="method"/>
            <line num="44" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="50" count="7" type="method"/>
            <line num="51" count="7" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="58" count="12" type="method"/>
            <line num="60" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="63" type="cond"/>
            <line num="64" count="4" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="73" count="11" type="method"/>
            <line num="75" count="11" type="stmt"/>
            <line num="76" count="11" type="stmt"/>
            <line num="77" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="83" count="9" type="method"/>
            <line num="85" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(BinaryProcedure&lt;? super L, ? super R&gt;) : BinaryProcedureBinaryFunction&lt;L, R, T&gt;" num="104" count="10" type="method"/>
            <line num="106" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="106" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BinaryProcedureProcedure.java" name="BinaryProcedureProcedure.java">
            <metrics coveredelements="23" coveredconditionals="6" complexity="9" loc="90" coveredmethods="6" methods="6" elements="23" classes="1" ncloc="35" statements="11" conditionals="6" coveredstatements="11"/>
            <class name="BinaryProcedureProcedure">
               <metrics coveredelements="23" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="23" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryProcedureProcedure(BinaryProcedure&lt;? super A, ? super A&gt;)" num="38" count="8" type="method"/>
            <line num="39" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(A) : void" num="45" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="52" count="12" type="method"/>
            <line num="54" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="54" type="cond"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="57" type="cond"/>
            <line num="58" count="4" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="67" count="10" type="method"/>
            <line num="69" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="75" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(BinaryProcedure&lt;? super A, ? super A&gt;) : Procedure&lt;A&gt;" num="86" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="87" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BoundNullaryFunction.java" name="BoundNullaryFunction.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="119" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="47" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="BoundNullaryFunction">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="BoundNullaryFunction(Function&lt;? super A, ? extends T&gt;,A)" num="45" count="11" type="method"/>
            <line num="47" count="11" type="stmt"/>
            <line num="50" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : T" num="56" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="63" count="16" type="method"/>
            <line num="65" count="16" type="stmt"/>
            <line falsecount="14" truecount="2" num="65" type="cond"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="14" type="stmt"/>
            <line falsecount="10" truecount="4" num="68" type="cond"/>
            <line num="69" count="4" type="stmt"/>
            <line num="71" count="10" type="stmt"/>
            <line num="72" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="72" type="cond"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="81" count="14" type="method"/>
            <line num="83" count="14" type="stmt"/>
            <line num="84" count="14" type="stmt"/>
            <line num="85" count="14" type="stmt"/>
            <line num="86" count="14" type="stmt"/>
            <line num="87" count="14" type="stmt"/>
            <line falsecount="13" truecount="1" num="87" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="93" count="12" type="method"/>
            <line num="95" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(Function&lt;? super A, ? extends T&gt;,A) : BoundNullaryFunction&lt;T&gt;" num="115" count="3" type="method"/>
            <line num="116" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="116" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BoundNullaryPredicate.java" name="BoundNullaryPredicate.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="119" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="48" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="BoundNullaryPredicate">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="BoundNullaryPredicate(Predicate&lt;? super A&gt;,A)" num="44" count="16" type="method"/>
            <line num="46" count="16" type="stmt"/>
            <line num="49" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="55" count="15" type="method"/>
            <line num="56" count="15" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="62" count="18" type="method"/>
            <line num="64" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="64" type="cond"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="67" type="cond"/>
            <line num="68" count="4" type="stmt"/>
            <line num="70" count="12" type="stmt"/>
            <line num="71" count="12" type="stmt"/>
            <line falsecount="7" truecount="3" num="72" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="78" count="16" type="method"/>
            <line num="80" count="16" type="stmt"/>
            <line num="81" count="16" type="stmt"/>
            <line num="82" count="16" type="stmt"/>
            <line num="83" count="16" type="stmt"/>
            <line falsecount="3" truecount="13" num="83" type="cond"/>
            <line num="84" count="13" type="stmt"/>
            <line num="85" count="13" type="stmt"/>
            <line num="87" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="93" count="14" type="method"/>
            <line num="95" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(Predicate&lt;? super A&gt;,A) : BoundNullaryPredicate" num="115" count="3" type="method"/>
            <line num="116" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="116" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/BoundNullaryProcedure.java" name="BoundNullaryProcedure.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="119" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="48" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="BoundNullaryProcedure">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="BoundNullaryProcedure(Procedure&lt;? super A&gt;,A)" num="44" count="13" type="method"/>
            <line num="46" count="13" type="stmt"/>
            <line num="49" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="62" count="18" type="method"/>
            <line num="64" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="64" type="cond"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="67" type="cond"/>
            <line num="68" count="4" type="stmt"/>
            <line num="70" count="12" type="stmt"/>
            <line num="71" count="12" type="stmt"/>
            <line falsecount="7" truecount="3" num="72" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="78" count="16" type="method"/>
            <line num="80" count="16" type="stmt"/>
            <line num="81" count="16" type="stmt"/>
            <line num="82" count="16" type="stmt"/>
            <line num="83" count="16" type="stmt"/>
            <line falsecount="3" truecount="13" num="83" type="cond"/>
            <line num="84" count="13" type="stmt"/>
            <line num="85" count="13" type="stmt"/>
            <line num="87" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="93" count="14" type="method"/>
            <line num="95" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(Procedure&lt;? super A&gt;,A) : BoundNullaryProcedure" num="115" count="3" type="method"/>
            <line num="116" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="116" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/FullyBoundNullaryFunction.java" name="FullyBoundNullaryFunction.java">
            <metrics coveredelements="42" coveredconditionals="14" complexity="13" loc="126" coveredmethods="6" methods="6" elements="42" classes="1" ncloc="58" statements="22" conditionals="14" coveredstatements="22"/>
            <class name="FullyBoundNullaryFunction">
               <metrics coveredelements="42" coveredconditionals="14" complexity="13" coveredmethods="6" methods="6" elements="42" statements="22" conditionals="14" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="FullyBoundNullaryFunction(BinaryFunction&lt;? super L, ? super R, ? extends T&gt;,L,R)" num="49" count="20" type="method"/>
            <line num="53" count="20" type="stmt"/>
            <line num="56" count="20" type="stmt"/>
            <line num="57" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : T" num="63" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="70" count="26" type="method"/>
            <line num="72" count="26" type="stmt"/>
            <line falsecount="24" truecount="2" num="72" type="cond"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="24" type="stmt"/>
            <line falsecount="20" truecount="4" num="75" type="cond"/>
            <line num="76" count="4" type="stmt"/>
            <line num="78" count="20" type="stmt"/>
            <line num="79" count="20" type="stmt"/>
            <line falsecount="8" truecount="10" num="80" type="cond"/>
            <line falsecount="9" truecount="3" num="81" type="cond"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="87" count="24" type="method"/>
            <line num="89" count="24" type="stmt"/>
            <line num="90" count="24" type="stmt"/>
            <line num="91" count="24" type="stmt"/>
            <line num="92" count="24" type="stmt"/>
            <line num="93" count="24" type="stmt"/>
            <line falsecount="16" truecount="8" num="93" type="cond"/>
            <line num="94" count="8" type="stmt"/>
            <line num="96" count="24" type="stmt"/>
            <line num="97" count="24" type="stmt"/>
            <line falsecount="3" truecount="21" num="97" type="cond"/>
            <line num="98" count="21" type="stmt"/>
            <line num="100" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="106" count="22" type="method"/>
            <line num="108" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryFunction&lt;? super L, ? super R, ? extends T&gt;,L,R) : FullyBoundNullaryFunction&lt;T&gt;" num="121" count="3" type="method"/>
            <line num="123" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="123" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/FullyBoundNullaryPredicate.java" name="FullyBoundNullaryPredicate.java">
            <metrics coveredelements="42" coveredconditionals="14" complexity="13" loc="122" coveredmethods="6" methods="6" elements="42" classes="1" ncloc="56" statements="22" conditionals="14" coveredstatements="22"/>
            <class name="FullyBoundNullaryPredicate">
               <metrics coveredelements="42" coveredconditionals="14" complexity="13" coveredmethods="6" methods="6" elements="42" statements="22" conditionals="14" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="FullyBoundNullaryPredicate(BinaryPredicate&lt;? super L, ? super R&gt;,L,R)" num="49" count="15" type="method"/>
            <line num="51" count="15" type="stmt"/>
            <line num="54" count="15" type="stmt"/>
            <line num="55" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="61" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="68" count="20" type="method"/>
            <line num="70" count="20" type="stmt"/>
            <line falsecount="18" truecount="2" num="70" type="cond"/>
            <line num="71" count="2" type="stmt"/>
            <line num="73" count="18" type="stmt"/>
            <line falsecount="14" truecount="4" num="73" type="cond"/>
            <line num="74" count="4" type="stmt"/>
            <line num="76" count="14" type="stmt"/>
            <line num="77" count="14" type="stmt"/>
            <line falsecount="7" truecount="5" num="78" type="cond"/>
            <line falsecount="5" truecount="3" num="79" type="cond"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="85" count="18" type="method"/>
            <line num="87" count="18" type="stmt"/>
            <line num="88" count="18" type="stmt"/>
            <line num="89" count="18" type="stmt"/>
            <line num="90" count="18" type="stmt"/>
            <line num="91" count="18" type="stmt"/>
            <line falsecount="8" truecount="10" num="91" type="cond"/>
            <line num="92" count="10" type="stmt"/>
            <line num="94" count="18" type="stmt"/>
            <line num="95" count="18" type="stmt"/>
            <line falsecount="9" truecount="9" num="95" type="cond"/>
            <line num="96" count="9" type="stmt"/>
            <line num="98" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="104" count="16" type="method"/>
            <line num="106" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryPredicate&lt;? super L, ? super R&gt;,L,R) : FullyBoundNullaryPredicate" num="118" count="3" type="method"/>
            <line num="120" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="120" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/FullyBoundNullaryProcedure.java" name="FullyBoundNullaryProcedure.java">
            <metrics coveredelements="42" coveredconditionals="14" complexity="13" loc="122" coveredmethods="6" methods="6" elements="42" classes="1" ncloc="56" statements="22" conditionals="14" coveredstatements="22"/>
            <class name="FullyBoundNullaryProcedure">
               <metrics coveredelements="42" coveredconditionals="14" complexity="13" coveredmethods="6" methods="6" elements="42" statements="22" conditionals="14" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="FullyBoundNullaryProcedure(BinaryProcedure&lt;? super L, ? super R&gt;,L,R)" num="48" count="20" type="method"/>
            <line num="50" count="20" type="stmt"/>
            <line num="53" count="20" type="stmt"/>
            <line num="54" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="67" count="26" type="method"/>
            <line num="69" count="26" type="stmt"/>
            <line falsecount="24" truecount="2" num="69" type="cond"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="24" type="stmt"/>
            <line falsecount="20" truecount="4" num="72" type="cond"/>
            <line num="73" count="4" type="stmt"/>
            <line num="75" count="20" type="stmt"/>
            <line num="76" count="20" type="stmt"/>
            <line falsecount="15" truecount="3" num="77" type="cond"/>
            <line falsecount="4" truecount="10" num="78" type="cond"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="84" count="24" type="method"/>
            <line num="86" count="24" type="stmt"/>
            <line num="87" count="24" type="stmt"/>
            <line num="88" count="24" type="stmt"/>
            <line num="89" count="24" type="stmt"/>
            <line num="90" count="24" type="stmt"/>
            <line falsecount="3" truecount="21" num="90" type="cond"/>
            <line num="91" count="21" type="stmt"/>
            <line num="93" count="24" type="stmt"/>
            <line num="94" count="24" type="stmt"/>
            <line falsecount="20" truecount="4" num="94" type="cond"/>
            <line num="95" count="4" type="stmt"/>
            <line num="97" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="103" count="22" type="method"/>
            <line num="105" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryProcedure&lt;? super L, ? super R&gt;,L,R) : FullyBoundNullaryProcedure" num="117" count="3" type="method"/>
            <line num="119" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="119" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/FunctionPredicate.java" name="FunctionPredicate.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="106" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="FunctionPredicate">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="FunctionPredicate(Function&lt;? super A, Boolean&gt;)" num="41" count="17" type="method"/>
            <line num="42" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(A) : boolean" num="51" count="8" type="method"/>
            <line num="52" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="58" count="19" type="method"/>
            <line num="60" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="17" type="stmt"/>
            <line falsecount="10" truecount="7" num="63" type="cond"/>
            <line num="64" count="7" type="stmt"/>
            <line num="66" count="10" type="stmt"/>
            <line num="67" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="73" count="21" type="method"/>
            <line num="75" count="21" type="stmt"/>
            <line num="76" count="21" type="stmt"/>
            <line num="77" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="83" count="19" type="method"/>
            <line num="85" count="19" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Function&lt;? super A, Boolean&gt;) : FunctionPredicate&lt;A&gt;" num="102" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="103" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/FunctionProcedure.java" name="FunctionProcedure.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="106" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="FunctionProcedure">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="FunctionProcedure(Function&lt;? super A, ?&gt;)" num="42" count="12" type="method"/>
            <line num="43" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(A) : void" num="51" count="5" type="method"/>
            <line num="52" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="58" count="13" type="method"/>
            <line num="60" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="63" type="cond"/>
            <line num="64" count="5" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="73" count="11" type="method"/>
            <line num="75" count="11" type="stmt"/>
            <line num="76" count="11" type="stmt"/>
            <line num="77" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="83" count="9" type="method"/>
            <line num="85" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Function&lt;? super A, ?&gt;) : FunctionProcedure&lt;A&gt;" num="102" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="103" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/IgnoreLeftFunction.java" name="IgnoreLeftFunction.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="99" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="IgnoreLeftFunction">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="IgnoreLeftFunction(Function&lt;? super R, ? extends T&gt;)" num="43" count="21" type="method"/>
            <line num="44" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="50" count="55" type="method"/>
            <line num="51" count="55" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="57" count="70" type="method"/>
            <line num="59" count="70" type="stmt"/>
            <line falsecount="30" truecount="40" num="59" type="cond"/>
            <line num="60" count="40" type="stmt"/>
            <line num="62" count="30" type="stmt"/>
            <line falsecount="9" truecount="21" num="62" type="cond"/>
            <line num="63" count="21" type="stmt"/>
            <line num="65" count="9" type="stmt"/>
            <line num="66" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="72" count="91" type="method"/>
            <line num="74" count="91" type="stmt"/>
            <line num="75" count="91" type="stmt"/>
            <line num="76" count="91" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="82" count="75" type="method"/>
            <line num="84" count="75" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Function&lt;? super R, ? extends T&gt;) : IgnoreLeftFunction&lt;L, R, T&gt;" num="95" count="15" type="method"/>
            <line num="96" count="15" type="stmt"/>
            <line falsecount="14" truecount="1" num="96" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/IgnoreLeftPredicate.java" name="IgnoreLeftPredicate.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="97" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="IgnoreLeftPredicate">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="IgnoreLeftPredicate(Predicate&lt;? super R&gt;)" num="42" count="15" type="method"/>
            <line num="43" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="49" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="56" count="17" type="method"/>
            <line num="58" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="15" type="stmt"/>
            <line falsecount="10" truecount="5" num="61" type="cond"/>
            <line num="62" count="5" type="stmt"/>
            <line num="64" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="15" type="method"/>
            <line num="73" count="15" type="stmt"/>
            <line num="74" count="15" type="stmt"/>
            <line num="75" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="13" type="method"/>
            <line num="83" count="13" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Predicate&lt;? super R&gt;) : IgnoreLeftPredicate&lt;L, R&gt;" num="93" count="6" type="method"/>
            <line num="94" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="94" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/IgnoreLeftProcedure.java" name="IgnoreLeftProcedure.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="97" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="IgnoreLeftProcedure">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="IgnoreLeftProcedure(Procedure&lt;? super R&gt;)" num="42" count="9" type="method"/>
            <line num="43" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(L,R) : void" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="56" count="13" type="method"/>
            <line num="58" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="61" type="cond"/>
            <line num="62" count="5" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="11" type="method"/>
            <line num="73" count="11" type="stmt"/>
            <line num="74" count="11" type="stmt"/>
            <line num="75" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="9" type="method"/>
            <line num="83" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Procedure&lt;? super R&gt;) : IgnoreLeftProcedure&lt;L, R&gt;" num="93" count="3" type="method"/>
            <line num="94" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="94" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/IgnoreRightFunction.java" name="IgnoreRightFunction.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="99" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="IgnoreRightFunction">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="IgnoreRightFunction(Function&lt;? super L, ? extends T&gt;)" num="43" count="25" type="method"/>
            <line num="44" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="50" count="66" type="method"/>
            <line num="51" count="66" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="57" count="64" type="method"/>
            <line num="59" count="64" type="stmt"/>
            <line falsecount="32" truecount="32" num="59" type="cond"/>
            <line num="60" count="32" type="stmt"/>
            <line num="62" count="32" type="stmt"/>
            <line falsecount="13" truecount="19" num="62" type="cond"/>
            <line num="63" count="19" type="stmt"/>
            <line num="65" count="13" type="stmt"/>
            <line num="66" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="72" count="92" type="method"/>
            <line num="74" count="92" type="stmt"/>
            <line num="75" count="92" type="stmt"/>
            <line num="76" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="82" count="84" type="method"/>
            <line num="84" count="84" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Function&lt;? super L, ? extends T&gt;) : IgnoreRightFunction&lt;L, R, T&gt;" num="95" count="17" type="method"/>
            <line num="96" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="96" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/IgnoreRightPredicate.java" name="IgnoreRightPredicate.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="97" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="IgnoreRightPredicate">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="IgnoreRightPredicate(Predicate&lt;? super L&gt;)" num="42" count="14" type="method"/>
            <line num="43" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="49" count="52" type="method"/>
            <line num="50" count="52" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="56" count="13" type="method"/>
            <line num="58" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="61" type="cond"/>
            <line num="62" count="5" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="11" type="method"/>
            <line num="73" count="11" type="stmt"/>
            <line num="74" count="11" type="stmt"/>
            <line num="75" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="9" type="method"/>
            <line num="83" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Predicate&lt;? super L&gt;) : IgnoreRightPredicate&lt;L, R&gt;" num="93" count="8" type="method"/>
            <line num="94" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="94" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/IgnoreRightProcedure.java" name="IgnoreRightProcedure.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="97" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="IgnoreRightProcedure">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="IgnoreRightProcedure(Procedure&lt;? super L&gt;)" num="42" count="8" type="method"/>
            <line num="43" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(L,R) : void" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="56" count="12" type="method"/>
            <line num="58" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="61" type="cond"/>
            <line num="62" count="4" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="10" type="method"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="8" type="method"/>
            <line num="83" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Procedure&lt;? super L&gt;) : IgnoreRightProcedure&lt;L, R&gt;" num="93" count="2" type="method"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="94" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/LeftBoundFunction.java" name="LeftBoundFunction.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="114" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="49" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="LeftBoundFunction">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="LeftBoundFunction(BinaryFunction&lt;? super L, ? super A, ? extends T&gt;,L)" num="46" count="13" type="method"/>
            <line num="48" count="13" type="stmt"/>
            <line num="51" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(A) : T" num="57" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="64" count="18" type="method"/>
            <line num="66" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="66" type="cond"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="69" type="cond"/>
            <line num="70" count="4" type="stmt"/>
            <line num="72" count="12" type="stmt"/>
            <line num="73" count="12" type="stmt"/>
            <line falsecount="7" truecount="3" num="74" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="80" count="16" type="method"/>
            <line num="82" count="16" type="stmt"/>
            <line num="83" count="16" type="stmt"/>
            <line num="84" count="16" type="stmt"/>
            <line num="85" count="16" type="stmt"/>
            <line falsecount="3" truecount="13" num="85" type="cond"/>
            <line num="86" count="13" type="stmt"/>
            <line num="87" count="13" type="stmt"/>
            <line num="89" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="95" count="14" type="method"/>
            <line num="97" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryFunction&lt;? super L, ? super R, ? extends T&gt;,L) : LeftBoundFunction&lt;R, T&gt;" num="109" count="3" type="method"/>
            <line num="111" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="111" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/LeftBoundPredicate.java" name="LeftBoundPredicate.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="111" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="48" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="LeftBoundPredicate">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="LeftBoundPredicate(BinaryPredicate&lt;? super L, ? super A&gt;,L)" num="46" count="46" type="method"/>
            <line num="48" count="46" type="stmt"/>
            <line num="51" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(A) : boolean" num="57" count="46" type="method"/>
            <line num="58" count="46" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="64" count="18" type="method"/>
            <line num="66" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="66" type="cond"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="69" type="cond"/>
            <line num="70" count="4" type="stmt"/>
            <line num="72" count="12" type="stmt"/>
            <line num="73" count="12" type="stmt"/>
            <line falsecount="7" truecount="3" num="74" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="80" count="16" type="method"/>
            <line num="82" count="16" type="stmt"/>
            <line num="83" count="16" type="stmt"/>
            <line num="84" count="16" type="stmt"/>
            <line num="85" count="16" type="stmt"/>
            <line falsecount="3" truecount="13" num="85" type="cond"/>
            <line num="86" count="13" type="stmt"/>
            <line num="87" count="13" type="stmt"/>
            <line num="89" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="95" count="15" type="method"/>
            <line num="97" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryPredicate&lt;? super L, ? super R&gt;,L) : LeftBoundPredicate&lt;R&gt;" num="108" count="36" type="method"/>
            <line num="109" count="36" type="stmt"/>
            <line falsecount="35" truecount="1" num="109" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/LeftBoundProcedure.java" name="LeftBoundProcedure.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="111" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="48" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="LeftBoundProcedure">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="LeftBoundProcedure(BinaryProcedure&lt;? super L, ? super A&gt;,L)" num="45" count="13" type="method"/>
            <line num="47" count="13" type="stmt"/>
            <line num="50" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(A) : void" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="63" count="18" type="method"/>
            <line num="65" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="65" type="cond"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="68" type="cond"/>
            <line num="69" count="4" type="stmt"/>
            <line num="71" count="12" type="stmt"/>
            <line num="72" count="12" type="stmt"/>
            <line falsecount="7" truecount="3" num="73" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="79" count="16" type="method"/>
            <line num="81" count="16" type="stmt"/>
            <line num="82" count="16" type="stmt"/>
            <line num="83" count="16" type="stmt"/>
            <line num="84" count="16" type="stmt"/>
            <line falsecount="3" truecount="13" num="84" type="cond"/>
            <line num="85" count="13" type="stmt"/>
            <line num="86" count="13" type="stmt"/>
            <line num="88" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="94" count="14" type="method"/>
            <line num="96" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryProcedure&lt;? super L, ? super R&gt;,L) : LeftBoundProcedure&lt;R&gt;" num="107" count="3" type="method"/>
            <line num="108" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="108" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/NullaryFunctionFunction.java" name="NullaryFunctionFunction.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="97" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="NullaryFunctionFunction">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryFunctionFunction(NullaryFunction&lt;? extends T&gt;)" num="42" count="8" type="method"/>
            <line num="43" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(A) : T" num="49" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="56" count="13" type="method"/>
            <line num="58" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="61" type="cond"/>
            <line num="62" count="5" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="11" type="method"/>
            <line num="73" count="11" type="stmt"/>
            <line num="74" count="11" type="stmt"/>
            <line num="75" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="9" type="method"/>
            <line num="83" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(NullaryFunction&lt;? extends T&gt;) : NullaryFunctionFunction&lt;A, T&gt;" num="93" count="2" type="method"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="94" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/NullaryFunctionNullaryPredicate.java" name="NullaryFunctionNullaryPredicate.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="94" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="NullaryFunctionNullaryPredicate">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryFunctionNullaryPredicate(NullaryFunction&lt;Boolean&gt;)" num="39" count="9" type="method"/>
            <line num="40" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="49" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="56" count="12" type="method"/>
            <line num="58" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="61" type="cond"/>
            <line num="62" count="4" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="10" type="method"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="8" type="method"/>
            <line num="83" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(NullaryFunction&lt;Boolean&gt;) : NullaryFunctionNullaryPredicate" num="91" count="2" type="method"/>
            <line num="92" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="92" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/NullaryFunctionNullaryProcedure.java" name="NullaryFunctionNullaryProcedure.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="103" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="NullaryFunctionNullaryProcedure">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryFunctionNullaryProcedure(NullaryFunction&lt;?&gt;)" num="40" count="9" type="method"/>
            <line num="41" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="49" count="3" type="method"/>
            <line num="50" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="56" count="12" type="method"/>
            <line num="58" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="61" type="cond"/>
            <line num="62" count="4" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="10" type="method"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="8" type="method"/>
            <line num="83" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(NullaryFunction&lt;?&gt;) : NullaryFunctionNullaryProcedure" num="99" count="2" type="method"/>
            <line num="100" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="100" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/NullaryPredicateNullaryFunction.java" name="NullaryPredicateNullaryFunction.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="97" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="NullaryPredicateNullaryFunction">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryPredicateNullaryFunction(NullaryPredicate)" num="39" count="9" type="method"/>
            <line num="40" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : Boolean" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="58" count="12" type="method"/>
            <line num="60" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="63" type="cond"/>
            <line num="64" count="4" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="73" count="10" type="method"/>
            <line num="75" count="10" type="stmt"/>
            <line num="76" count="10" type="stmt"/>
            <line num="77" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="83" count="8" type="method"/>
            <line num="85" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(NullaryPredicate) : NullaryPredicateNullaryFunction" num="93" count="2" type="method"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="94" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/NullaryPredicatePredicate.java" name="NullaryPredicatePredicate.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="95" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="NullaryPredicatePredicate">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryPredicatePredicate(NullaryPredicate)" num="41" count="8" type="method"/>
            <line num="42" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object) : boolean" num="48" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="55" count="13" type="method"/>
            <line num="57" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="57" type="cond"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="60" type="cond"/>
            <line num="61" count="5" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="70" count="11" type="method"/>
            <line num="72" count="11" type="stmt"/>
            <line num="73" count="11" type="stmt"/>
            <line num="74" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="80" count="9" type="method"/>
            <line num="82" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(NullaryPredicate) : NullaryPredicatePredicate&lt;A&gt;" num="91" count="2" type="method"/>
            <line num="92" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="92" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/NullaryProcedureNullaryFunction.java" name="NullaryProcedureNullaryFunction.java">
            <metrics coveredelements="26" coveredconditionals="6" complexity="9" loc="96" coveredmethods="6" methods="6" elements="26" classes="1" ncloc="38" statements="14" conditionals="6" coveredstatements="14"/>
            <class name="NullaryProcedureNullaryFunction">
               <metrics coveredelements="26" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="26" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryProcedureNullaryFunction(NullaryProcedure)" num="41" count="8" type="method"/>
            <line num="42" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : T" num="48" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="56" count="13" type="method"/>
            <line num="58" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="61" type="cond"/>
            <line num="62" count="5" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="11" type="method"/>
            <line num="73" count="11" type="stmt"/>
            <line num="74" count="11" type="stmt"/>
            <line num="75" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="9" type="method"/>
            <line num="83" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(NullaryProcedure) : NullaryProcedureNullaryFunction&lt;T&gt;" num="92" count="2" type="method"/>
            <line num="93" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="93" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/NullaryProcedureProcedure.java" name="NullaryProcedureProcedure.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="95" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="NullaryProcedureProcedure">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryProcedureProcedure(NullaryProcedure)" num="41" count="12" type="method"/>
            <line num="42" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(A) : void" num="48" count="45" type="method"/>
            <line num="49" count="45" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="55" count="12" type="method"/>
            <line num="57" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="57" type="cond"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="60" type="cond"/>
            <line num="61" count="4" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="70" count="10" type="method"/>
            <line num="72" count="10" type="stmt"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="80" count="8" type="method"/>
            <line num="82" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(NullaryProcedure) : NullaryProcedureProcedure&lt;A&gt;" num="91" count="6" type="method"/>
            <line num="92" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="92" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/PredicateFunction.java" name="PredicateFunction.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="99" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="37" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="PredicateFunction">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="PredicateFunction(Predicate&lt;? super A&gt;)" num="40" count="22" type="method"/>
            <line num="41" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(A) : Boolean" num="52" count="111" type="method"/>
            <line num="53" count="111" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="59" count="34" type="method"/>
            <line num="61" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="61" type="cond"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="32" type="stmt"/>
            <line falsecount="22" truecount="10" num="64" type="cond"/>
            <line num="65" count="10" type="stmt"/>
            <line num="67" count="22" type="stmt"/>
            <line num="68" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="74" count="42" type="method"/>
            <line num="76" count="42" type="stmt"/>
            <line num="77" count="42" type="stmt"/>
            <line num="78" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="84" count="38" type="method"/>
            <line num="86" count="38" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Predicate&lt;? super A&gt;) : PredicateFunction&lt;A&gt;" num="95" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="96" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/ProcedureFunction.java" name="ProcedureFunction.java">
            <metrics coveredelements="26" coveredconditionals="6" complexity="9" loc="98" coveredmethods="6" methods="6" elements="26" classes="1" ncloc="38" statements="14" conditionals="6" coveredstatements="14"/>
            <class name="ProcedureFunction">
               <metrics coveredelements="26" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="26" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ProcedureFunction(Procedure&lt;? super A&gt;)" num="42" count="18" type="method"/>
            <line num="43" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(A) : T" num="49" count="3" type="method"/>
            <line num="50" count="3" type="stmt"/>
            <line num="51" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="57" count="35" type="method"/>
            <line num="59" count="35" type="stmt"/>
            <line falsecount="33" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="33" type="stmt"/>
            <line falsecount="22" truecount="11" num="62" type="cond"/>
            <line num="63" count="11" type="stmt"/>
            <line num="65" count="22" type="stmt"/>
            <line num="66" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="72" count="43" type="method"/>
            <line num="74" count="43" type="stmt"/>
            <line num="75" count="43" type="stmt"/>
            <line num="76" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="82" count="39" type="method"/>
            <line num="84" count="39" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Procedure&lt;? super A&gt;) : ProcedureFunction&lt;A, T&gt;" num="94" count="2" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="95" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/RightBoundFunction.java" name="RightBoundFunction.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="113" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="49" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="RightBoundFunction">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="RightBoundFunction(BinaryFunction&lt;? super A, ? super R, ? extends T&gt;,R)" num="45" count="15" type="method"/>
            <line num="47" count="15" type="stmt"/>
            <line num="50" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(A) : T" num="56" count="3" type="method"/>
            <line num="57" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="63" count="18" type="method"/>
            <line num="65" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="65" type="cond"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="68" type="cond"/>
            <line num="69" count="4" type="stmt"/>
            <line num="71" count="12" type="stmt"/>
            <line num="72" count="12" type="stmt"/>
            <line falsecount="7" truecount="3" num="73" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="79" count="16" type="method"/>
            <line num="81" count="16" type="stmt"/>
            <line num="82" count="16" type="stmt"/>
            <line num="83" count="16" type="stmt"/>
            <line num="84" count="16" type="stmt"/>
            <line falsecount="3" truecount="13" num="84" type="cond"/>
            <line num="85" count="13" type="stmt"/>
            <line num="86" count="13" type="stmt"/>
            <line num="88" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="94" count="14" type="method"/>
            <line num="96" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryFunction&lt;? super L, ? super R, ? extends T&gt;,R) : RightBoundFunction&lt;L, T&gt;" num="108" count="7" type="method"/>
            <line num="110" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="110" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/RightBoundPredicate.java" name="RightBoundPredicate.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="111" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="48" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="RightBoundPredicate">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="RightBoundPredicate(BinaryPredicate&lt;? super A, ? super R&gt;,R)" num="45" count="61" type="method"/>
            <line num="47" count="61" type="stmt"/>
            <line num="50" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(A) : boolean" num="56" count="83" type="method"/>
            <line num="57" count="83" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="63" count="31" type="method"/>
            <line num="65" count="31" type="stmt"/>
            <line falsecount="27" truecount="4" num="65" type="cond"/>
            <line num="66" count="4" type="stmt"/>
            <line num="68" count="27" type="stmt"/>
            <line falsecount="20" truecount="7" num="68" type="cond"/>
            <line num="69" count="7" type="stmt"/>
            <line num="71" count="20" type="stmt"/>
            <line num="72" count="20" type="stmt"/>
            <line falsecount="14" truecount="4" num="73" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="79" count="28" type="method"/>
            <line num="81" count="28" type="stmt"/>
            <line num="82" count="28" type="stmt"/>
            <line num="83" count="28" type="stmt"/>
            <line num="84" count="28" type="stmt"/>
            <line falsecount="4" truecount="24" num="84" type="cond"/>
            <line num="85" count="24" type="stmt"/>
            <line num="86" count="24" type="stmt"/>
            <line num="88" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="94" count="24" type="method"/>
            <line num="96" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryPredicate&lt;? super L, ? super R&gt;,R) : RightBoundPredicate&lt;L&gt;" num="107" count="44" type="method"/>
            <line num="108" count="44" type="stmt"/>
            <line falsecount="43" truecount="1" num="108" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/adapter/RightBoundProcedure.java" name="RightBoundProcedure.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="11" loc="111" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="48" statements="18" conditionals="10" coveredstatements="18"/>
            <class name="RightBoundProcedure">
               <metrics coveredelements="34" coveredconditionals="10" complexity="11" coveredmethods="6" methods="6" elements="34" statements="18" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="RightBoundProcedure(BinaryProcedure&lt;? super A, ? super R&gt;,R)" num="45" count="15" type="method"/>
            <line num="47" count="15" type="stmt"/>
            <line num="50" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(A) : void" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="63" count="20" type="method"/>
            <line num="65" count="20" type="stmt"/>
            <line falsecount="18" truecount="2" num="65" type="cond"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="18" type="stmt"/>
            <line falsecount="14" truecount="4" num="68" type="cond"/>
            <line num="69" count="4" type="stmt"/>
            <line num="71" count="14" type="stmt"/>
            <line num="72" count="14" type="stmt"/>
            <line falsecount="7" truecount="3" num="73" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="79" count="18" type="method"/>
            <line num="81" count="18" type="stmt"/>
            <line num="82" count="18" type="stmt"/>
            <line num="83" count="18" type="stmt"/>
            <line num="84" count="18" type="stmt"/>
            <line falsecount="5" truecount="13" num="84" type="cond"/>
            <line num="85" count="13" type="stmt"/>
            <line num="86" count="13" type="stmt"/>
            <line num="88" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="94" count="16" type="method"/>
            <line num="96" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="bind(BinaryProcedure&lt;? super L, ? super R&gt;,R) : RightBoundProcedure&lt;L&gt;" num="107" count="3" type="method"/>
            <line num="108" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="108" type="cond"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.aggregator.functions">
         <metrics coveredelements="272" complexity="93" loc="1171" methods="46" classes="15" statements="156" coveredconditionals="70" coveredmethods="46" elements="272" ncloc="392" files="15" conditionals="70" coveredstatements="156"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/DoubleMaxAggregatorBinaryFunction.java" name="DoubleMaxAggregatorBinaryFunction.java">
            <metrics coveredelements="16" coveredconditionals="6" complexity="5" loc="55" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="20" statements="8" conditionals="6" coveredstatements="8"/>
            <class name="DoubleMaxAggregatorBinaryFunction">
               <metrics coveredelements="16" coveredconditionals="6" complexity="5" coveredmethods="2" methods="2" elements="16" statements="8" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="4" visibility="public" signature="evaluate(Double,Double) : Double" num="38" count="34" type="method"/>
            <line num="39" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="32" type="stmt"/>
            <line falsecount="31" truecount="1" num="42" type="cond"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="31" type="stmt"/>
            <line falsecount="17" truecount="14" num="45" type="cond"/>
            <line num="46" count="14" type="stmt"/>
            <line num="48" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/DoubleMaxAggregatorFunction.java" name="DoubleMaxAggregatorFunction.java">
            <metrics coveredelements="18" coveredconditionals="6" complexity="6" loc="61" coveredmethods="2" methods="2" elements="18" classes="1" ncloc="25" statements="10" conditionals="6" coveredstatements="10"/>
            <class name="DoubleMaxAggregatorFunction">
               <metrics coveredelements="18" coveredconditionals="6" complexity="6" coveredmethods="2" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="5" visibility="public" signature="evaluate(List&lt;Double&gt;) : Double" num="39" count="36" type="method"/>
            <line num="40" count="36" type="stmt"/>
            <line falsecount="34" truecount="2" num="40" type="cond"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="34" type="stmt"/>
            <line num="44" count="34" type="stmt"/>
            <line num="45" count="502" type="stmt"/>
            <line falsecount="468" truecount="34" num="45" type="cond"/>
            <line num="46" count="34" type="stmt"/>
            <line num="48" count="468" type="stmt"/>
            <line falsecount="344" truecount="124" num="48" type="cond"/>
            <line num="49" count="124" type="stmt"/>
            <line num="53" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/DoubleMeanValueAggregatorFunction.java" name="DoubleMeanValueAggregatorFunction.java">
            <metrics coveredelements="13" coveredconditionals="2" complexity="4" loc="56" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="21" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="DoubleMeanValueAggregatorFunction">
               <metrics coveredelements="13" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="13" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="3" visibility="public" signature="evaluate(List&lt;Double&gt;) : Double" num="38" count="35" type="method"/>
            <line num="39" count="35" type="stmt"/>
            <line falsecount="33" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="33" type="stmt"/>
            <line num="43" count="33" type="stmt"/>
            <line num="44" count="33" type="stmt"/>
            <line num="45" count="501" type="stmt"/>
            <line num="47" count="33" type="stmt"/>
            <line num="49" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="52" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/DoubleMedianValueAggregatorFunction.java" name="DoubleMedianValueAggregatorFunction.java">
            <metrics coveredelements="30" coveredconditionals="8" complexity="10" loc="122" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="40" statements="17" conditionals="8" coveredstatements="17"/>
            <class name="DoubleMedianValueAggregatorFunction">
               <metrics coveredelements="30" coveredconditionals="8" complexity="10" coveredmethods="5" methods="5" elements="30" statements="17" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DoubleMedianValueAggregatorFunction()" num="55" count="5" type="method"/>
            <line num="56" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleMedianValueAggregatorFunction(boolean)" num="68" count="7" type="method"/>
            <line num="69" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseCopy() : boolean" num="78" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="6" visibility="public" signature="evaluate(List&lt;Double&gt;) : Double" num="92" count="17" type="method"/>
            <line num="93" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="93" type="cond"/>
            <line num="94" count="2" type="stmt"/>
            <line num="97" count="15" type="stmt"/>
            <line falsecount="12" truecount="3" num="97" type="cond"/>
            <line num="98" count="3" type="stmt"/>
            <line num="100" count="12" type="stmt"/>
            <line num="101" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="101" type="cond"/>
            <line num="102" count="8" type="stmt"/>
            <line num="104" count="12" type="stmt"/>
            <line num="105" count="12" type="stmt"/>
            <line num="106" count="12" type="stmt"/>
            <line num="107" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="107" type="cond"/>
            <line num="110" count="6" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="118" count="3" type="method"/>
            <line num="120" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/DoublePercentileAggregatorFunction.java" name="DoublePercentileAggregatorFunction.java">
            <metrics coveredelements="32" coveredconditionals="6" complexity="12" loc="156" coveredmethods="7" methods="7" elements="32" classes="1" ncloc="47" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="DoublePercentileAggregatorFunction">
               <metrics coveredelements="32" coveredconditionals="6" complexity="12" coveredmethods="7" methods="7" elements="32" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="DoublePercentileAggregatorFunction(double)" num="66" count="14" type="method"/>
            <line num="67" count="14" type="stmt"/>
            <line complexity="3" visibility="public" signature="DoublePercentileAggregatorFunction(double,boolean)" num="81" count="19" type="method"/>
            <line num="82" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="82" type="cond"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="17" type="stmt"/>
            <line num="86" count="17" type="stmt"/>
            <line complexity="1" visibility="package" signature="computeRank(List&lt;Double&gt;) : int" num="101" count="10" type="method"/>
            <line num="102" count="10" type="stmt"/>
            <line num="103" count="10" type="stmt"/>
            <line num="104" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluate(List&lt;Double&gt;) : Double" num="117" count="5" type="method"/>
            <line num="118" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="118" type="cond"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="122" type="cond"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPercentile() : double" num="135" count="3" type="method"/>
            <line num="136" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseCopy() : boolean" num="148" count="3" type="method"/>
            <line num="149" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="152" count="3" type="method"/>
            <line num="154" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/DoubleSumAggregatorBinaryFunction.java" name="DoubleSumAggregatorBinaryFunction.java">
            <metrics coveredelements="12" coveredconditionals="4" complexity="4" loc="53" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="17" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="DoubleSumAggregatorBinaryFunction">
               <metrics coveredelements="12" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="12" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="3" visibility="public" signature="evaluate(Double,Double) : Double" num="39" count="34" type="method"/>
            <line num="40" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="40" type="cond"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="32" type="stmt"/>
            <line falsecount="31" truecount="1" num="43" type="cond"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/DoubleSumAggregatorFunction.java" name="DoubleSumAggregatorFunction.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="4" loc="53" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="19" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="DoubleSumAggregatorFunction">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="3" visibility="public" signature="evaluate(List&lt;Double&gt;) : Double" num="38" count="36" type="method"/>
            <line num="39" count="36" type="stmt"/>
            <line falsecount="34" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="34" type="stmt"/>
            <line num="43" count="34" type="stmt"/>
            <line num="44" count="502" type="stmt"/>
            <line num="46" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/IntegerCountAggregatorBinaryFunction.java" name="IntegerCountAggregatorBinaryFunction.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="60" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="14" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="IntegerCountAggregatorBinaryFunction">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="49" count="34" type="method"/>
            <line num="50" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="50" type="cond"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/IntegerMaxAggregatorBinaryFunction.java" name="IntegerMaxAggregatorBinaryFunction.java">
            <metrics coveredelements="16" coveredconditionals="6" complexity="5" loc="55" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="20" statements="8" conditionals="6" coveredstatements="8"/>
            <class name="IntegerMaxAggregatorBinaryFunction">
               <metrics coveredelements="16" coveredconditionals="6" complexity="5" coveredmethods="2" methods="2" elements="16" statements="8" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="4" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="38" count="34" type="method"/>
            <line num="39" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="32" type="stmt"/>
            <line falsecount="31" truecount="1" num="42" type="cond"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="31" type="stmt"/>
            <line falsecount="15" truecount="16" num="45" type="cond"/>
            <line num="46" count="16" type="stmt"/>
            <line num="48" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/IntegerMaxAggregatorFunction.java" name="IntegerMaxAggregatorFunction.java">
            <metrics coveredelements="18" coveredconditionals="6" complexity="6" loc="60" coveredmethods="2" methods="2" elements="18" classes="1" ncloc="25" statements="10" conditionals="6" coveredstatements="10"/>
            <class name="IntegerMaxAggregatorFunction">
               <metrics coveredelements="18" coveredconditionals="6" complexity="6" coveredmethods="2" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="5" visibility="public" signature="evaluate(List&lt;Integer&gt;) : Integer" num="39" count="36" type="method"/>
            <line num="40" count="36" type="stmt"/>
            <line falsecount="34" truecount="2" num="40" type="cond"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="34" type="stmt"/>
            <line num="44" count="34" type="stmt"/>
            <line num="45" count="502" type="stmt"/>
            <line falsecount="468" truecount="34" num="45" type="cond"/>
            <line num="46" count="34" type="stmt"/>
            <line num="48" count="468" type="stmt"/>
            <line falsecount="364" truecount="104" num="48" type="cond"/>
            <line num="49" count="104" type="stmt"/>
            <line num="53" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/IntegerMeanValueAggregatorFunction.java" name="IntegerMeanValueAggregatorFunction.java">
            <metrics coveredelements="13" coveredconditionals="2" complexity="4" loc="56" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="21" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="IntegerMeanValueAggregatorFunction">
               <metrics coveredelements="13" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="13" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="3" visibility="public" signature="evaluate(List&lt;Integer&gt;) : Integer" num="38" count="35" type="method"/>
            <line num="39" count="35" type="stmt"/>
            <line falsecount="33" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="33" type="stmt"/>
            <line num="43" count="33" type="stmt"/>
            <line num="44" count="33" type="stmt"/>
            <line num="45" count="501" type="stmt"/>
            <line num="47" count="33" type="stmt"/>
            <line num="49" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="52" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/IntegerMedianValueAggregatorFunction.java" name="IntegerMedianValueAggregatorFunction.java">
            <metrics coveredelements="30" coveredconditionals="8" complexity="10" loc="122" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="40" statements="17" conditionals="8" coveredstatements="17"/>
            <class name="IntegerMedianValueAggregatorFunction">
               <metrics coveredelements="30" coveredconditionals="8" complexity="10" coveredmethods="5" methods="5" elements="30" statements="17" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="IntegerMedianValueAggregatorFunction()" num="55" count="5" type="method"/>
            <line num="56" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerMedianValueAggregatorFunction(boolean)" num="68" count="7" type="method"/>
            <line num="69" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseCopy() : boolean" num="78" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="6" visibility="public" signature="evaluate(List&lt;Integer&gt;) : Integer" num="92" count="17" type="method"/>
            <line num="93" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="93" type="cond"/>
            <line num="94" count="2" type="stmt"/>
            <line num="97" count="15" type="stmt"/>
            <line falsecount="12" truecount="3" num="97" type="cond"/>
            <line num="98" count="3" type="stmt"/>
            <line num="100" count="12" type="stmt"/>
            <line num="101" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="101" type="cond"/>
            <line num="102" count="8" type="stmt"/>
            <line num="104" count="12" type="stmt"/>
            <line num="105" count="12" type="stmt"/>
            <line num="106" count="12" type="stmt"/>
            <line num="107" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="107" type="cond"/>
            <line num="110" count="6" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="118" count="3" type="method"/>
            <line num="120" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/IntegerPercentileAggregatorFunction.java" name="IntegerPercentileAggregatorFunction.java">
            <metrics coveredelements="32" coveredconditionals="6" complexity="12" loc="156" coveredmethods="7" methods="7" elements="32" classes="1" ncloc="47" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="IntegerPercentileAggregatorFunction">
               <metrics coveredelements="32" coveredconditionals="6" complexity="12" coveredmethods="7" methods="7" elements="32" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="IntegerPercentileAggregatorFunction(double)" num="66" count="14" type="method"/>
            <line num="67" count="14" type="stmt"/>
            <line complexity="3" visibility="public" signature="IntegerPercentileAggregatorFunction(double,boolean)" num="81" count="19" type="method"/>
            <line num="82" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="82" type="cond"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="17" type="stmt"/>
            <line num="86" count="17" type="stmt"/>
            <line complexity="1" visibility="package" signature="computeRank(List&lt;Integer&gt;) : int" num="101" count="10" type="method"/>
            <line num="102" count="10" type="stmt"/>
            <line num="103" count="10" type="stmt"/>
            <line num="104" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluate(List&lt;Integer&gt;) : Integer" num="117" count="5" type="method"/>
            <line num="118" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="118" type="cond"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="122" type="cond"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPercentile() : double" num="135" count="3" type="method"/>
            <line num="136" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseCopy() : boolean" num="148" count="3" type="method"/>
            <line num="149" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="152" count="3" type="method"/>
            <line num="154" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/IntegerSumAggregatorBinaryFunction.java" name="IntegerSumAggregatorBinaryFunction.java">
            <metrics coveredelements="12" coveredconditionals="4" complexity="4" loc="53" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="17" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="IntegerSumAggregatorBinaryFunction">
               <metrics coveredelements="12" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="12" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="3" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="39" count="34" type="method"/>
            <line num="40" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="40" type="cond"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="32" type="stmt"/>
            <line falsecount="31" truecount="1" num="43" type="cond"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/functions/IntegerSumAggregatorFunction.java" name="IntegerSumAggregatorFunction.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="4" loc="53" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="19" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="IntegerSumAggregatorFunction">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="3" visibility="public" signature="evaluate(List&lt;Integer&gt;) : Integer" num="38" count="36" type="method"/>
            <line num="39" count="36" type="stmt"/>
            <line falsecount="34" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="34" type="stmt"/>
            <line num="43" count="34" type="stmt"/>
            <line num="44" count="502" type="stmt"/>
            <line num="46" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.core.algorithm">
         <metrics coveredelements="321" complexity="118" loc="1409" methods="82" classes="19" statements="176" coveredconditionals="64" coveredmethods="82" elements="324" ncloc="537" files="14" conditionals="66" coveredstatements="175"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/DoUntil.java" name="DoUntil.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="54" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="17" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="DoUntil">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="DoUntil(NullaryProcedure,NullaryPredicate)" num="34" count="6" type="method"/>
            <line num="35" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="41" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="44" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="3" type="method"/>
            <line num="52" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/DoWhile.java" name="DoWhile.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="54" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="17" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="DoWhile">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="DoWhile(NullaryProcedure,NullaryPredicate)" num="34" count="6" type="method"/>
            <line num="35" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="41" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="44" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="3" type="method"/>
            <line num="52" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/FindWithinGenerator.java" name="FindWithinGenerator.java">
            <metrics coveredelements="53" coveredconditionals="14" complexity="17" loc="168" coveredmethods="9" methods="9" elements="53" classes="2" ncloc="75" statements="30" conditionals="14" coveredstatements="30"/>
            <class name="FindWithinGenerator">
               <metrics coveredelements="45" coveredconditionals="12" complexity="13" coveredmethods="7" methods="7" elements="45" statements="26" conditionals="12" coveredstatements="26"/>
            </class>
            <class name="FindWithinGenerator.FindProcedure">
               <metrics coveredelements="8" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="FindProcedure(Predicate&lt;? super T&gt;)" num="63" count="4" type="method"/>
            <line num="64" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="run(T) : void" num="70" count="32" type="method"/>
            <line num="71" count="32" type="stmt"/>
            <line falsecount="30" truecount="2" num="71" type="cond"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="FindWithinGenerator()" num="91" count="8" type="method"/>
            <line num="92" count="8" type="stmt"/>
            <line num="93" count="8" type="stmt"/>
            <line num="94" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="FindWithinGenerator(E)" num="101" count="9" type="method"/>
            <line num="102" count="9" type="stmt"/>
            <line num="103" count="9" type="stmt"/>
            <line num="104" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate(Generator&lt;? extends E&gt;,Predicate&lt;? super E&gt;) : E" num="112" count="4" type="method"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="115" type="cond"/>
            <line num="116" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="116" type="cond"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="127" count="20" type="method"/>
            <line num="129" count="20" type="stmt"/>
            <line falsecount="16" truecount="4" num="129" type="cond"/>
            <line num="130" count="4" type="stmt"/>
            <line num="132" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="132" type="cond"/>
            <line num="133" count="4" type="stmt"/>
            <line num="135" count="12" type="stmt"/>
            <line num="136" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="143" count="19" type="method"/>
            <line num="145" count="19" type="stmt"/>
            <line falsecount="11" truecount="8" num="145" type="cond"/>
            <line num="146" count="8" type="stmt"/>
            <line num="148" count="11" type="stmt"/>
            <line num="149" count="11" type="stmt"/>
            <line falsecount="7" truecount="4" num="149" type="cond"/>
            <line num="150" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="156" count="9" type="method"/>
            <line num="158" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : FindWithinGenerator&lt;Object&gt;" num="165" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/FoldLeft.java" name="FoldLeft.java">
            <metrics coveredelements="42" coveredconditionals="9" complexity="15" loc="161" coveredmethods="10" methods="10" elements="43" classes="2" ncloc="63" statements="23" conditionals="10" coveredstatements="23"/>
            <class name="FoldLeft">
               <metrics coveredelements="24" coveredconditionals="4" complexity="8" coveredmethods="6" methods="6" elements="24" statements="14" conditionals="4" coveredstatements="14"/>
            </class>
            <class name="FoldLeft.FoldLeftHelper">
               <metrics coveredelements="18" coveredconditionals="5" complexity="7" coveredmethods="4" methods="4" elements="19" statements="9" conditionals="6" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="FoldLeftHelper(BinaryFunction&lt;? super T, ? super T, ? extends T&gt;)" num="59" count="9" type="method"/>
            <line num="60" count="9" type="stmt"/>
            <line complexity="2" visibility="package" signature="FoldLeftHelper(T,BinaryFunction&lt;? super T, ? super T, ? extends T&gt;)" num="69" count="11" type="method"/>
            <line num="70" count="11" type="stmt"/>
            <line num="71" count="11" type="stmt"/>
            <line falsecount="9" truecount="2" num="71" type="cond"/>
            <line num="72" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(T) : void" num="78" count="140" type="method"/>
            <line num="79" count="140" type="stmt"/>
            <line falsecount="131" truecount="9" num="79" type="cond"/>
            <line num="80" count="9" type="stmt"/>
            <line num="81" count="9" type="stmt"/>
            <line num="83" count="131" type="stmt"/>
            <line complexity="2" visibility="package" signature="getResult() : T" num="91" count="11" type="method"/>
            <line num="92" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="92" type="cond"/>
            <line complexity="1" visibility="public" signature="FoldLeft(BinaryFunction&lt;? super T, ? super T, ? extends T&gt;)" num="106" count="12" type="method"/>
            <line num="107" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;T&gt;) : T" num="114" count="9" type="method"/>
            <line num="115" count="9" type="stmt"/>
            <line num="116" count="9" type="stmt"/>
            <line num="117" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;T&gt;,T) : T" num="125" count="2" type="method"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="134" count="5" type="method"/>
            <line num="136" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="136" type="cond"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="139" type="cond"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="148" count="5" type="method"/>
            <line num="150" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="156" count="3" type="method"/>
            <line num="158" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/FoldRight.java" name="FoldRight.java">
            <metrics coveredelements="47" coveredconditionals="11" complexity="16" loc="173" coveredmethods="10" methods="10" elements="49" classes="2" ncloc="70" statements="27" conditionals="12" coveredstatements="26"/>
            <class name="FoldRight">
               <metrics coveredelements="24" coveredconditionals="4" complexity="8" coveredmethods="6" methods="6" elements="24" statements="14" conditionals="4" coveredstatements="14"/>
            </class>
            <class name="FoldRight.FoldRightHelper">
               <metrics coveredelements="23" coveredconditionals="7" complexity="8" coveredmethods="4" methods="4" elements="25" statements="13" conditionals="8" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="FoldRightHelper(BinaryFunction&lt;? super T, ? super T, ? extends T&gt;)" num="65" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="FoldRightHelper(T,BinaryFunction&lt;? super T, ? super T, ? extends T&gt;)" num="75" count="3" type="method"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="77" type="cond"/>
            <line num="78" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(T) : void" num="84" count="20" type="method"/>
            <line num="85" count="20" type="stmt"/>
            <line complexity="4" visibility="package" signature="getResult() : T" num="93" count="3" type="method"/>
            <line num="94" count="3" type="stmt"/>
            <line num="95" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="95" type="cond"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line falsecount="3" truecount="19" num="101" type="cond"/>
            <line num="102" count="19" type="stmt"/>
            <line num="104" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="FoldRight(BinaryFunction&lt;? super T, ? super T, ? extends T&gt;)" num="118" count="4" type="method"/>
            <line num="119" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;T&gt;) : T" num="126" count="1" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;T&gt;,T) : T" num="137" count="2" type="method"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="146" count="5" type="method"/>
            <line num="148" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="148" type="cond"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="151" type="cond"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="160" count="5" type="method"/>
            <line num="162" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="168" count="3" type="method"/>
            <line num="170" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/GeneratorContains.java" name="GeneratorContains.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="110" coveredmethods="7" methods="7" elements="16" classes="2" ncloc="38" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="GeneratorContains">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="GeneratorContains.ContainsProcedure">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ContainsProcedure(Predicate&lt;? super T&gt;)" num="56" count="6" type="method"/>
            <line num="57" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(T) : void" num="63" count="30" type="method"/>
            <line num="64" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Generator&lt;? extends T&gt;,Predicate&lt;? super T&gt;) : boolean" num="73" count="6" type="method"/>
            <line num="74" count="6" type="stmt"/>
            <line num="75" count="6" type="stmt"/>
            <line num="76" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="82" count="5" type="method"/>
            <line num="84" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="90" count="5" type="method"/>
            <line num="92" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="98" count="3" type="method"/>
            <line num="100" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : GeneratorContains&lt;Object&gt;" num="107" count="4" type="method"/>
            <line num="108" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/InPlaceTransform.java" name="InPlaceTransform.java">
            <metrics coveredelements="13" coveredconditionals="2" complexity="6" loc="80" coveredmethods="5" methods="5" elements="13" classes="1" ncloc="28" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="InPlaceTransform">
               <metrics coveredelements="13" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="13" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="2" visibility="public" signature="run(ListIterator&lt;T&gt;,Function&lt;? super T, ? extends T&gt;) : void" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="43" type="cond"/>
            <line num="44" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="51" count="5" type="method"/>
            <line num="53" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="59" count="5" type="method"/>
            <line num="61" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="67" count="3" type="method"/>
            <line num="69" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : InPlaceTransform&lt;Object&gt;" num="76" count="3" type="method"/>
            <line num="77" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/IndexOfInGenerator.java" name="IndexOfInGenerator.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="9" loc="127" coveredmethods="7" methods="7" elements="22" classes="2" ncloc="46" statements="13" conditionals="2" coveredstatements="13"/>
            <class name="IndexOfInGenerator">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="IndexOfInGenerator.IndexProcedure">
               <metrics coveredelements="10" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="package" signature="IndexProcedure(LoopGenerator&lt;? extends T&gt;,Predicate&lt;? super T&gt;)" num="68" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="run(T) : void" num="76" count="4" type="method"/>
            <line num="77" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="77" type="cond"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(LoopGenerator&lt;? extends T&gt;,Predicate&lt;? super T&gt;) : Number" num="90" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="99" count="5" type="method"/>
            <line num="101" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="107" count="5" type="method"/>
            <line num="109" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="115" count="3" type="method"/>
            <line num="117" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IndexOfInGenerator&lt;Object&gt;" num="124" count="3" type="method"/>
            <line num="125" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/PredicatedLoop.java" name="PredicatedLoop.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="8" loc="92" coveredmethods="5" methods="5" elements="27" classes="1" ncloc="39" statements="18" conditionals="4" coveredstatements="18"/>
            <class name="PredicatedLoop">
               <metrics coveredelements="27" coveredconditionals="4" complexity="8" coveredmethods="5" methods="5" elements="27" statements="18" conditionals="4" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="protected" signature="PredicatedLoop(NullaryProcedure,NullaryPredicate)" num="42" count="47" type="method"/>
            <line num="43" count="47" type="stmt"/>
            <line num="44" count="47" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getBody() : NullaryProcedure" num="51" count="124" type="method"/>
            <line num="52" count="124" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTest() : NullaryPredicate" num="59" count="153" type="method"/>
            <line num="60" count="153" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="66" count="20" type="method"/>
            <line num="68" count="20" type="stmt"/>
            <line falsecount="16" truecount="4" num="68" type="cond"/>
            <line num="69" count="4" type="stmt"/>
            <line num="71" count="16" type="stmt"/>
            <line falsecount="8" truecount="8" num="71" type="cond"/>
            <line num="72" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="81" count="20" type="method"/>
            <line num="83" count="20" type="stmt"/>
            <line num="84" count="20" type="stmt"/>
            <line num="85" count="20" type="stmt"/>
            <line num="86" count="20" type="stmt"/>
            <line num="87" count="20" type="stmt"/>
            <line num="88" count="20" type="stmt"/>
            <line num="89" count="20" type="stmt"/>
            <line num="90" count="20" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/RecursiveEvaluation.java" name="RecursiveEvaluation.java">
            <metrics coveredelements="39" coveredconditionals="10" complexity="12" loc="118" coveredmethods="7" methods="7" elements="39" classes="1" ncloc="52" statements="22" conditionals="10" coveredstatements="22"/>
            <class name="RecursiveEvaluation">
               <metrics coveredelements="39" coveredconditionals="10" complexity="12" coveredmethods="7" methods="7" elements="39" statements="22" conditionals="10" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="RecursiveEvaluation(NullaryFunction&lt;?&gt;)" num="43" count="51" type="method"/>
            <line num="44" count="51" type="stmt"/>
            <line complexity="2" visibility="public" signature="RecursiveEvaluation(NullaryFunction&lt;?&gt;,Class&lt;?&gt;)" num="52" count="53" type="method"/>
            <line num="53" count="53" type="stmt"/>
            <line num="54" count="52" type="stmt"/>
            <line falsecount="51" truecount="1" num="54" type="cond"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="51" type="stmt"/>
            <line num="58" count="51" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate() : Object" num="64" count="48" type="method"/>
            <line num="65" count="48" type="stmt"/>
            <line num="68" count="48" type="stmt"/>
            <line num="69" count="246" type="stmt"/>
            <line num="70" count="246" type="stmt"/>
            <line falsecount="48" truecount="198" num="70" type="cond"/>
            <line num="71" count="198" type="stmt"/>
            <line num="72" count="198" type="stmt"/>
            <line num="74" count="48" type="stmt"/>
            <line num="77" count="48" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="83" count="5" type="method"/>
            <line num="85" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="85" type="cond"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="88" type="cond"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="97" count="5" type="method"/>
            <line num="99" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="105" count="3" type="method"/>
            <line num="107" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="getClass(NullaryFunction&lt;?&gt;) : Class&lt;?&gt;" num="115" count="52" type="method"/>
            <line num="116" count="52" type="stmt"/>
            <line falsecount="51" truecount="1" num="116" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/RemoveMatching.java" name="RemoveMatching.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="7" loc="82" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="30" statements="7" conditionals="4" coveredstatements="7"/>
            <class name="RemoveMatching">
               <metrics coveredelements="16" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="16" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="3" visibility="public" signature="run(Iterator&lt;? extends T&gt;,Predicate&lt;? super T&gt;) : void" num="42" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="43" type="cond"/>
            <line num="44" count="20" type="stmt"/>
            <line falsecount="10" truecount="10" num="44" type="cond"/>
            <line num="45" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="53" count="5" type="method"/>
            <line num="55" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="61" count="5" type="method"/>
            <line num="63" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="69" count="3" type="method"/>
            <line num="71" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : RemoveMatching&lt;Object&gt;" num="78" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/RetainMatching.java" name="RetainMatching.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="82" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="28" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="RetainMatching">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="run(Iterator&lt;? extends T&gt;,Predicate&lt;? super T&gt;) : void" num="47" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="54" count="5" type="method"/>
            <line num="56" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="62" count="5" type="method"/>
            <line num="64" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="70" count="3" type="method"/>
            <line num="72" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : RetainMatching&lt;Object&gt;" num="79" count="3" type="method"/>
            <line num="80" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/UntilDo.java" name="UntilDo.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="54" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="17" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="UntilDo">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="UntilDo(NullaryPredicate,NullaryProcedure)" num="34" count="29" type="method"/>
            <line num="35" count="29" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="41" count="26" type="method"/>
            <line num="42" count="26" type="stmt"/>
            <line falsecount="26" truecount="97" num="42" type="cond"/>
            <line num="43" count="97" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="3" type="method"/>
            <line num="52" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/algorithm/WhileDo.java" name="WhileDo.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="54" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="17" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="WhileDo">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="WhileDo(NullaryPredicate,NullaryProcedure)" num="34" count="6" type="method"/>
            <line num="35" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="41" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="42" type="cond"/>
            <line num="43" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="3" type="method"/>
            <line num="52" count="3" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.generator.loop">
         <metrics coveredelements="215" complexity="67" loc="725" methods="43" classes="8" statements="133" coveredconditionals="43" coveredmethods="42" elements="222" ncloc="322" files="7" conditionals="46" coveredstatements="130"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/loop/GenerateUntil.java" name="GenerateUntil.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="8" loc="90" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="43" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="GenerateUntil">
               <metrics coveredelements="30" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="30" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="GenerateUntil(Generator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="43" count="11" type="method"/>
            <line num="44" count="11" type="stmt"/>
            <line num="45" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Procedure&lt;? super E&gt;) : void" num="51" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(E) : void" num="53" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="55" type="cond"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="65" count="5" type="method"/>
            <line num="67" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="67" type="cond"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="70" type="cond"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="3" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="80" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/loop/GenerateWhile.java" name="GenerateWhile.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="8" loc="90" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="43" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="GenerateWhile">
               <metrics coveredelements="30" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="30" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="GenerateWhile(Generator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="43" count="11" type="method"/>
            <line num="44" count="11" type="stmt"/>
            <line num="45" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Procedure&lt;? super E&gt;) : void" num="51" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(E) : void" num="53" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="55" type="cond"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="65" count="5" type="method"/>
            <line num="67" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="67" type="cond"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="70" type="cond"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="3" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="80" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/loop/IteratorToGeneratorAdapter.java" name="IteratorToGeneratorAdapter.java">
            <metrics coveredelements="55" coveredconditionals="13" complexity="21" loc="192" coveredmethods="12" methods="13" elements="62" classes="2" ncloc="81" statements="33" conditionals="16" coveredstatements="30"/>
            <class name="IteratorToGeneratorAdapter">
               <metrics coveredelements="36" coveredconditionals="11" complexity="13" coveredmethods="7" methods="7" elements="37" statements="18" conditionals="12" coveredstatements="18"/>
            </class>
            <class name="IteratorToGeneratorAdapter.EqualityIterator">
               <metrics coveredelements="19" coveredconditionals="2" complexity="8" coveredmethods="5" methods="6" elements="25" statements="15" conditionals="4" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="package" signature="EqualityIterator(Iterable&lt;? extends E&gt;)" num="50" count="166" type="method"/>
            <line num="51" count="166" type="stmt"/>
            <line num="52" count="166" type="stmt"/>
            <line num="53" count="166" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="59" count="800751" type="method"/>
            <line num="60" count="800751" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="66" count="800633" type="method"/>
            <line num="67" count="800633" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="80" count="16" type="method"/>
            <line num="82" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="94" count="24" type="method"/>
            <line num="96" count="24" type="stmt"/>
            <line num="97" count="24" type="stmt"/>
            <line num="98" count="24" type="stmt"/>
            <line num="99" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="IteratorToGeneratorAdapter(Iterator&lt;? extends E&gt;)" num="117" count="210" type="method"/>
            <line num="118" count="210" type="stmt"/>
            <line complexity="3" visibility="public" signature="run(Procedure&lt;? super E&gt;) : void" num="126" count="154" type="method"/>
            <line num="127" count="154" type="stmt"/>
            <line falsecount="147" truecount="800854" num="127" type="cond"/>
            <line num="128" count="800854" type="stmt"/>
            <line num="129" count="800854" type="stmt"/>
            <line falsecount="800847" truecount="7" num="129" type="cond"/>
            <line num="130" count="7" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="138" count="32" type="method"/>
            <line num="140" count="32" type="stmt"/>
            <line falsecount="26" truecount="6" num="140" type="cond"/>
            <line num="141" count="6" type="stmt"/>
            <line num="143" count="26" type="stmt"/>
            <line falsecount="22" truecount="4" num="143" type="cond"/>
            <line num="144" count="4" type="stmt"/>
            <line num="146" count="22" type="stmt"/>
            <line num="147" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="153" count="34" type="method"/>
            <line num="155" count="34" type="stmt"/>
            <line num="156" count="34" type="stmt"/>
            <line num="157" count="34" type="stmt"/>
            <line num="158" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="164" count="10" type="method"/>
            <line num="166" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="adapt(Iterator&lt;? extends E&gt;) : IteratorToGeneratorAdapter&lt;E&gt;" num="178" count="27" type="method"/>
            <line num="179" count="27" type="stmt"/>
            <line falsecount="26" truecount="1" num="179" type="cond"/>
            <line complexity="2" visibility="public" signature="adapt(Iterable&lt;? extends E&gt;) : IteratorToGeneratorAdapter&lt;E&gt;" num="189" count="166" type="method"/>
            <line num="190" count="166" type="stmt"/>
            <line falsecount="166" truecount="0" num="190" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/loop/LoopGenerator.java" name="LoopGenerator.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="7" loc="78" coveredmethods="5" methods="5" elements="14" classes="1" ncloc="25" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="LoopGenerator">
               <metrics coveredelements="14" coveredconditionals="2" complexity="7" coveredmethods="5" methods="5" elements="14" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="LoopGenerator()" num="37" count="230" type="method"/>
            <line num="38" count="230" type="stmt"/>
            <line complexity="1" visibility="public" signature="LoopGenerator(Generator&lt;? extends E&gt;)" num="47" count="298" type="method"/>
            <line num="48" count="298" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getWrappedGenerator() : Generator&lt;? extends E&gt;" num="55" count="69" type="method"/>
            <line num="56" count="69" type="stmt"/>
            <line complexity="3" visibility="public" signature="stop() : void" num="62" count="32" type="method"/>
            <line num="63" count="32" type="stmt"/>
            <line falsecount="25" truecount="7" num="63" type="cond"/>
            <line num="64" count="7" type="stmt"/>
            <line num="66" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStopped() : boolean" num="74" count="800890" type="method"/>
            <line num="75" count="800890" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/loop/TransformedGenerator.java" name="TransformedGenerator.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="7" loc="93" coveredmethods="5" methods="5" elements="26" classes="1" ncloc="42" statements="17" conditionals="4" coveredstatements="17"/>
            <class name="TransformedGenerator">
               <metrics coveredelements="26" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="TransformedGenerator(Generator&lt;? extends I&gt;,Function&lt;? super I, ? extends E&gt;)" num="46" count="21" type="method"/>
            <line num="48" count="21" type="stmt"/>
            <line num="49" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Procedure&lt;? super E&gt;) : void" num="56" count="11" type="method"/>
            <line num="58" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(I) : void" num="59" count="137" type="method"/>
            <line num="60" count="137" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="68" count="5" type="method"/>
            <line num="70" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="70" type="cond"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="73" type="cond"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="83" count="4" type="method"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/loop/UntilGenerate.java" name="UntilGenerate.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="8" loc="91" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="44" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="UntilGenerate">
               <metrics coveredelements="30" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="30" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="UntilGenerate(Predicate&lt;? super E&gt;,Generator&lt;? extends E&gt;)" num="43" count="12" type="method"/>
            <line num="44" count="12" type="stmt"/>
            <line num="45" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Procedure&lt;? super E&gt;) : void" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(E) : void" num="53" count="10" type="method"/>
            <line num="54" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="54" type="cond"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="66" count="5" type="method"/>
            <line num="68" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="68" type="cond"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="71" type="cond"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="81" count="4" type="method"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/loop/WhileGenerate.java" name="WhileGenerate.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="8" loc="91" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="44" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="WhileGenerate">
               <metrics coveredelements="30" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="30" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="WhileGenerate(Predicate&lt;? super E&gt;,Generator&lt;? extends E&gt;)" num="43" count="12" type="method"/>
            <line num="44" count="12" type="stmt"/>
            <line num="45" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Procedure&lt;? super E&gt;) : void" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(E) : void" num="53" count="9" type="method"/>
            <line num="54" count="9" type="stmt"/>
            <line falsecount="7" truecount="2" num="54" type="cond"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="7" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="66" count="5" type="method"/>
            <line num="68" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="68" type="cond"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="71" type="cond"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="81" count="4" type="method"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.core.comparator">
         <metrics coveredelements="277" complexity="105" loc="1350" methods="82" classes="11" statements="149" coveredconditionals="46" coveredmethods="82" elements="277" ncloc="483" files="11" conditionals="46" coveredstatements="149"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/ComparableComparator.java" name="ComparableComparator.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="6" loc="84" coveredmethods="6" methods="6" elements="12" classes="1" ncloc="28" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ComparableComparator">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparableComparator()" num="39" count="6" type="method"/>
            <line num="40" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(E,E) : int" num="46" count="153" type="method"/>
            <line num="47" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="53" count="61" type="method"/>
            <line num="55" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="61" count="104" type="method"/>
            <line num="63" count="104" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="69" count="188" type="method"/>
            <line num="71" count="188" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : ComparableComparator&lt;E&gt;" num="79" count="15" type="method"/>
            <line num="81" count="15" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/ComparatorFunction.java" name="ComparatorFunction.java">
            <metrics coveredelements="21" coveredconditionals="4" complexity="8" loc="99" coveredmethods="6" methods="6" elements="21" classes="1" ncloc="37" statements="11" conditionals="4" coveredstatements="11"/>
            <class name="ComparatorFunction">
               <metrics coveredelements="21" coveredconditionals="4" complexity="8" coveredmethods="6" methods="6" elements="21" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparatorFunction(Comparator&lt;? super T&gt;)" num="47" count="5" type="method"/>
            <line num="48" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(T,T) : Integer" num="54" count="25" type="method"/>
            <line num="55" count="25" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="61" count="12" type="method"/>
            <line num="63" count="12" type="stmt"/>
            <line falsecount="7" truecount="5" num="63" type="cond"/>
            <line num="64" count="5" type="stmt"/>
            <line num="66" count="7" type="stmt"/>
            <line falsecount="4" truecount="3" num="66" type="cond"/>
            <line num="67" count="3" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="76" count="11" type="method"/>
            <line num="78" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="84" count="9" type="method"/>
            <line num="86" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : ComparatorFunction&lt;T&gt;" num="95" count="3" type="method"/>
            <line num="97" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/IsEquivalent.java" name="IsEquivalent.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="10" loc="135" coveredmethods="8" methods="8" elements="27" classes="1" ncloc="48" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="IsEquivalent">
               <metrics coveredelements="27" coveredconditionals="4" complexity="10" coveredmethods="8" methods="8" elements="27" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="IsEquivalent()" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsEquivalent(Comparator&lt;? super T&gt;)" num="65" count="7" type="method"/>
            <line num="66" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T,T) : boolean" num="75" count="13" type="method"/>
            <line num="76" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="82" count="12" type="method"/>
            <line num="84" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="84" type="cond"/>
            <line num="85" count="4" type="stmt"/>
            <line num="87" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="87" type="cond"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="97" count="10" type="method"/>
            <line num="99" count="10" type="stmt"/>
            <line num="101" count="10" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="8" type="method"/>
            <line num="110" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsEquivalent&lt;T&gt;" num="119" count="5" type="method"/>
            <line num="121" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(T) : Predicate&lt;T&gt;" num="131" count="2" type="method"/>
            <line num="132" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/IsGreaterThan.java" name="IsGreaterThan.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="10" loc="134" coveredmethods="8" methods="8" elements="27" classes="1" ncloc="47" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="IsGreaterThan">
               <metrics coveredelements="27" coveredconditionals="4" complexity="10" coveredmethods="8" methods="8" elements="27" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="IsGreaterThan()" num="52" count="16" type="method"/>
            <line num="54" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsGreaterThan(Comparator&lt;? super T&gt;)" num="65" count="17" type="method"/>
            <line num="66" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T,T) : boolean" num="75" count="13" type="method"/>
            <line num="76" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="82" count="14" type="method"/>
            <line num="84" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="84" type="cond"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="87" type="cond"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line num="91" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="97" count="12" type="method"/>
            <line num="99" count="12" type="stmt"/>
            <line num="101" count="12" type="stmt"/>
            <line num="102" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="10" type="method"/>
            <line num="110" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsGreaterThan&lt;T&gt;" num="119" count="6" type="method"/>
            <line num="120" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(T) : Predicate&lt;T&gt;" num="130" count="2" type="method"/>
            <line num="131" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/IsGreaterThanOrEqual.java" name="IsGreaterThanOrEqual.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="10" loc="135" coveredmethods="8" methods="8" elements="27" classes="1" ncloc="48" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="IsGreaterThanOrEqual">
               <metrics coveredelements="27" coveredconditionals="4" complexity="10" coveredmethods="8" methods="8" elements="27" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="IsGreaterThanOrEqual()" num="53" count="12" type="method"/>
            <line num="55" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsGreaterThanOrEqual(Comparator&lt;? super T&gt;)" num="66" count="13" type="method"/>
            <line num="67" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T,T) : boolean" num="76" count="13" type="method"/>
            <line num="77" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="83" count="14" type="method"/>
            <line num="85" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="85" type="cond"/>
            <line num="86" count="2" type="stmt"/>
            <line num="88" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="88" type="cond"/>
            <line num="89" count="4" type="stmt"/>
            <line num="91" count="8" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="98" count="12" type="method"/>
            <line num="100" count="12" type="stmt"/>
            <line num="102" count="12" type="stmt"/>
            <line num="103" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="109" count="10" type="method"/>
            <line num="111" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsGreaterThanOrEqual&lt;T&gt;" num="120" count="2" type="method"/>
            <line num="121" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(T) : Predicate&lt;T&gt;" num="131" count="2" type="method"/>
            <line num="132" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/IsLessThan.java" name="IsLessThan.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="10" loc="134" coveredmethods="8" methods="8" elements="27" classes="1" ncloc="47" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="IsLessThan">
               <metrics coveredelements="27" coveredconditionals="4" complexity="10" coveredmethods="8" methods="8" elements="27" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="IsLessThan()" num="52" count="14" type="method"/>
            <line num="54" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsLessThan(Comparator&lt;? super T&gt;)" num="65" count="15" type="method"/>
            <line num="66" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T,T) : boolean" num="75" count="61" type="method"/>
            <line num="76" count="61" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="82" count="14" type="method"/>
            <line num="84" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="84" type="cond"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="87" type="cond"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line num="91" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="97" count="12" type="method"/>
            <line num="99" count="12" type="stmt"/>
            <line num="101" count="12" type="stmt"/>
            <line num="102" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="10" type="method"/>
            <line num="110" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsLessThan&lt;T&gt;" num="119" count="4" type="method"/>
            <line num="120" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(T) : Predicate&lt;T&gt;" num="130" count="2" type="method"/>
            <line num="131" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/IsLessThanOrEqual.java" name="IsLessThanOrEqual.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="10" loc="134" coveredmethods="8" methods="8" elements="27" classes="1" ncloc="47" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="IsLessThanOrEqual">
               <metrics coveredelements="27" coveredconditionals="4" complexity="10" coveredmethods="8" methods="8" elements="27" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="IsLessThanOrEqual()" num="52" count="12" type="method"/>
            <line num="54" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsLessThanOrEqual(Comparator&lt;? super T&gt;)" num="65" count="13" type="method"/>
            <line num="66" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T,T) : boolean" num="75" count="13" type="method"/>
            <line num="76" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="82" count="14" type="method"/>
            <line num="84" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="84" type="cond"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="87" type="cond"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line num="91" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="97" count="12" type="method"/>
            <line num="99" count="12" type="stmt"/>
            <line num="101" count="12" type="stmt"/>
            <line num="102" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="10" type="method"/>
            <line num="110" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsLessThanOrEqual&lt;T&gt;" num="119" count="2" type="method"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(T) : Predicate&lt;T&gt;" num="130" count="2" type="method"/>
            <line num="131" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/IsNotEquivalent.java" name="IsNotEquivalent.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="10" loc="135" coveredmethods="8" methods="8" elements="27" classes="1" ncloc="48" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="IsNotEquivalent">
               <metrics coveredelements="27" coveredconditionals="4" complexity="10" coveredmethods="8" methods="8" elements="27" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="IsNotEquivalent()" num="52" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsNotEquivalent(Comparator&lt;? super T&gt;)" num="65" count="12" type="method"/>
            <line num="66" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T,T) : boolean" num="75" count="13" type="method"/>
            <line num="76" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="82" count="12" type="method"/>
            <line num="84" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="84" type="cond"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="87" type="cond"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="97" count="10" type="method"/>
            <line num="99" count="10" type="stmt"/>
            <line num="101" count="10" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="8" type="method"/>
            <line num="110" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsNotEquivalent&lt;T&gt;" num="119" count="9" type="method"/>
            <line num="121" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(T) : Predicate&lt;T&gt;" num="131" count="2" type="method"/>
            <line num="132" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/IsWithinRange.java" name="IsWithinRange.java">
            <metrics coveredelements="28" coveredconditionals="6" complexity="9" loc="120" coveredmethods="6" methods="6" elements="28" classes="1" ncloc="43" statements="16" conditionals="6" coveredstatements="16"/>
            <class name="IsWithinRange">
               <metrics coveredelements="28" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="28" statements="16" conditionals="6" coveredstatements="16"/>
            </class>
            <line complexity="2" visibility="public" signature="IsWithinRange(A,A)" num="57" count="11" type="method"/>
            <line num="58" count="11" type="stmt"/>
            <line num="59" count="11" type="stmt"/>
            <line num="60" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="60" type="cond"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="9" type="stmt"/>
            <line num="64" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(A) : boolean" num="75" count="16" type="method"/>
            <line num="76" count="16" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="82" count="8" type="method"/>
            <line num="84" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="84" type="cond"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="87" type="cond"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="5" type="stmt"/>
            <line num="91" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="97" count="5" type="method"/>
            <line num="99" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="105" count="3" type="method"/>
            <line num="107" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(A,A) : IsWithinRange&lt;A&gt;" num="117" count="1" type="method"/>
            <line num="118" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/Max.java" name="Max.java">
            <metrics coveredelements="27" coveredconditionals="6" complexity="11" loc="120" coveredmethods="8" methods="8" elements="27" classes="1" ncloc="45" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="Max">
               <metrics coveredelements="27" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="27" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="Max()" num="48" count="10" type="method"/>
            <line num="50" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="Max(Comparator&lt;T&gt;)" num="57" count="12" type="method"/>
            <line num="58" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(T,T) : T" num="64" count="7" type="method"/>
            <line num="65" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="65" type="cond"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="71" count="14" type="method"/>
            <line num="73" count="14" type="stmt"/>
            <line falsecount="11" truecount="3" num="73" type="cond"/>
            <line num="74" count="3" type="stmt"/>
            <line num="76" count="11" type="stmt"/>
            <line falsecount="8" truecount="3" num="76" type="cond"/>
            <line num="77" count="3" type="stmt"/>
            <line num="79" count="8" type="stmt"/>
            <line num="80" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="86" count="13" type="method"/>
            <line num="88" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="94" count="11" type="method"/>
            <line num="96" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Max&lt;T&gt;" num="105" count="9" type="method"/>
            <line num="106" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(T) : Function&lt;T, T&gt;" num="116" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/comparator/Min.java" name="Min.java">
            <metrics coveredelements="27" coveredconditionals="6" complexity="11" loc="120" coveredmethods="8" methods="8" elements="27" classes="1" ncloc="45" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="Min">
               <metrics coveredelements="27" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="27" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="Min()" num="48" count="8" type="method"/>
            <line num="50" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="Min(Comparator&lt;T&gt;)" num="57" count="10" type="method"/>
            <line num="58" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(T,T) : T" num="64" count="7" type="method"/>
            <line num="65" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="65" type="cond"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="71" count="14" type="method"/>
            <line num="73" count="14" type="stmt"/>
            <line falsecount="11" truecount="3" num="73" type="cond"/>
            <line num="74" count="3" type="stmt"/>
            <line num="76" count="11" type="stmt"/>
            <line falsecount="8" truecount="3" num="76" type="cond"/>
            <line num="77" count="3" type="stmt"/>
            <line num="79" count="8" type="stmt"/>
            <line num="80" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="86" count="13" type="method"/>
            <line num="88" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="94" count="11" type="method"/>
            <line num="96" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Min&lt;T&gt;" num="105" count="7" type="method"/>
            <line num="106" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance(T) : Function&lt;T, T&gt;" num="116" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.core.composite">
         <metrics coveredelements="1228" complexity="405" loc="5276" methods="292" classes="50" statements="712" coveredconditionals="226" coveredmethods="290" elements="1230" ncloc="1988" files="42" conditionals="226" coveredstatements="712"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/AbstractLoopNullaryProcedure.java" name="AbstractLoopNullaryProcedure.java">
            <metrics coveredelements="28" coveredconditionals="4" complexity="9" loc="116" coveredmethods="7" methods="7" elements="28" classes="1" ncloc="46" statements="17" conditionals="4" coveredstatements="17"/>
            <class name="AbstractLoopNullaryProcedure">
               <metrics coveredelements="28" coveredconditionals="4" complexity="9" coveredmethods="7" methods="7" elements="28" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractLoopNullaryProcedure(NullaryPredicate,NullaryProcedure)" num="50" count="19" type="method"/>
            <line num="51" count="19" type="stmt"/>
            <line num="52" count="19" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="58" count="22" type="method"/>
            <line num="60" count="22" type="stmt"/>
            <line falsecount="18" truecount="4" num="60" type="cond"/>
            <line num="61" count="4" type="stmt"/>
            <line num="63" count="18" type="stmt"/>
            <line falsecount="12" truecount="6" num="63" type="cond"/>
            <line num="64" count="6" type="stmt"/>
            <line num="66" count="12" type="stmt"/>
            <line num="67" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="74" count="21" type="method"/>
            <line num="76" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="82" count="9" type="method"/>
            <line num="84" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hashCode(int) : int" num="92" count="21" type="method"/>
            <line num="93" count="21" type="stmt"/>
            <line num="94" count="21" type="stmt"/>
            <line num="95" count="21" type="stmt"/>
            <line num="96" count="21" type="stmt"/>
            <line num="97" count="21" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getCondition() : NullaryPredicate" num="104" count="77" type="method"/>
            <line num="105" count="77" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getAction() : NullaryProcedure" num="112" count="70" type="method"/>
            <line num="113" count="70" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/And.java" name="And.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="11" loc="115" coveredmethods="8" methods="8" elements="31" classes="1" ncloc="44" statements="17" conditionals="6" coveredstatements="17"/>
            <class name="And">
               <metrics coveredelements="31" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="31" statements="17" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="And()" num="36" count="14" type="method"/>
            <line num="37" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="And(Iterable&lt;Predicate&lt;? super A&gt;&gt;)" num="45" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="And(Predicate&lt;? super A&gt;)" num="54" count="27" type="method"/>
            <line num="55" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(Predicate&lt;? super A&gt;) : And&lt;A&gt;" num="65" count="80" type="method"/>
            <line num="66" count="80" type="stmt"/>
            <line num="67" count="80" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(A) : boolean" num="75" count="158" type="method"/>
            <line num="76" count="158" type="stmt"/>
            <line num="77" count="431" type="stmt"/>
            <line falsecount="352" truecount="79" num="77" type="cond"/>
            <line num="78" count="79" type="stmt"/>
            <line num="81" count="79" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="87" count="81" type="method"/>
            <line num="89" count="81" type="stmt"/>
            <line falsecount="77" truecount="4" num="89" type="cond"/>
            <line num="90" count="4" type="stmt"/>
            <line num="92" count="77" type="stmt"/>
            <line falsecount="66" truecount="11" num="92" type="cond"/>
            <line num="93" count="11" type="stmt"/>
            <line num="95" count="66" type="stmt"/>
            <line num="96" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="102" count="94" type="method"/>
            <line num="104" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="110" count="92" type="method"/>
            <line num="112" count="92" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/BaseBinaryPredicateList.java" name="BaseBinaryPredicateList.java">
            <metrics coveredelements="29" coveredconditionals="6" complexity="11" loc="145" coveredmethods="8" methods="8" elements="29" classes="1" ncloc="50" statements="15" conditionals="6" coveredstatements="15"/>
            <class name="BaseBinaryPredicateList">
               <metrics coveredelements="29" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="29" statements="15" conditionals="6" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="protected" signature="BaseBinaryPredicateList()" num="46" count="63" type="method"/>
            <line num="47" count="63" type="stmt"/>
            <line complexity="2" visibility="protected" signature="BaseBinaryPredicateList(BinaryPredicate&lt;? super L, ? super R&gt;)" num="55" count="51" type="method"/>
            <line num="56" count="51" type="stmt"/>
            <line num="57" count="51" type="stmt"/>
            <line falsecount="2" truecount="49" num="57" type="cond"/>
            <line num="58" count="49" type="stmt"/>
            <line num="59" count="88" type="stmt"/>
            <line complexity="2" visibility="protected" signature="BaseBinaryPredicateList(Iterable&lt;BinaryPredicate&lt;? super L, ? super R&gt;&gt;)" num="69" count="4" type="method"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="71" type="cond"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addBinaryPredicate(BinaryPredicate&lt;? super L, ? super R&gt;) : void" num="104" count="220" type="method"/>
            <line num="105" count="220" type="stmt"/>
            <line falsecount="2" truecount="218" num="105" type="cond"/>
            <line num="106" count="218" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getBinaryPredicateList() : List&lt;BinaryPredicate&lt;? super L, ? super R&gt;&gt;" num="116" count="134" type="method"/>
            <line num="117" count="134" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getBinaryPredicateListEquals(BaseBinaryPredicateList&lt;?, ?&gt;) : boolean" num="125" count="132" type="method"/>
            <line num="126" count="132" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getBinaryPredicateListHashCode() : int" num="133" count="210" type="method"/>
            <line num="134" count="210" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getBinaryPredicateListToString() : String" num="141" count="206" type="method"/>
            <line num="142" count="206" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/BaseNullaryPredicateList.java" name="BaseNullaryPredicateList.java">
            <metrics coveredelements="29" coveredconditionals="6" complexity="11" loc="142" coveredmethods="8" methods="8" elements="29" classes="1" ncloc="49" statements="15" conditionals="6" coveredstatements="15"/>
            <class name="BaseNullaryPredicateList">
               <metrics coveredelements="29" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="29" statements="15" conditionals="6" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="protected" signature="BaseNullaryPredicateList()" num="42" count="68" type="method"/>
            <line num="43" count="68" type="stmt"/>
            <line complexity="2" visibility="protected" signature="BaseNullaryPredicateList(NullaryPredicate)" num="51" count="56" type="method"/>
            <line num="52" count="56" type="stmt"/>
            <line num="53" count="56" type="stmt"/>
            <line falsecount="2" truecount="54" num="53" type="cond"/>
            <line num="54" count="54" type="stmt"/>
            <line num="55" count="96" type="stmt"/>
            <line complexity="2" visibility="protected" signature="BaseNullaryPredicateList(Iterable&lt;NullaryPredicate&gt;)" num="65" count="5" type="method"/>
            <line num="66" count="5" type="stmt"/>
            <line num="67" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="67" type="cond"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="7" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addNullaryPredicate(NullaryPredicate) : void" num="100" count="233" type="method"/>
            <line num="101" count="233" type="stmt"/>
            <line falsecount="3" truecount="230" num="101" type="cond"/>
            <line num="102" count="230" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getNullaryPredicateList() : List&lt;NullaryPredicate&gt;" num="113" count="138" type="method"/>
            <line num="114" count="138" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getNullaryPredicateListEquals(BaseNullaryPredicateList) : boolean" num="122" count="136" type="method"/>
            <line num="123" count="136" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getNullaryPredicateListHashCode() : int" num="130" count="206" type="method"/>
            <line num="131" count="206" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getNullaryPredicateListToString() : String" num="138" count="202" type="method"/>
            <line num="139" count="202" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/BasePredicateList.java" name="BasePredicateList.java">
            <metrics coveredelements="29" coveredconditionals="6" complexity="11" loc="144" coveredmethods="8" methods="8" elements="29" classes="1" ncloc="49" statements="15" conditionals="6" coveredstatements="15"/>
            <class name="BasePredicateList">
               <metrics coveredelements="29" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="29" statements="15" conditionals="6" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="protected" signature="BasePredicateList()" num="44" count="74" type="method"/>
            <line num="45" count="74" type="stmt"/>
            <line complexity="2" visibility="protected" signature="BasePredicateList(Predicate&lt;? super A&gt;)" num="53" count="53" type="method"/>
            <line num="54" count="53" type="stmt"/>
            <line num="55" count="53" type="stmt"/>
            <line falsecount="1" truecount="52" num="55" type="cond"/>
            <line num="56" count="52" type="stmt"/>
            <line num="57" count="95" type="stmt"/>
            <line complexity="2" visibility="protected" signature="BasePredicateList(Iterable&lt;Predicate&lt;? super A&gt;&gt;)" num="67" count="3" type="method"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="69" type="cond"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addPredicate(Predicate&lt;? super A&gt;) : void" num="102" count="243" type="method"/>
            <line num="103" count="243" type="stmt"/>
            <line falsecount="1" truecount="242" num="103" type="cond"/>
            <line num="104" count="242" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getPredicateList() : List&lt;Predicate&lt;? super A&gt;&gt;" num="115" count="227" type="method"/>
            <line num="116" count="227" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getPredicateListEquals(BasePredicateList&lt;?&gt;) : boolean" num="124" count="126" type="method"/>
            <line num="125" count="126" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getPredicateListHashCode() : int" num="132" count="191" type="method"/>
            <line num="133" count="191" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getPredicateListToString() : String" num="140" count="187" type="method"/>
            <line num="141" count="187" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/BinaryAnd.java" name="BinaryAnd.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="11" loc="116" coveredmethods="8" methods="8" elements="31" classes="1" ncloc="44" statements="17" conditionals="6" coveredstatements="17"/>
            <class name="BinaryAnd">
               <metrics coveredelements="31" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="31" statements="17" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryAnd()" num="37" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="BinaryAnd(BinaryPredicate&lt;? super L, ? super R&gt;)" num="46" count="24" type="method"/>
            <line num="47" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="BinaryAnd(Iterable&lt;BinaryPredicate&lt;? super L, ? super R&gt;&gt;)" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(BinaryPredicate&lt;? super L, ? super R&gt;) : BinaryAnd&lt;L, R&gt;" num="66" count="68" type="method"/>
            <line num="67" count="68" type="stmt"/>
            <line num="68" count="68" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(L,R) : boolean" num="76" count="67" type="method"/>
            <line num="77" count="67" type="stmt"/>
            <line num="78" count="324" type="stmt"/>
            <line falsecount="308" truecount="16" num="78" type="cond"/>
            <line num="79" count="16" type="stmt"/>
            <line num="82" count="51" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="88" count="80" type="method"/>
            <line num="90" count="80" type="stmt"/>
            <line falsecount="78" truecount="2" num="90" type="cond"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="78" type="stmt"/>
            <line falsecount="66" truecount="12" num="93" type="cond"/>
            <line num="94" count="12" type="stmt"/>
            <line num="96" count="66" type="stmt"/>
            <line num="97" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="103" count="96" type="method"/>
            <line num="105" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="111" count="94" type="method"/>
            <line num="113" count="94" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/BinaryCompositeBinaryFunction.java" name="BinaryCompositeBinaryFunction.java">
            <metrics coveredelements="32" coveredconditionals="4" complexity="9" loc="153" coveredmethods="7" methods="7" elements="32" classes="2" ncloc="61" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="BinaryCompositeBinaryFunction">
               <metrics coveredelements="26" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <class name="BinaryCompositeBinaryFunction.Helper">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="Helper(BinaryFunction&lt;? super G, ? super H, ? extends T&gt;,BinaryFunction&lt;? super L, ? super R, ? extends G&gt;,BinaryFunction&lt;? super L, ? super R, ? extends H&gt;)" num="63" count="13" type="method"/>
            <line num="66" count="13" type="stmt"/>
            <line num="67" count="13" type="stmt"/>
            <line num="68" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="74" count="9" type="method"/>
            <line num="75" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="BinaryCompositeBinaryFunction(BinaryFunction&lt;? super G, ? super H, ? extends T&gt;,BinaryFunction&lt;? super L, ? super R, ? extends G&gt;,BinaryFunction&lt;? super L, ? super R, ? extends H&gt;)" num="95" count="13" type="method"/>
            <line num="97" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="109" count="9" type="method"/>
            <line num="110" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="116" count="18" type="method"/>
            <line num="118" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="118" type="cond"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="121" type="cond"/>
            <line num="122" count="4" type="stmt"/>
            <line num="124" count="12" type="stmt"/>
            <line num="125" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="133" count="15" type="method"/>
            <line num="135" count="15" type="stmt"/>
            <line num="136" count="15" type="stmt"/>
            <line num="137" count="15" type="stmt"/>
            <line num="138" count="15" type="stmt"/>
            <line num="139" count="15" type="stmt"/>
            <line num="140" count="15" type="stmt"/>
            <line num="141" count="15" type="stmt"/>
            <line num="142" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="148" count="13" type="method"/>
            <line num="150" count="13" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/BinaryNot.java" name="BinaryNot.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="102" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="36" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="BinaryNot">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryNot(BinaryPredicate&lt;? super L, ? super R&gt;)" num="43" count="9" type="method"/>
            <line num="44" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="52" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="59" count="14" type="method"/>
            <line num="61" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="61" type="cond"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="64" type="cond"/>
            <line num="65" count="4" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line num="68" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="74" count="12" type="method"/>
            <line num="76" count="12" type="stmt"/>
            <line num="77" count="12" type="stmt"/>
            <line num="78" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="84" count="10" type="method"/>
            <line num="86" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="not(BinaryPredicate&lt;? super L, ? super R&gt;) : BinaryPredicate&lt;L, R&gt;" num="98" count="3" type="method"/>
            <line num="99" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="99" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/BinaryOr.java" name="BinaryOr.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="11" loc="116" coveredmethods="8" methods="8" elements="31" classes="1" ncloc="44" statements="17" conditionals="6" coveredstatements="17"/>
            <class name="BinaryOr">
               <metrics coveredelements="31" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="31" statements="17" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryOr()" num="37" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="BinaryOr(BinaryPredicate&lt;? super L, ? super R&gt;)" num="46" count="27" type="method"/>
            <line num="47" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="BinaryOr(Iterable&lt;BinaryPredicate&lt;? super L, ? super R&gt;&gt;)" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(BinaryPredicate&lt;? super L, ? super R&gt;) : BinaryOr&lt;L, R&gt;" num="66" count="62" type="method"/>
            <line num="67" count="62" type="stmt"/>
            <line num="68" count="62" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(L,R) : boolean" num="76" count="67" type="method"/>
            <line num="77" count="67" type="stmt"/>
            <line num="78" count="203" type="stmt"/>
            <line falsecount="165" truecount="38" num="78" type="cond"/>
            <line num="79" count="38" type="stmt"/>
            <line num="82" count="29" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="88" count="80" type="method"/>
            <line num="90" count="80" type="stmt"/>
            <line falsecount="78" truecount="2" num="90" type="cond"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="78" type="stmt"/>
            <line falsecount="66" truecount="12" num="93" type="cond"/>
            <line num="94" count="12" type="stmt"/>
            <line num="96" count="66" type="stmt"/>
            <line num="97" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="103" count="114" type="method"/>
            <line num="105" count="114" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="111" count="112" type="method"/>
            <line num="113" count="112" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/BinarySequence.java" name="BinarySequence.java">
            <metrics coveredelements="39" coveredconditionals="10" complexity="13" loc="135" coveredmethods="8" methods="8" elements="39" classes="1" ncloc="56" statements="21" conditionals="10" coveredstatements="21"/>
            <class name="BinarySequence">
               <metrics coveredelements="39" coveredconditionals="10" complexity="13" coveredmethods="8" methods="8" elements="39" statements="21" conditionals="10" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="BinarySequence()" num="50" count="23" type="method"/>
            <line num="51" count="23" type="stmt"/>
            <line complexity="2" visibility="public" signature="BinarySequence(BinaryProcedure&lt;? super L, ? super R&gt;)" num="59" count="16" type="method"/>
            <line num="60" count="16" type="stmt"/>
            <line num="61" count="16" type="stmt"/>
            <line falsecount="1" truecount="15" num="61" type="cond"/>
            <line num="62" count="15" type="stmt"/>
            <line num="63" count="28" type="stmt"/>
            <line complexity="2" visibility="public" signature="BinarySequence(Iterable&lt;BinaryProcedure&lt;? super L, ? super R&gt;&gt;)" num="73" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="75" type="cond"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="then(BinaryProcedure&lt;? super L, ? super R&gt;) : BinarySequence&lt;L, R&gt;" num="87" count="56" type="method"/>
            <line num="88" count="56" type="stmt"/>
            <line num="89" count="56" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(L,R) : void" num="97" count="17" type="method"/>
            <line num="98" count="17" type="stmt"/>
            <line falsecount="17" truecount="61" num="98" type="cond"/>
            <line num="99" count="61" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="106" count="79" type="method"/>
            <line num="108" count="79" type="stmt"/>
            <line falsecount="77" truecount="2" num="108" type="cond"/>
            <line num="109" count="2" type="stmt"/>
            <line num="111" count="77" type="stmt"/>
            <line falsecount="72" truecount="5" num="111" type="cond"/>
            <line num="112" count="5" type="stmt"/>
            <line num="114" count="72" type="stmt"/>
            <line num="115" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="121" count="92" type="method"/>
            <line num="124" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="130" count="90" type="method"/>
            <line num="132" count="90" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/Composite.java" name="Composite.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="10" loc="176" coveredmethods="9" methods="10" elements="19" classes="1" ncloc="46" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="Composite">
               <metrics coveredelements="18" coveredconditionals="0" complexity="10" coveredmethods="9" methods="10" elements="19" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="Composite()" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="procedure(Procedure&lt;? super A&gt;) : CompositeProcedure&lt;A&gt;" num="43" count="4" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="procedure(Procedure&lt;? super T&gt;,Function&lt;? super A, ? extends T&gt;) : CompositeProcedure&lt;A&gt;" num="55" count="5" type="method"/>
            <line num="57" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicate(Predicate&lt;? super A&gt;) : CompositePredicate&lt;A&gt;" num="66" count="5" type="method"/>
            <line num="67" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicate(Predicate&lt;? super T&gt;,Function&lt;? super A, ? extends T&gt;) : CompositePredicate&lt;A&gt;" num="78" count="5" type="method"/>
            <line num="80" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicate(BinaryPredicate&lt;? super G, ? super H&gt;,Function&lt;? super L, ? extends G&gt;,Function&lt;? super R, ? extends H&gt;) : CompositeBinaryPredicate&lt;L, R&gt;" num="94" count="3" type="method"/>
            <line num="97" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="function(Function&lt;? super A, ? extends T&gt;) : CompositeFunction&lt;A, T&gt;" num="107" count="5" type="method"/>
            <line num="108" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="function(Function&lt;? super X, ? extends T&gt;,Function&lt;? super A, ? extends X&gt;) : CompositeFunction&lt;A, T&gt;" num="120" count="14" type="method"/>
            <line num="122" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="function(BinaryFunction&lt;? super G, ? super H, ? extends T&gt;,Function&lt;? super L, ? extends G&gt;,Function&lt;? super R, ? extends H&gt;) : CompositeBinaryFunction&lt;L, R, T&gt;" num="153" count="5" type="method"/>
            <line num="156" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="function(BinaryFunction&lt;? super G, ? super H, ? extends T&gt;,BinaryFunction&lt;? super L, ? super R, ? extends G&gt;,BinaryFunction&lt;? super L, ? super R, ? extends H&gt;) : BinaryCompositeBinaryFunction&lt;L, R, T&gt;" num="171" count="1" type="method"/>
            <line num="174" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/CompositeBinaryFunction.java" name="CompositeBinaryFunction.java">
            <metrics coveredelements="32" coveredconditionals="4" complexity="9" loc="157" coveredmethods="7" methods="7" elements="32" classes="2" ncloc="61" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="CompositeBinaryFunction">
               <metrics coveredelements="26" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <class name="CompositeBinaryFunction.Helper">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="Helper(BinaryFunction&lt;? super G, ? super H, ? extends T&gt;,Function&lt;? super L, ? extends G&gt;,Function&lt;? super R, ? extends H&gt;)" num="68" count="14" type="method"/>
            <line num="70" count="14" type="stmt"/>
            <line num="71" count="14" type="stmt"/>
            <line num="72" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="78" count="99" type="method"/>
            <line num="79" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="CompositeBinaryFunction(BinaryFunction&lt;? super G, ? super H, ? extends T&gt;,Function&lt;? super L, ? extends G&gt;,Function&lt;? super R, ? extends H&gt;)" num="99" count="14" type="method"/>
            <line num="101" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="113" count="99" type="method"/>
            <line num="114" count="99" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="120" count="15" type="method"/>
            <line num="122" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="122" type="cond"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="125" type="cond"/>
            <line num="126" count="3" type="stmt"/>
            <line num="128" count="10" type="stmt"/>
            <line num="129" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="137" count="13" type="method"/>
            <line num="139" count="13" type="stmt"/>
            <line num="140" count="13" type="stmt"/>
            <line num="141" count="13" type="stmt"/>
            <line num="142" count="13" type="stmt"/>
            <line num="143" count="13" type="stmt"/>
            <line num="144" count="13" type="stmt"/>
            <line num="145" count="13" type="stmt"/>
            <line num="146" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="152" count="11" type="method"/>
            <line num="154" count="11" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/CompositeBinaryPredicate.java" name="CompositeBinaryPredicate.java">
            <metrics coveredelements="32" coveredconditionals="4" complexity="9" loc="157" coveredmethods="7" methods="7" elements="32" classes="2" ncloc="61" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="CompositeBinaryPredicate">
               <metrics coveredelements="26" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <class name="CompositeBinaryPredicate.Helper">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="Helper(BinaryPredicate&lt;? super G, ? super H&gt;,Function&lt;? super L, ? extends G&gt;,Function&lt;? super R, ? extends H&gt;)" num="66" count="13" type="method"/>
            <line num="68" count="13" type="stmt"/>
            <line num="69" count="13" type="stmt"/>
            <line num="70" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="76" count="50" type="method"/>
            <line num="77" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="CompositeBinaryPredicate(BinaryPredicate&lt;? super G, ? super H&gt;,Function&lt;? super L, ? extends G&gt;,Function&lt;? super R, ? extends H&gt;)" num="99" count="13" type="method"/>
            <line num="101" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="113" count="50" type="method"/>
            <line num="114" count="50" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="120" count="17" type="method"/>
            <line num="122" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="122" type="cond"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="15" type="stmt"/>
            <line falsecount="12" truecount="3" num="125" type="cond"/>
            <line num="126" count="3" type="stmt"/>
            <line num="128" count="12" type="stmt"/>
            <line num="129" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="137" count="15" type="method"/>
            <line num="139" count="15" type="stmt"/>
            <line num="140" count="15" type="stmt"/>
            <line num="141" count="15" type="stmt"/>
            <line num="142" count="15" type="stmt"/>
            <line num="143" count="15" type="stmt"/>
            <line num="144" count="15" type="stmt"/>
            <line num="145" count="15" type="stmt"/>
            <line num="146" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="152" count="13" type="method"/>
            <line num="154" count="13" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/CompositeFunction.java" name="CompositeFunction.java">
            <metrics coveredelements="42" coveredconditionals="4" complexity="15" loc="196" coveredmethods="13" methods="13" elements="42" classes="2" ncloc="72" statements="25" conditionals="4" coveredstatements="25"/>
            <class name="CompositeFunction">
               <metrics coveredelements="24" coveredconditionals="4" complexity="9" coveredmethods="7" methods="7" elements="24" statements="13" conditionals="4" coveredstatements="13"/>
            </class>
            <class name="CompositeFunction.Helper">
               <metrics coveredelements="18" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="18" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="Helper(Function&lt;? super X, ? extends T&gt;,Function&lt;? super A, ? extends X&gt;)" num="68" count="93" type="method"/>
            <line num="70" count="93" type="stmt"/>
            <line num="71" count="93" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(A) : T" num="77" count="489" type="method"/>
            <line num="78" count="489" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="84" count="257" type="method"/>
            <line num="86" count="257" type="stmt"/>
            <line complexity="1" visibility="private" signature="equals(Helper&lt;?, ?, ?&gt;) : boolean" num="95" count="242" type="method"/>
            <line num="96" count="242" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="102" count="323" type="method"/>
            <line num="104" count="323" type="stmt"/>
            <line num="105" count="323" type="stmt"/>
            <line num="106" count="323" type="stmt"/>
            <line num="107" count="323" type="stmt"/>
            <line num="108" count="323" type="stmt"/>
            <line num="109" count="323" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="115" count="321" type="method"/>
            <line num="117" count="321" type="stmt"/>
            <line complexity="1" visibility="public" signature="CompositeFunction(Function&lt;? super A, ? extends T&gt;)" num="130" count="47" type="method"/>
            <line num="131" count="47" type="stmt"/>
            <line complexity="1" visibility="private" signature="CompositeFunction(Function&lt;? super X, ? extends T&gt;,Function&lt;? super A, ? extends X&gt;)" num="141" count="93" type="method"/>
            <line num="143" count="93" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(A) : T" num="149" count="412" type="method"/>
            <line num="150" count="412" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(Function&lt;? super P, ? extends A&gt;) : CompositeFunction&lt;P, T&gt;" num="159" count="95" type="method"/>
            <line num="160" count="95" type="stmt"/>
            <line num="161" count="93" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="167" count="80" type="method"/>
            <line num="169" count="80" type="stmt"/>
            <line falsecount="78" truecount="2" num="169" type="cond"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="78" type="stmt"/>
            <line falsecount="72" truecount="6" num="172" type="cond"/>
            <line num="173" count="6" type="stmt"/>
            <line num="175" count="72" type="stmt"/>
            <line num="176" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="182" count="92" type="method"/>
            <line num="185" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="191" count="86" type="method"/>
            <line num="193" count="86" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/CompositePredicate.java" name="CompositePredicate.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="9" loc="123" coveredmethods="7" methods="7" elements="26" classes="1" ncloc="45" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="CompositePredicate">
               <metrics coveredelements="26" coveredconditionals="4" complexity="9" coveredmethods="7" methods="7" elements="26" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="CompositePredicate(Predicate&lt;? super A&gt;)" num="53" count="14" type="method"/>
            <line num="54" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="CompositePredicate(CompositeFunction&lt;? super A, Boolean&gt;)" num="64" count="33" type="method"/>
            <line num="65" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(Function&lt;? super P, ? extends A&gt;) : CompositePredicate&lt;P&gt;" num="76" count="33" type="method"/>
            <line num="77" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(A) : boolean" num="85" count="109" type="method"/>
            <line num="86" count="109" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="92" count="34" type="method"/>
            <line num="94" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="32" type="stmt"/>
            <line falsecount="28" truecount="4" num="97" type="cond"/>
            <line num="98" count="4" type="stmt"/>
            <line num="100" count="28" type="stmt"/>
            <line num="101" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="107" count="32" type="method"/>
            <line num="109" count="32" type="stmt"/>
            <line num="110" count="32" type="stmt"/>
            <line num="111" count="32" type="stmt"/>
            <line num="112" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="118" count="30" type="method"/>
            <line num="120" count="30" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/CompositeProcedure.java" name="CompositeProcedure.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="9" loc="123" coveredmethods="7" methods="7" elements="26" classes="1" ncloc="45" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="CompositeProcedure">
               <metrics coveredelements="26" coveredconditionals="4" complexity="9" coveredmethods="7" methods="7" elements="26" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="CompositeProcedure(Procedure&lt;? super A&gt;)" num="53" count="11" type="method"/>
            <line num="54" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="CompositeProcedure(CompositeFunction&lt;? super A, Object&gt;)" num="64" count="24" type="method"/>
            <line num="65" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(Function&lt;? super T, ? extends A&gt;) : CompositeProcedure&lt;T&gt;" num="76" count="25" type="method"/>
            <line num="77" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(A) : void" num="85" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="92" count="34" type="method"/>
            <line num="94" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="32" type="stmt"/>
            <line falsecount="28" truecount="4" num="97" type="cond"/>
            <line num="98" count="4" type="stmt"/>
            <line num="100" count="28" type="stmt"/>
            <line num="101" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="107" count="32" type="method"/>
            <line num="109" count="32" type="stmt"/>
            <line num="110" count="32" type="stmt"/>
            <line num="111" count="32" type="stmt"/>
            <line num="112" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="118" count="30" type="method"/>
            <line num="120" count="30" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/Conditional.java" name="Conditional.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="13" loc="200" coveredmethods="12" methods="13" elements="25" classes="1" ncloc="58" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="Conditional">
               <metrics coveredelements="24" coveredconditionals="0" complexity="13" coveredmethods="12" methods="13" elements="25" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="private" signature="Conditional()" num="38" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="procedure(NullaryPredicate,NullaryProcedure) : NullaryProcedure" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="procedure(NullaryPredicate,NullaryProcedure,NullaryProcedure) : NullaryProcedure" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function(NullaryPredicate,NullaryFunction&lt;? extends T&gt;,NullaryFunction&lt;? extends T&gt;) : NullaryFunction&lt;T&gt;" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicate(NullaryPredicate,NullaryPredicate,NullaryPredicate) : NullaryPredicate" num="84" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="procedure(Predicate&lt;? super A&gt;,Procedure&lt;? super A&gt;) : Procedure&lt;A&gt;" num="96" count="1" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="procedure(Predicate&lt;? super A&gt;,Procedure&lt;? super A&gt;,Procedure&lt;? super A&gt;) : Procedure&lt;A&gt;" num="109" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function(Predicate&lt;? super A&gt;,Function&lt;? super A, ? extends T&gt;,Function&lt;? super A, ? extends T&gt;) : Function&lt;A, T&gt;" num="123" count="1" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicate(Predicate&lt;? super A&gt;,Predicate&lt;? super A&gt;,Predicate&lt;? super A&gt;) : Predicate&lt;A&gt;" num="136" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="procedure(BinaryPredicate&lt;? super L, ? super R&gt;,BinaryProcedure&lt;? super L, ? super R&gt;) : BinaryProcedure&lt;L, R&gt;" num="149" count="1" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="procedure(BinaryPredicate&lt;? super L, ? super R&gt;,BinaryProcedure&lt;? super L, ? super R&gt;,BinaryProcedure&lt;? super L, ? super R&gt;) : BinaryProcedure&lt;L, R&gt;" num="164" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function(BinaryPredicate&lt;? super L, ? super R&gt;,BinaryFunction&lt;? super L, ? super R, ? extends T&gt;,BinaryFunction&lt;? super L, ? super R, ? extends T&gt;) : BinaryFunction&lt;L, R, T&gt;" num="180" count="3" type="method"/>
            <line num="182" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicate(BinaryPredicate&lt;? super L, ? super R&gt;,BinaryPredicate&lt;? super L, ? super R&gt;,BinaryPredicate&lt;? super L, ? super R&gt;) : BinaryPredicate&lt;L, R&gt;" num="195" count="1" type="method"/>
            <line num="197" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalBinaryFunction.java" name="ConditionalBinaryFunction.java">
            <metrics coveredelements="32" coveredconditionals="6" complexity="8" loc="125" coveredmethods="5" methods="5" elements="32" classes="1" ncloc="52" statements="21" conditionals="6" coveredstatements="21"/>
            <class name="ConditionalBinaryFunction">
               <metrics coveredelements="32" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="32" statements="21" conditionals="6" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalBinaryFunction(BinaryPredicate&lt;? super L, ? super R&gt;,BinaryFunction&lt;? super L, ? super R, ? extends T&gt;,BinaryFunction&lt;? super L, ? super R, ? extends T&gt;)" num="64" count="22" type="method"/>
            <line num="67" count="22" type="stmt"/>
            <line num="68" count="22" type="stmt"/>
            <line num="69" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(L,R) : T" num="77" count="104" type="method"/>
            <line num="78" count="104" type="stmt"/>
            <line falsecount="63" truecount="41" num="78" type="cond"/>
            <line num="79" count="41" type="stmt"/>
            <line num="81" count="63" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="88" count="15" type="method"/>
            <line num="90" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="90" type="cond"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="93" type="cond"/>
            <line num="94" count="3" type="stmt"/>
            <line num="96" count="10" type="stmt"/>
            <line num="97" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="105" count="13" type="method"/>
            <line num="107" count="13" type="stmt"/>
            <line num="108" count="13" type="stmt"/>
            <line num="109" count="13" type="stmt"/>
            <line num="110" count="13" type="stmt"/>
            <line num="111" count="13" type="stmt"/>
            <line num="112" count="13" type="stmt"/>
            <line num="113" count="13" type="stmt"/>
            <line num="114" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="120" count="11" type="method"/>
            <line num="122" count="11" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalBinaryPredicate.java" name="ConditionalBinaryPredicate.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="8" loc="118" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="46" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="ConditionalBinaryPredicate">
               <metrics coveredelements="30" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="30" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalBinaryPredicate(BinaryPredicate&lt;? super L, ? super R&gt;,BinaryPredicate&lt;? super L, ? super R&gt;,BinaryPredicate&lt;? super L, ? super R&gt;)" num="62" count="11" type="method"/>
            <line num="64" count="11" type="stmt"/>
            <line num="65" count="11" type="stmt"/>
            <line num="66" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(L,R) : boolean" num="74" count="2" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="75" type="cond"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="81" count="15" type="method"/>
            <line num="83" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="83" type="cond"/>
            <line num="84" count="2" type="stmt"/>
            <line num="86" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="86" type="cond"/>
            <line num="87" count="3" type="stmt"/>
            <line num="89" count="10" type="stmt"/>
            <line num="90" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="98" count="13" type="method"/>
            <line num="100" count="13" type="stmt"/>
            <line num="101" count="13" type="stmt"/>
            <line num="102" count="13" type="stmt"/>
            <line num="103" count="13" type="stmt"/>
            <line num="104" count="13" type="stmt"/>
            <line num="105" count="13" type="stmt"/>
            <line num="106" count="13" type="stmt"/>
            <line num="107" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="113" count="11" type="method"/>
            <line num="115" count="11" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalBinaryProcedure.java" name="ConditionalBinaryProcedure.java">
            <metrics coveredelements="34" coveredconditionals="6" complexity="9" loc="134" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="56" statements="22" conditionals="6" coveredstatements="22"/>
            <class name="ConditionalBinaryProcedure">
               <metrics coveredelements="34" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="34" statements="22" conditionals="6" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalBinaryProcedure(BinaryPredicate&lt;? super L, ? super R&gt;,BinaryProcedure&lt;? super L, ? super R&gt;)" num="63" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConditionalBinaryProcedure(BinaryPredicate&lt;? super L, ? super R&gt;,BinaryProcedure&lt;? super L, ? super R&gt;,BinaryProcedure&lt;? super L, ? super R&gt;)" num="74" count="12" type="method"/>
            <line num="76" count="12" type="stmt"/>
            <line num="77" count="12" type="stmt"/>
            <line num="78" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(L,R) : void" num="87" count="3" type="method"/>
            <line num="88" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="88" type="cond"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="98" count="17" type="method"/>
            <line num="100" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="100" type="cond"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="15" type="stmt"/>
            <line falsecount="12" truecount="3" num="103" type="cond"/>
            <line num="104" count="3" type="stmt"/>
            <line num="106" count="12" type="stmt"/>
            <line num="107" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="115" count="15" type="method"/>
            <line num="117" count="15" type="stmt"/>
            <line num="118" count="15" type="stmt"/>
            <line num="119" count="15" type="stmt"/>
            <line num="120" count="15" type="stmt"/>
            <line num="121" count="15" type="stmt"/>
            <line num="122" count="15" type="stmt"/>
            <line num="123" count="15" type="stmt"/>
            <line num="124" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="130" count="13" type="method"/>
            <line num="132" count="13" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalFunction.java" name="ConditionalFunction.java">
            <metrics coveredelements="32" coveredconditionals="6" complexity="8" loc="123" coveredmethods="5" methods="5" elements="32" classes="1" ncloc="51" statements="21" conditionals="6" coveredstatements="21"/>
            <class name="ConditionalFunction">
               <metrics coveredelements="32" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="32" statements="21" conditionals="6" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalFunction(Predicate&lt;? super A&gt;,Function&lt;? super A, ? extends T&gt;,Function&lt;? super A, ? extends T&gt;)" num="63" count="10" type="method"/>
            <line num="65" count="10" type="stmt"/>
            <line num="66" count="10" type="stmt"/>
            <line num="67" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(A) : T" num="75" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="76" type="cond"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="86" count="15" type="method"/>
            <line num="88" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="88" type="cond"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="91" type="cond"/>
            <line num="92" count="3" type="stmt"/>
            <line num="94" count="10" type="stmt"/>
            <line num="95" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="103" count="13" type="method"/>
            <line num="105" count="13" type="stmt"/>
            <line num="106" count="13" type="stmt"/>
            <line num="107" count="13" type="stmt"/>
            <line num="108" count="13" type="stmt"/>
            <line num="109" count="13" type="stmt"/>
            <line num="110" count="13" type="stmt"/>
            <line num="111" count="13" type="stmt"/>
            <line num="112" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="118" count="11" type="method"/>
            <line num="120" count="11" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalNullaryFunction.java" name="ConditionalNullaryFunction.java">
            <metrics coveredelements="32" coveredconditionals="6" complexity="8" loc="122" coveredmethods="5" methods="5" elements="32" classes="1" ncloc="51" statements="21" conditionals="6" coveredstatements="21"/>
            <class name="ConditionalNullaryFunction">
               <metrics coveredelements="32" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="32" statements="21" conditionals="6" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalNullaryFunction(NullaryPredicate,NullaryFunction&lt;? extends T&gt;,NullaryFunction&lt;? extends T&gt;)" num="62" count="11" type="method"/>
            <line num="64" count="11" type="stmt"/>
            <line num="65" count="11" type="stmt"/>
            <line num="66" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate() : T" num="74" count="2" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="75" type="cond"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="85" count="15" type="method"/>
            <line num="87" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="87" type="cond"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="90" type="cond"/>
            <line num="91" count="3" type="stmt"/>
            <line num="93" count="10" type="stmt"/>
            <line num="94" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="102" count="13" type="method"/>
            <line num="104" count="13" type="stmt"/>
            <line num="105" count="13" type="stmt"/>
            <line num="106" count="13" type="stmt"/>
            <line num="107" count="13" type="stmt"/>
            <line num="108" count="13" type="stmt"/>
            <line num="109" count="13" type="stmt"/>
            <line num="110" count="13" type="stmt"/>
            <line num="111" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="117" count="11" type="method"/>
            <line num="119" count="11" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalNullaryPredicate.java" name="ConditionalNullaryPredicate.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="8" loc="115" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="45" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="ConditionalNullaryPredicate">
               <metrics coveredelements="30" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="30" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalNullaryPredicate(NullaryPredicate,NullaryPredicate,NullaryPredicate)" num="60" count="11" type="method"/>
            <line num="61" count="11" type="stmt"/>
            <line num="62" count="11" type="stmt"/>
            <line num="63" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : boolean" num="71" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="72" type="cond"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="78" count="15" type="method"/>
            <line num="80" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="80" type="cond"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="83" type="cond"/>
            <line num="84" count="3" type="stmt"/>
            <line num="86" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="95" count="13" type="method"/>
            <line num="97" count="13" type="stmt"/>
            <line num="98" count="13" type="stmt"/>
            <line num="99" count="13" type="stmt"/>
            <line num="100" count="13" type="stmt"/>
            <line num="101" count="13" type="stmt"/>
            <line num="102" count="13" type="stmt"/>
            <line num="103" count="13" type="stmt"/>
            <line num="104" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="110" count="11" type="method"/>
            <line num="112" count="11" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalNullaryProcedure.java" name="ConditionalNullaryProcedure.java">
            <metrics coveredelements="34" coveredconditionals="6" complexity="9" loc="129" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="54" statements="22" conditionals="6" coveredstatements="22"/>
            <class name="ConditionalNullaryProcedure">
               <metrics coveredelements="34" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="34" statements="22" conditionals="6" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalNullaryProcedure(NullaryPredicate,NullaryProcedure)" num="60" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConditionalNullaryProcedure(NullaryPredicate,NullaryProcedure,NullaryProcedure)" num="70" count="14" type="method"/>
            <line num="71" count="14" type="stmt"/>
            <line num="72" count="14" type="stmt"/>
            <line num="73" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="81" count="6" type="method"/>
            <line num="82" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="82" type="cond"/>
            <line num="83" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="92" count="19" type="method"/>
            <line num="94" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="17" type="stmt"/>
            <line falsecount="14" truecount="3" num="97" type="cond"/>
            <line num="98" count="3" type="stmt"/>
            <line num="100" count="14" type="stmt"/>
            <line num="101" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="109" count="17" type="method"/>
            <line num="111" count="17" type="stmt"/>
            <line num="112" count="17" type="stmt"/>
            <line num="113" count="17" type="stmt"/>
            <line num="114" count="17" type="stmt"/>
            <line num="115" count="17" type="stmt"/>
            <line num="116" count="17" type="stmt"/>
            <line num="117" count="17" type="stmt"/>
            <line num="118" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="124" count="15" type="method"/>
            <line num="126" count="15" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalPredicate.java" name="ConditionalPredicate.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="8" loc="117" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="46" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="ConditionalPredicate">
               <metrics coveredelements="30" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="30" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalPredicate(Predicate&lt;? super A&gt;,Predicate&lt;? super A&gt;,Predicate&lt;? super A&gt;)" num="61" count="10" type="method"/>
            <line num="63" count="10" type="stmt"/>
            <line num="64" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(A) : boolean" num="73" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="74" type="cond"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="80" count="15" type="method"/>
            <line num="82" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="82" type="cond"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="85" type="cond"/>
            <line num="86" count="3" type="stmt"/>
            <line num="88" count="10" type="stmt"/>
            <line num="89" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="97" count="13" type="method"/>
            <line num="99" count="13" type="stmt"/>
            <line num="100" count="13" type="stmt"/>
            <line num="101" count="13" type="stmt"/>
            <line num="102" count="13" type="stmt"/>
            <line num="103" count="13" type="stmt"/>
            <line num="104" count="13" type="stmt"/>
            <line num="105" count="13" type="stmt"/>
            <line num="106" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="112" count="11" type="method"/>
            <line num="114" count="11" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/ConditionalProcedure.java" name="ConditionalProcedure.java">
            <metrics coveredelements="34" coveredconditionals="6" complexity="9" loc="131" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="56" statements="22" conditionals="6" coveredstatements="22"/>
            <class name="ConditionalProcedure">
               <metrics coveredelements="34" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="34" statements="22" conditionals="6" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalProcedure(Predicate&lt;? super A&gt;,Procedure&lt;? super A&gt;)" num="60" count="17" type="method"/>
            <line num="61" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConditionalProcedure(Predicate&lt;? super A&gt;,Procedure&lt;? super A&gt;,Procedure&lt;? super A&gt;)" num="70" count="27" type="method"/>
            <line num="73" count="27" type="stmt"/>
            <line num="74" count="27" type="stmt"/>
            <line num="75" count="27" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(A) : void" num="83" count="275" type="method"/>
            <line num="84" count="275" type="stmt"/>
            <line falsecount="153" truecount="122" num="84" type="cond"/>
            <line num="85" count="122" type="stmt"/>
            <line num="87" count="153" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="94" count="17" type="method"/>
            <line num="96" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="96" type="cond"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="15" type="stmt"/>
            <line falsecount="12" truecount="3" num="99" type="cond"/>
            <line num="100" count="3" type="stmt"/>
            <line num="102" count="12" type="stmt"/>
            <line num="103" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="111" count="15" type="method"/>
            <line num="113" count="15" type="stmt"/>
            <line num="114" count="15" type="stmt"/>
            <line num="115" count="15" type="stmt"/>
            <line num="116" count="15" type="stmt"/>
            <line num="117" count="15" type="stmt"/>
            <line num="118" count="15" type="stmt"/>
            <line num="119" count="15" type="stmt"/>
            <line num="120" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="126" count="13" type="method"/>
            <line num="128" count="13" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/DoWhileNullaryProcedure.java" name="DoWhileNullaryProcedure.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="56" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="17" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="DoWhileNullaryProcedure">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="DoWhileNullaryProcedure(NullaryProcedure,NullaryPredicate)" num="36" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="46" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="52" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/Not.java" name="Not.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="100" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="36" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="Not">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="Not(Predicate&lt;? super A&gt;)" num="42" count="18" type="method"/>
            <line num="43" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(A) : boolean" num="51" count="75" type="method"/>
            <line num="52" count="75" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="58" count="14" type="method"/>
            <line num="60" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="63" type="cond"/>
            <line num="64" count="4" type="stmt"/>
            <line num="66" count="8" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="73" count="12" type="method"/>
            <line num="75" count="12" type="stmt"/>
            <line num="76" count="12" type="stmt"/>
            <line num="77" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="83" count="10" type="method"/>
            <line num="85" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="not(Predicate&lt;? super A&gt;) : Predicate&lt;A&gt;" num="96" count="10" type="method"/>
            <line num="97" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="97" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/NullaryAnd.java" name="NullaryAnd.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="11" loc="115" coveredmethods="8" methods="8" elements="31" classes="1" ncloc="44" statements="17" conditionals="6" coveredstatements="17"/>
            <class name="NullaryAnd">
               <metrics coveredelements="31" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="31" statements="17" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryAnd()" num="36" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="NullaryAnd(Iterable&lt;NullaryPredicate&gt;)" num="45" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="NullaryAnd(NullaryPredicate)" num="54" count="27" type="method"/>
            <line num="55" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(NullaryPredicate) : NullaryAnd" num="65" count="68" type="method"/>
            <line num="66" count="68" type="stmt"/>
            <line num="67" count="68" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : boolean" num="75" count="67" type="method"/>
            <line num="76" count="67" type="stmt"/>
            <line num="77" count="324" type="stmt"/>
            <line falsecount="308" truecount="16" num="77" type="cond"/>
            <line num="78" count="16" type="stmt"/>
            <line num="81" count="51" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="87" count="85" type="method"/>
            <line num="89" count="85" type="stmt"/>
            <line falsecount="83" truecount="2" num="89" type="cond"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="83" type="stmt"/>
            <line falsecount="72" truecount="11" num="92" type="cond"/>
            <line num="93" count="11" type="stmt"/>
            <line num="95" count="72" type="stmt"/>
            <line num="96" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="102" count="98" type="method"/>
            <line num="104" count="98" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="110" count="96" type="method"/>
            <line num="112" count="96" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/NullaryNot.java" name="NullaryNot.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="98" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="36" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="NullaryNot">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryNot(NullaryPredicate)" num="42" count="15" type="method"/>
            <line num="43" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="51" count="15" type="method"/>
            <line num="52" count="15" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="58" count="14" type="method"/>
            <line num="60" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="63" type="cond"/>
            <line num="64" count="4" type="stmt"/>
            <line num="66" count="8" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="73" count="12" type="method"/>
            <line num="75" count="12" type="stmt"/>
            <line num="76" count="12" type="stmt"/>
            <line num="77" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="83" count="10" type="method"/>
            <line num="85" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="not(NullaryPredicate) : NullaryPredicate" num="95" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="96" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/NullaryOr.java" name="NullaryOr.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="11" loc="112" coveredmethods="8" methods="8" elements="31" classes="1" ncloc="44" statements="17" conditionals="6" coveredstatements="17"/>
            <class name="NullaryOr">
               <metrics coveredelements="31" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="31" statements="17" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryOr()" num="35" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="NullaryOr(Iterable&lt;NullaryPredicate&gt;)" num="44" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="NullaryOr(NullaryPredicate)" num="53" count="29" type="method"/>
            <line num="54" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(NullaryPredicate) : NullaryOr" num="62" count="62" type="method"/>
            <line num="63" count="62" type="stmt"/>
            <line num="64" count="62" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : boolean" num="72" count="71" type="method"/>
            <line num="73" count="71" type="stmt"/>
            <line num="74" count="205" type="stmt"/>
            <line falsecount="166" truecount="39" num="74" type="cond"/>
            <line num="75" count="39" type="stmt"/>
            <line num="78" count="32" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="84" count="77" type="method"/>
            <line num="86" count="77" type="stmt"/>
            <line falsecount="75" truecount="2" num="86" type="cond"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="75" type="stmt"/>
            <line falsecount="64" truecount="11" num="89" type="cond"/>
            <line num="90" count="11" type="stmt"/>
            <line num="92" count="64" type="stmt"/>
            <line num="93" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="99" count="108" type="method"/>
            <line num="101" count="108" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="107" count="106" type="method"/>
            <line num="109" count="106" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/NullarySequence.java" name="NullarySequence.java">
            <metrics coveredelements="42" coveredconditionals="12" complexity="14" loc="136" coveredmethods="8" methods="8" elements="42" classes="1" ncloc="57" statements="22" conditionals="12" coveredstatements="22"/>
            <class name="NullarySequence">
               <metrics coveredelements="42" coveredconditionals="12" complexity="14" coveredmethods="8" methods="8" elements="42" statements="22" conditionals="12" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="NullarySequence()" num="47" count="26" type="method"/>
            <line num="48" count="26" type="stmt"/>
            <line complexity="2" visibility="public" signature="NullarySequence(NullaryProcedure)" num="56" count="14" type="method"/>
            <line num="57" count="14" type="stmt"/>
            <line num="58" count="14" type="stmt"/>
            <line falsecount="1" truecount="13" num="58" type="cond"/>
            <line num="59" count="13" type="stmt"/>
            <line num="60" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="NullarySequence(Iterable&lt;NullaryProcedure&gt;)" num="70" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="72" type="cond"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="then(NullaryProcedure) : NullarySequence" num="86" count="48" type="method"/>
            <line num="87" count="48" type="stmt"/>
            <line falsecount="1" truecount="47" num="87" type="cond"/>
            <line num="88" count="47" type="stmt"/>
            <line num="90" count="48" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="98" count="14" type="method"/>
            <line num="99" count="14" type="stmt"/>
            <line falsecount="14" truecount="58" num="99" type="cond"/>
            <line num="100" count="58" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="107" count="72" type="method"/>
            <line num="109" count="72" type="stmt"/>
            <line falsecount="70" truecount="2" num="109" type="cond"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="70" type="stmt"/>
            <line falsecount="64" truecount="6" num="112" type="cond"/>
            <line num="113" count="6" type="stmt"/>
            <line num="115" count="64" type="stmt"/>
            <line num="116" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="122" count="76" type="method"/>
            <line num="125" count="76" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="131" count="74" type="method"/>
            <line num="133" count="74" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/Or.java" name="Or.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="11" loc="115" coveredmethods="8" methods="8" elements="31" classes="1" ncloc="44" statements="17" conditionals="6" coveredstatements="17"/>
            <class name="Or">
               <metrics coveredelements="31" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="31" statements="17" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="Or()" num="36" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="Or(Iterable&lt;Predicate&lt;? super A&gt;&gt;)" num="45" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Or(Predicate&lt;? super A&gt;)" num="54" count="26" type="method"/>
            <line num="55" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(Predicate&lt;? super A&gt;) : Or&lt;A&gt;" num="65" count="64" type="method"/>
            <line num="66" count="64" type="stmt"/>
            <line num="67" count="64" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(A) : boolean" num="75" count="67" type="method"/>
            <line num="76" count="67" type="stmt"/>
            <line num="77" count="203" type="stmt"/>
            <line falsecount="165" truecount="38" num="77" type="cond"/>
            <line num="78" count="38" type="stmt"/>
            <line num="81" count="29" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="87" count="74" type="method"/>
            <line num="89" count="74" type="stmt"/>
            <line falsecount="70" truecount="4" num="89" type="cond"/>
            <line num="90" count="4" type="stmt"/>
            <line num="92" count="70" type="stmt"/>
            <line falsecount="60" truecount="10" num="92" type="cond"/>
            <line num="93" count="10" type="stmt"/>
            <line num="95" count="60" type="stmt"/>
            <line num="96" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="102" count="97" type="method"/>
            <line num="104" count="97" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="110" count="95" type="method"/>
            <line num="112" count="95" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/Sequence.java" name="Sequence.java">
            <metrics coveredelements="42" coveredconditionals="12" complexity="14" loc="137" coveredmethods="8" methods="8" elements="42" classes="1" ncloc="57" statements="22" conditionals="12" coveredstatements="22"/>
            <class name="Sequence">
               <metrics coveredelements="42" coveredconditionals="12" complexity="14" coveredmethods="8" methods="8" elements="42" statements="22" conditionals="12" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="Sequence()" num="48" count="22" type="method"/>
            <line num="49" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="Sequence(Procedure&lt;? super A&gt;)" num="57" count="14" type="method"/>
            <line num="58" count="14" type="stmt"/>
            <line num="59" count="14" type="stmt"/>
            <line falsecount="1" truecount="13" num="59" type="cond"/>
            <line num="60" count="13" type="stmt"/>
            <line num="61" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="Sequence(Iterable&lt;Procedure&lt;? super A&gt;&gt;)" num="71" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="73" type="cond"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="then(Procedure&lt;? super A&gt;) : Sequence&lt;A&gt;" num="87" count="48" type="method"/>
            <line num="88" count="48" type="stmt"/>
            <line falsecount="1" truecount="47" num="88" type="cond"/>
            <line num="89" count="47" type="stmt"/>
            <line num="91" count="48" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(A) : void" num="99" count="17" type="method"/>
            <line num="100" count="17" type="stmt"/>
            <line falsecount="17" truecount="61" num="100" type="cond"/>
            <line num="101" count="61" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="108" count="71" type="method"/>
            <line num="110" count="71" type="stmt"/>
            <line falsecount="69" truecount="2" num="110" type="cond"/>
            <line num="111" count="2" type="stmt"/>
            <line num="113" count="69" type="stmt"/>
            <line falsecount="64" truecount="5" num="113" type="cond"/>
            <line num="114" count="5" type="stmt"/>
            <line num="116" count="64" type="stmt"/>
            <line num="117" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="123" count="75" type="method"/>
            <line num="126" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="132" count="73" type="method"/>
            <line num="134" count="73" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/TransformedBinaryFunction.java" name="TransformedBinaryFunction.java">
            <metrics coveredelements="29" coveredconditionals="4" complexity="9" loc="125" coveredmethods="7" methods="7" elements="29" classes="2" ncloc="51" statements="18" conditionals="4" coveredstatements="18"/>
            <class name="TransformedBinaryFunction">
               <metrics coveredelements="24" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="24" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <class name="TransformedBinaryFunction.Helper">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="Helper(BinaryFunction&lt;? super L, ? super R, ? extends X&gt;,Function&lt;? super X, ? extends T&gt;)" num="52" count="8" type="method"/>
            <line num="54" count="8" type="stmt"/>
            <line num="55" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="61" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TransformedBinaryFunction(BinaryFunction&lt;? super L, ? super R, ? extends X&gt;,Function&lt;? super X, ? extends T&gt;)" num="77" count="8" type="method"/>
            <line num="79" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="85" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="92" count="13" type="method"/>
            <line num="94" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="11" type="stmt"/>
            <line falsecount="8" truecount="3" num="97" type="cond"/>
            <line num="98" count="3" type="stmt"/>
            <line num="100" count="8" type="stmt"/>
            <line num="101" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="108" count="11" type="method"/>
            <line num="110" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line num="113" count="11" type="stmt"/>
            <line num="114" count="11" type="stmt"/>
            <line num="115" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="121" count="9" type="method"/>
            <line num="123" count="9" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/TransformedBinaryProcedure.java" name="TransformedBinaryProcedure.java">
            <metrics coveredelements="29" coveredconditionals="4" complexity="9" loc="125" coveredmethods="7" methods="7" elements="29" classes="2" ncloc="52" statements="18" conditionals="4" coveredstatements="18"/>
            <class name="TransformedBinaryProcedure">
               <metrics coveredelements="24" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="24" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <class name="TransformedBinaryProcedure.Helper">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="Helper(BinaryFunction&lt;? super L, ? super R, ? extends X&gt;,Procedure&lt;? super X&gt;)" num="52" count="8" type="method"/>
            <line num="54" count="8" type="stmt"/>
            <line num="55" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(L,R) : void" num="61" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TransformedBinaryProcedure(BinaryFunction&lt;? super L, ? super R, ? extends X&gt;,Procedure&lt;? super X&gt;)" num="77" count="8" type="method"/>
            <line num="79" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(L,R) : void" num="85" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="92" count="13" type="method"/>
            <line num="94" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="11" type="stmt"/>
            <line falsecount="8" truecount="3" num="97" type="cond"/>
            <line num="98" count="3" type="stmt"/>
            <line num="100" count="8" type="stmt"/>
            <line num="101" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="108" count="11" type="method"/>
            <line num="110" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line num="113" count="11" type="stmt"/>
            <line num="114" count="11" type="stmt"/>
            <line num="115" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="121" count="9" type="method"/>
            <line num="123" count="9" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/TransformedNullaryFunction.java" name="TransformedNullaryFunction.java">
            <metrics coveredelements="29" coveredconditionals="4" complexity="9" loc="123" coveredmethods="7" methods="7" elements="29" classes="2" ncloc="50" statements="18" conditionals="4" coveredstatements="18"/>
            <class name="TransformedNullaryFunction">
               <metrics coveredelements="24" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="24" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <class name="TransformedNullaryFunction.Helper">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="Helper(NullaryFunction&lt;? extends X&gt;,Function&lt;? super X, ? extends T&gt;)" num="51" count="8" type="method"/>
            <line num="52" count="8" type="stmt"/>
            <line num="53" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : T" num="59" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TransformedNullaryFunction(NullaryFunction&lt;? extends X&gt;,Function&lt;? super X, ? extends T&gt;)" num="75" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : T" num="83" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="90" count="13" type="method"/>
            <line num="92" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="92" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="11" type="stmt"/>
            <line falsecount="8" truecount="3" num="95" type="cond"/>
            <line num="96" count="3" type="stmt"/>
            <line num="98" count="8" type="stmt"/>
            <line num="99" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="106" count="11" type="method"/>
            <line num="108" count="11" type="stmt"/>
            <line num="109" count="11" type="stmt"/>
            <line num="110" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line num="113" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="119" count="9" type="method"/>
            <line num="121" count="9" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/TransformedNullaryProcedure.java" name="TransformedNullaryProcedure.java">
            <metrics coveredelements="29" coveredconditionals="4" complexity="9" loc="123" coveredmethods="7" methods="7" elements="29" classes="2" ncloc="51" statements="18" conditionals="4" coveredstatements="18"/>
            <class name="TransformedNullaryProcedure">
               <metrics coveredelements="24" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="24" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <class name="TransformedNullaryProcedure.Helper">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="Helper(NullaryFunction&lt;? extends X&gt;,Procedure&lt;? super X&gt;)" num="52" count="8" type="method"/>
            <line num="53" count="8" type="stmt"/>
            <line num="54" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TransformedNullaryProcedure(NullaryFunction&lt;? extends X&gt;,Procedure&lt;? super X&gt;)" num="76" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="83" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="90" count="13" type="method"/>
            <line num="92" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="92" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="11" type="stmt"/>
            <line falsecount="8" truecount="3" num="95" type="cond"/>
            <line num="96" count="3" type="stmt"/>
            <line num="98" count="8" type="stmt"/>
            <line num="99" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="106" count="11" type="method"/>
            <line num="108" count="11" type="stmt"/>
            <line num="109" count="11" type="stmt"/>
            <line num="110" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line num="113" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="119" count="9" type="method"/>
            <line num="121" count="9" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/TransposedFunction.java" name="TransposedFunction.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="110" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="36" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="TransposedFunction">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="TransposedFunction(BinaryFunction&lt;? super R, ? super L, ? extends T&gt;)" num="50" count="8" type="method"/>
            <line num="51" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(L,R) : T" num="59" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="66" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="68" type="cond"/>
            <line num="69" count="2" type="stmt"/>
            <line num="71" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="71" type="cond"/>
            <line num="72" count="4" type="stmt"/>
            <line num="74" count="6" type="stmt"/>
            <line num="75" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="81" count="10" type="method"/>
            <line num="83" count="10" type="stmt"/>
            <line num="84" count="10" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="91" count="8" type="method"/>
            <line num="93" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="transpose(BinaryFunction&lt;? super L, ? super R, ? extends T&gt;) : TransposedFunction&lt;R, L, T&gt;" num="106" count="2" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="107" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/TransposedPredicate.java" name="TransposedPredicate.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="108" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="36" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="TransposedPredicate">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="TransposedPredicate(BinaryPredicate&lt;? super R, ? super L&gt;)" num="48" count="9" type="method"/>
            <line num="49" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="64" count="14" type="method"/>
            <line num="66" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="66" type="cond"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="69" type="cond"/>
            <line num="70" count="4" type="stmt"/>
            <line num="72" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="79" count="12" type="method"/>
            <line num="81" count="12" type="stmt"/>
            <line num="82" count="12" type="stmt"/>
            <line num="83" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="89" count="10" type="method"/>
            <line num="91" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="transpose(BinaryPredicate&lt;? super L, ? super R&gt;) : TransposedPredicate&lt;R, L&gt;" num="104" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="105" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/TransposedProcedure.java" name="TransposedProcedure.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="9" loc="108" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="36" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="TransposedProcedure">
               <metrics coveredelements="25" coveredconditionals="6" complexity="9" coveredmethods="6" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="TransposedProcedure(BinaryProcedure&lt;? super R, ? super L&gt;)" num="48" count="10" type="method"/>
            <line num="49" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(L,R) : void" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="64" count="15" type="method"/>
            <line num="66" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="66" type="cond"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="13" type="stmt"/>
            <line falsecount="8" truecount="5" num="69" type="cond"/>
            <line num="70" count="5" type="stmt"/>
            <line num="72" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="79" count="13" type="method"/>
            <line num="81" count="13" type="stmt"/>
            <line num="82" count="13" type="stmt"/>
            <line num="83" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="89" count="11" type="method"/>
            <line num="91" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="transpose(BinaryProcedure&lt;? super L, ? super R&gt;) : TransposedProcedure&lt;R, L&gt;" num="104" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="105" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/composite/WhileDoNullaryProcedure.java" name="WhileDoNullaryProcedure.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="55" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="17" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="WhileDoNullaryProcedure">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="WhileDoNullaryProcedure(NullaryPredicate,NullaryProcedure)" num="35" count="6" type="method"/>
            <line num="36" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="42" count="3" type="method"/>
            <line num="43" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="43" type="cond"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.range">
         <metrics coveredelements="465" complexity="187" loc="2020" methods="129" classes="11" statements="281" coveredconditionals="100" coveredmethods="107" elements="512" ncloc="730" files="11" conditionals="102" coveredstatements="258"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/AbstractRange.java" name="AbstractRange.java">
            <metrics coveredelements="74" coveredconditionals="18" complexity="23" loc="203" coveredmethods="10" methods="10" elements="78" classes="1" ncloc="98" statements="48" conditionals="20" coveredstatements="46"/>
            <class name="AbstractRange">
               <metrics coveredelements="74" coveredconditionals="18" complexity="23" coveredmethods="10" methods="10" elements="78" statements="48" conditionals="20" coveredstatements="46"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractRange(Endpoint&lt;T&gt;,Endpoint&lt;T&gt;,S,BinaryFunction&lt;T, S, T&gt;)" num="64" count="814" type="method"/>
            <line num="66" count="814" type="stmt"/>
            <line num="67" count="814" type="stmt"/>
            <line num="68" count="814" type="stmt"/>
            <line num="69" count="814" type="stmt"/>
            <line num="70" count="814" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLeftEndpoint() : Endpoint&lt;T&gt;" num="76" count="1543" type="method"/>
            <line num="77" count="1543" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRightEndpoint() : Endpoint&lt;T&gt;" num="83" count="1543" type="method"/>
            <line num="84" count="1543" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStep() : S" num="90" count="801596" type="method"/>
            <line num="91" count="801596" type="stmt"/>
            <line complexity="4" visibility="public" signature="containsAll(Collection&lt;T&gt;) : boolean" num="97" count="20" type="method"/>
            <line num="98" count="20" type="stmt"/>
            <line falsecount="10" truecount="10" num="98" type="cond"/>
            <line num="99" count="10" type="stmt"/>
            <line num="101" count="10" type="stmt"/>
            <line num="102" count="45" type="stmt"/>
            <line falsecount="40" truecount="5" num="102" type="cond"/>
            <line num="103" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="iterator() : Iterator&lt;T&gt;" num="114" count="178" type="method"/>
            <line num="116" count="178" type="stmt"/>
            <line falsecount="178" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="178" type="stmt"/>
            <line falsecount="178" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="178" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="138" count="680" type="method"/>
            <line num="140" count="680" type="stmt"/>
            <line num="141" count="680" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="148" count="99" type="method"/>
            <line num="150" count="99" type="stmt"/>
            <line falsecount="89" truecount="10" num="150" type="cond"/>
            <line num="151" count="10" type="stmt"/>
            <line num="153" count="89" type="stmt"/>
            <line falsecount="74" truecount="15" num="153" type="cond"/>
            <line num="154" count="15" type="stmt"/>
            <line num="156" count="74" type="stmt"/>
            <line num="157" count="74" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="164" count="69" type="method"/>
            <line num="166" count="69" type="stmt"/>
            <line num="167" count="69" type="stmt"/>
            <line num="168" count="69" type="stmt"/>
            <line num="169" count="69" type="stmt"/>
            <line num="170" count="69" type="stmt"/>
            <line num="171" count="69" type="stmt"/>
            <line num="172" count="69" type="stmt"/>
            <line num="173" count="69" type="stmt"/>
            <line complexity="7" visibility="public" signature="isEmpty() : boolean" num="179" count="233" type="method"/>
            <line num="180" count="233" type="stmt"/>
            <line num="181" count="233" type="stmt"/>
            <line num="183" count="233" type="stmt"/>
            <line num="184" count="233" type="stmt"/>
            <line num="185" count="233" type="stmt"/>
            <line num="187" count="233" type="stmt"/>
            <line falsecount="223" truecount="10" num="187" type="cond"/>
            <line num="188" count="10" type="stmt"/>
            <line num="191" count="223" type="stmt"/>
            <line falsecount="55" truecount="168" num="191" type="cond"/>
            <line num="193" count="223" type="stmt"/>
            <line num="195" count="223" type="stmt"/>
            <line falsecount="203" truecount="20" num="195" type="cond"/>
            <line num="196" count="20" type="stmt"/>
            <line num="199" count="203" type="stmt"/>
            <line num="200" count="203" type="stmt"/>
            <line falsecount="63" truecount="140" num="200" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/BoundType.java" name="BoundType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BoundType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/CharacterRange.java" name="CharacterRange.java">
            <metrics coveredelements="78" coveredconditionals="24" complexity="28" loc="202" coveredmethods="11" methods="14" elements="84" classes="1" ncloc="95" statements="46" conditionals="24" coveredstatements="43"/>
            <class name="CharacterRange">
               <metrics coveredelements="78" coveredconditionals="24" complexity="28" coveredmethods="11" methods="14" elements="84" statements="46" conditionals="24" coveredstatements="43"/>
            </class>
            <line complexity="2" visibility="public" signature="evaluate(Character,Character) : Integer" num="38" count="91" type="method"/>
            <line num="39" count="91" type="stmt"/>
            <line falsecount="48" truecount="43" num="39" type="cond"/>
            <line complexity="1" visibility="public" signature="CharacterRange(char,char)" num="51" count="89" type="method"/>
            <line num="52" count="89" type="stmt"/>
            <line complexity="1" visibility="public" signature="CharacterRange(char,char,int)" num="62" count="97" type="method"/>
            <line num="63" count="97" type="stmt"/>
            <line complexity="1" visibility="public" signature="CharacterRange(Endpoint&lt;Character&gt;,Endpoint&lt;Character&gt;)" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CharacterRange(Endpoint&lt;Character&gt;,Endpoint&lt;Character&gt;,int)" num="85" count="145" type="method"/>
            <line num="86" count="145" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Character,Integer) : Character" num="88" count="11" type="method"/>
            <line num="89" count="11" type="stmt"/>
            <line num="92" count="145" type="stmt"/>
            <line num="93" count="145" type="stmt"/>
            <line num="95" count="145" type="stmt"/>
            <line complexity="1" visibility="public" signature="CharacterRange(char,BoundType,char,BoundType)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CharacterRange(char,BoundType,char,BoundType,int)" num="122" count="138" type="method"/>
            <line num="123" count="138" type="stmt"/>
            <line complexity="11" visibility="public" signature="contains(Character) : boolean" num="132" count="136" type="method"/>
            <line num="133" count="136" type="stmt"/>
            <line falsecount="135" truecount="1" num="133" type="cond"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="135" type="stmt"/>
            <line num="137" count="135" type="stmt"/>
            <line num="138" count="135" type="stmt"/>
            <line num="139" count="135" type="stmt"/>
            <line num="140" count="135" type="stmt"/>
            <line num="141" count="135" type="stmt"/>
            <line num="143" count="135" type="stmt"/>
            <line num="144" count="135" type="stmt"/>
            <line num="146" count="135" type="stmt"/>
            <line falsecount="70" truecount="65" num="146" type="cond"/>
            <line num="147" count="65" type="stmt"/>
            <line falsecount="26" truecount="39" num="147" type="cond"/>
            <line num="148" count="65" type="stmt"/>
            <line falsecount="39" truecount="26" num="148" type="cond"/>
            <line num="149" count="65" type="stmt"/>
            <line falsecount="46" truecount="19" num="149" type="cond"/>
            <line num="150" count="19" type="stmt"/>
            <line num="153" count="70" type="stmt"/>
            <line falsecount="44" truecount="26" num="153" type="cond"/>
            <line num="154" count="70" type="stmt"/>
            <line falsecount="26" truecount="44" num="154" type="cond"/>
            <line num="155" count="70" type="stmt"/>
            <line falsecount="50" truecount="20" num="155" type="cond"/>
            <line num="156" count="20" type="stmt"/>
            <line num="159" count="96" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createIterator() : Iterator&lt;Character&gt;" num="165" count="22" type="method"/>
            <line num="166" count="22" type="stmt"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 169()" num="169" count="22" type="method"/>
            <line num="170" count="22" type="stmt"/>
            <line num="172" count="22" type="stmt"/>
            <line falsecount="17" truecount="5" num="172" type="cond"/>
            <line num="173" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Character" num="181" count="127" type="method"/>
            <line num="182" count="127" type="stmt"/>
            <line num="183" count="127" type="stmt"/>
            <line num="184" count="127" type="stmt"/>
            <line num="185" count="127" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="188" count="149" type="method"/>
            <line num="189" count="149" type="stmt"/>
            <line num="191" count="149" type="stmt"/>
            <line falsecount="135" truecount="14" num="191" type="cond"/>
            <line num="192" count="14" type="stmt"/>
            <line num="194" count="135" type="stmt"/>
            <line falsecount="52" truecount="83" num="194" type="cond"/>
            <line num="195" count="83" type="stmt"/>
            <line num="197" count="52" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/DoubleRange.java" name="DoubleRange.java">
            <metrics coveredelements="45" coveredconditionals="8" complexity="19" loc="190" coveredmethods="12" methods="15" elements="51" classes="1" ncloc="76" statements="28" conditionals="8" coveredstatements="25"/>
            <class name="DoubleRange">
               <metrics coveredelements="45" coveredconditionals="8" complexity="19" coveredmethods="12" methods="15" elements="51" statements="28" conditionals="8" coveredstatements="25"/>
            </class>
            <line complexity="2" visibility="public" signature="evaluate(Double,Double) : Double" num="38" count="96" type="method"/>
            <line num="39" count="96" type="stmt"/>
            <line falsecount="51" truecount="45" num="39" type="cond"/>
            <line complexity="1" visibility="public" signature="DoubleRange(Number,Number)" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleRange(Number,Number,Number)" num="62" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleRange(double,double)" num="72" count="94" type="method"/>
            <line num="73" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleRange(double,double,double)" num="83" count="103" type="method"/>
            <line num="84" count="103" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleRange(Endpoint&lt;Double&gt;,Endpoint&lt;Double&gt;)" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleRange(double,BoundType,double,BoundType)" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleRange(Endpoint&lt;Double&gt;,Endpoint&lt;Double&gt;,double)" num="120" count="151" type="method"/>
            <line num="121" count="151" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Double,Double) : Double" num="123" count="11" type="method"/>
            <line num="124" count="11" type="stmt"/>
            <line num="128" count="151" type="stmt"/>
            <line num="129" count="151" type="stmt"/>
            <line num="131" count="151" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleRange(double,BoundType,double,BoundType,double)" num="145" count="144" type="method"/>
            <line num="147" count="144" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createIterator() : Iterator&lt;Double&gt;" num="153" count="23" type="method"/>
            <line num="154" count="23" type="stmt"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 157()" num="157" count="23" type="method"/>
            <line num="158" count="23" type="stmt"/>
            <line num="160" count="23" type="stmt"/>
            <line falsecount="18" truecount="5" num="160" type="cond"/>
            <line num="161" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Double" num="169" count="141" type="method"/>
            <line num="170" count="141" type="stmt"/>
            <line num="171" count="141" type="stmt"/>
            <line num="172" count="141" type="stmt"/>
            <line num="173" count="141" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="176" count="164" type="method"/>
            <line num="177" count="164" type="stmt"/>
            <line num="179" count="164" type="stmt"/>
            <line falsecount="149" truecount="15" num="179" type="cond"/>
            <line num="180" count="15" type="stmt"/>
            <line num="182" count="149" type="stmt"/>
            <line falsecount="72" truecount="77" num="182" type="cond"/>
            <line num="183" count="77" type="stmt"/>
            <line num="185" count="72" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/Endpoint.java" name="Endpoint.java">
            <metrics coveredelements="38" coveredconditionals="10" complexity="13" loc="123" coveredmethods="8" methods="8" elements="38" classes="1" ncloc="48" statements="20" conditionals="10" coveredstatements="20"/>
            <class name="Endpoint">
               <metrics coveredelements="38" coveredconditionals="10" complexity="13" coveredmethods="8" methods="8" elements="38" statements="20" conditionals="10" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="Endpoint(T,BoundType)" num="48" count="1644" type="method"/>
            <line num="49" count="1644" type="stmt"/>
            <line num="50" count="1644" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : T" num="56" count="804881" type="method"/>
            <line num="57" count="804881" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBoundType() : BoundType" num="63" count="2124" type="method"/>
            <line num="64" count="2124" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="70" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="72" type="cond"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="79" count="153" type="method"/>
            <line num="81" count="153" type="stmt"/>
            <line falsecount="152" truecount="1" num="81" type="cond"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="152" type="stmt"/>
            <line falsecount="151" truecount="1" num="84" type="cond"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="151" type="stmt"/>
            <line num="88" count="151" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="95" count="144" type="method"/>
            <line num="97" count="144" type="stmt"/>
            <line num="98" count="144" type="stmt"/>
            <line num="99" count="144" type="stmt"/>
            <line num="100" count="144" type="stmt"/>
            <line num="101" count="144" type="stmt"/>
            <line num="102" count="144" type="stmt"/>
            <line complexity="2" visibility="public" signature="toLeftString() : String" num="110" count="682" type="method"/>
            <line num="111" count="682" type="stmt"/>
            <line falsecount="341" truecount="341" num="111" type="cond"/>
            <line complexity="2" visibility="public" signature="toRightString() : String" num="119" count="682" type="method"/>
            <line num="120" count="682" type="stmt"/>
            <line falsecount="344" truecount="338" num="120" type="cond"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/FloatRange.java" name="FloatRange.java">
            <metrics coveredelements="45" coveredconditionals="8" complexity="19" loc="191" coveredmethods="12" methods="15" elements="51" classes="1" ncloc="75" statements="28" conditionals="8" coveredstatements="25"/>
            <class name="FloatRange">
               <metrics coveredelements="45" coveredconditionals="8" complexity="19" coveredmethods="12" methods="15" elements="51" statements="28" conditionals="8" coveredstatements="25"/>
            </class>
            <line complexity="2" visibility="public" signature="evaluate(Float,Float) : Float" num="40" count="96" type="method"/>
            <line num="41" count="96" type="stmt"/>
            <line falsecount="51" truecount="45" num="41" type="cond"/>
            <line complexity="1" visibility="public" signature="FloatRange(Number,Number)" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatRange(Number,Number,Number)" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatRange(float,float)" num="74" count="94" type="method"/>
            <line num="75" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatRange(float,float,float)" num="85" count="103" type="method"/>
            <line num="86" count="103" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatRange(Endpoint&lt;Float&gt;,Endpoint&lt;Float&gt;)" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatRange(Endpoint&lt;Float&gt;,Endpoint&lt;Float&gt;,float)" num="108" count="151" type="method"/>
            <line num="109" count="151" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Float,Float) : Float" num="111" count="11" type="method"/>
            <line num="112" count="11" type="stmt"/>
            <line num="115" count="151" type="stmt"/>
            <line num="116" count="151" type="stmt"/>
            <line num="118" count="151" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatRange(float,BoundType,float,BoundType)" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatRange(float,BoundType,float,BoundType,float)" num="146" count="144" type="method"/>
            <line num="148" count="144" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createIterator() : Iterator&lt;Float&gt;" num="154" count="24" type="method"/>
            <line num="155" count="24" type="stmt"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 158()" num="158" count="24" type="method"/>
            <line num="159" count="24" type="stmt"/>
            <line num="161" count="24" type="stmt"/>
            <line falsecount="19" truecount="5" num="161" type="cond"/>
            <line num="162" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Float" num="170" count="146" type="method"/>
            <line num="171" count="146" type="stmt"/>
            <line num="172" count="146" type="stmt"/>
            <line num="173" count="146" type="stmt"/>
            <line num="174" count="146" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="177" count="170" type="method"/>
            <line num="178" count="170" type="stmt"/>
            <line num="180" count="170" type="stmt"/>
            <line falsecount="154" truecount="16" num="180" type="cond"/>
            <line num="181" count="16" type="stmt"/>
            <line num="183" count="154" type="stmt"/>
            <line falsecount="72" truecount="82" num="183" type="cond"/>
            <line num="184" count="82" type="stmt"/>
            <line num="186" count="72" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/IntegerRange.java" name="IntegerRange.java">
            <metrics coveredelements="45" coveredconditionals="8" complexity="19" loc="219" coveredmethods="12" methods="15" elements="51" classes="1" ncloc="74" statements="28" conditionals="8" coveredstatements="25"/>
            <class name="IntegerRange">
               <metrics coveredelements="45" coveredconditionals="8" complexity="19" coveredmethods="12" methods="15" elements="51" statements="28" conditionals="8" coveredstatements="25"/>
            </class>
            <line complexity="2" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="41" count="158" type="method"/>
            <line num="42" count="158" type="stmt"/>
            <line falsecount="112" truecount="46" num="42" type="cond"/>
            <line complexity="1" visibility="public" signature="IntegerRange(Number,Number)" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerRange(Number,Number,Number)" num="70" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerRange(int,int)" num="82" count="156" type="method"/>
            <line num="83" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerRange(int,int,int)" num="96" count="165" type="method"/>
            <line num="97" count="165" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerRange(Endpoint&lt;Integer&gt;,Endpoint&lt;Integer&gt;)" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerRange(int,BoundType,int,BoundType)" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerRange(Endpoint&lt;Integer&gt;,Endpoint&lt;Integer&gt;,int)" num="144" count="213" type="method"/>
            <line num="145" count="213" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="147" count="11" type="method"/>
            <line num="148" count="11" type="stmt"/>
            <line num="152" count="213" type="stmt"/>
            <line num="153" count="213" type="stmt"/>
            <line num="155" count="213" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerRange(int,BoundType,int,BoundType,int)" num="175" count="206" type="method"/>
            <line num="176" count="206" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createIterator() : Iterator&lt;Integer&gt;" num="182" count="84" type="method"/>
            <line num="183" count="84" type="stmt"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 186()" num="186" count="84" type="method"/>
            <line num="187" count="84" type="stmt"/>
            <line num="189" count="84" type="stmt"/>
            <line falsecount="79" truecount="5" num="189" type="cond"/>
            <line num="190" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Integer" num="198" count="800190" type="method"/>
            <line num="199" count="800190" type="stmt"/>
            <line num="200" count="800190" type="stmt"/>
            <line num="201" count="800190" type="stmt"/>
            <line num="202" count="800190" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="205" count="800226" type="method"/>
            <line num="206" count="800226" type="stmt"/>
            <line num="208" count="800226" type="stmt"/>
            <line falsecount="800198" truecount="28" num="208" type="cond"/>
            <line num="209" count="28" type="stmt"/>
            <line num="211" count="800198" type="stmt"/>
            <line falsecount="72" truecount="800126" num="211" type="cond"/>
            <line num="212" count="800126" type="stmt"/>
            <line num="214" count="72" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/LongRange.java" name="LongRange.java">
            <metrics coveredelements="45" coveredconditionals="8" complexity="20" loc="205" coveredmethods="12" methods="16" elements="53" classes="1" ncloc="77" statements="29" conditionals="8" coveredstatements="25"/>
            <class name="LongRange">
               <metrics coveredelements="45" coveredconditionals="8" complexity="20" coveredmethods="12" methods="16" elements="53" statements="29" conditionals="8" coveredstatements="25"/>
            </class>
            <line complexity="2" visibility="public" signature="evaluate(Long,Long) : Long" num="39" count="99" type="method"/>
            <line num="40" count="99" type="stmt"/>
            <line falsecount="53" truecount="46" num="40" type="cond"/>
            <line complexity="1" visibility="public" signature="LongRange(Number,Number)" num="52" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongRange(Number,Number,Number)" num="63" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongRange(long,long)" num="73" count="97" type="method"/>
            <line num="74" count="97" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongRange(long,long,long)" num="84" count="106" type="method"/>
            <line num="85" count="106" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongRange(Endpoint&lt;Long&gt;,Endpoint&lt;Long&gt;)" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongRange(Endpoint&lt;Long&gt;,Endpoint&lt;Long&gt;,int)" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongRange(long,BoundType,long,BoundType)" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongRange(Endpoint&lt;Long&gt;,Endpoint&lt;Long&gt;,long)" num="132" count="154" type="method"/>
            <line num="133" count="154" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Long,Long) : Long" num="135" count="11" type="method"/>
            <line num="136" count="11" type="stmt"/>
            <line num="140" count="154" type="stmt"/>
            <line num="141" count="154" type="stmt"/>
            <line num="143" count="154" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongRange(long,BoundType,long,BoundType,long)" num="157" count="147" type="method"/>
            <line num="159" count="147" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createIterator() : Iterator&lt;Long&gt;" num="168" count="25" type="method"/>
            <line num="169" count="25" type="stmt"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 172()" num="172" count="25" type="method"/>
            <line num="173" count="25" type="stmt"/>
            <line num="175" count="25" type="stmt"/>
            <line falsecount="20" truecount="5" num="175" type="cond"/>
            <line num="176" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Long" num="184" count="149" type="method"/>
            <line num="185" count="149" type="stmt"/>
            <line num="186" count="149" type="stmt"/>
            <line num="187" count="149" type="stmt"/>
            <line num="188" count="149" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="191" count="152" type="method"/>
            <line num="192" count="152" type="stmt"/>
            <line num="194" count="152" type="stmt"/>
            <line falsecount="137" truecount="15" num="194" type="cond"/>
            <line num="195" count="15" type="stmt"/>
            <line num="197" count="137" type="stmt"/>
            <line falsecount="62" truecount="75" num="197" type="cond"/>
            <line num="198" count="75" type="stmt"/>
            <line num="200" count="62" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/NumericRange.java" name="NumericRange.java">
            <metrics coveredelements="39" coveredconditionals="16" complexity="12" loc="83" coveredmethods="2" methods="2" elements="39" classes="1" ncloc="37" statements="21" conditionals="16" coveredstatements="21"/>
            <class name="NumericRange">
               <metrics coveredelements="39" coveredconditionals="16" complexity="12" coveredmethods="2" methods="2" elements="39" statements="21" conditionals="16" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="protected" signature="NumericRange(Endpoint&lt;T&gt;,Endpoint&lt;T&gt;,T,BinaryFunction&lt;T, T, T&gt;)" num="43" count="669" type="method"/>
            <line num="45" count="669" type="stmt"/>
            <line complexity="11" visibility="public" signature="contains(T) : boolean" num="51" count="564" type="method"/>
            <line num="52" count="564" type="stmt"/>
            <line falsecount="560" truecount="4" num="52" type="cond"/>
            <line num="53" count="4" type="stmt"/>
            <line num="55" count="560" type="stmt"/>
            <line num="56" count="560" type="stmt"/>
            <line num="57" count="560" type="stmt"/>
            <line num="58" count="560" type="stmt"/>
            <line num="59" count="560" type="stmt"/>
            <line num="60" count="560" type="stmt"/>
            <line num="62" count="560" type="stmt"/>
            <line num="63" count="560" type="stmt"/>
            <line num="65" count="560" type="stmt"/>
            <line falsecount="300" truecount="260" num="65" type="cond"/>
            <line num="66" count="260" type="stmt"/>
            <line falsecount="104" truecount="156" num="66" type="cond"/>
            <line num="67" count="260" type="stmt"/>
            <line falsecount="156" truecount="104" num="67" type="cond"/>
            <line num="68" count="260" type="stmt"/>
            <line falsecount="160" truecount="100" num="68" type="cond"/>
            <line num="69" count="100" type="stmt"/>
            <line num="72" count="300" type="stmt"/>
            <line falsecount="196" truecount="104" num="72" type="cond"/>
            <line num="73" count="300" type="stmt"/>
            <line falsecount="104" truecount="196" num="73" type="cond"/>
            <line num="76" count="300" type="stmt"/>
            <line falsecount="204" truecount="96" num="76" type="cond"/>
            <line num="77" count="96" type="stmt"/>
            <line num="80" count="364" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/Range.java" name="Range.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="95" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Range">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/range/Ranges.java" name="Ranges.java">
            <metrics coveredelements="56" coveredconditionals="0" complexity="34" loc="468" coveredmethods="28" methods="34" elements="67" classes="1" ncloc="133" statements="33" conditionals="0" coveredstatements="28"/>
            <class name="Ranges">
               <metrics coveredelements="56" coveredconditionals="0" complexity="34" coveredmethods="28" methods="34" elements="67" statements="33" conditionals="0" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="private" signature="Ranges()" num="30" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="integerRange(Number,Number) : IntegerRange" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRange(Number,Number,Number) : IntegerRange" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRange(int,int) : IntegerRange" num="64" count="95" type="method"/>
            <line num="65" count="95" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRange(int,int,int) : IntegerRange" num="76" count="10" type="method"/>
            <line num="77" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRange(int,BoundType,int,BoundType) : IntegerRange" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRange(int,BoundType,int,BoundType,int) : IntegerRange" num="104" count="42" type="method"/>
            <line num="107" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRange(Endpoint&lt;Integer&gt;,Endpoint&lt;Integer&gt;,int) : IntegerRange" num="118" count="3" type="method"/>
            <line num="121" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="longRange(Number,Number) : LongRange" num="131" count="2" type="method"/>
            <line num="132" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="longRange(Number,Number,Number) : LongRange" num="143" count="2" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="longRange(long,long) : LongRange" num="155" count="95" type="method"/>
            <line num="156" count="95" type="stmt"/>
            <line complexity="1" visibility="public" signature="longRange(long,long,long) : LongRange" num="167" count="10" type="method"/>
            <line num="168" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="longRange(long,BoundType,long,BoundType) : LongRange" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longRange(long,BoundType,long,BoundType,long) : LongRange" num="195" count="42" type="method"/>
            <line num="198" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="longRange(Endpoint&lt;Long&gt;,Endpoint&lt;Long&gt;,long) : LongRange" num="209" count="3" type="method"/>
            <line num="212" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatRange(Number,Number) : FloatRange" num="223" count="2" type="method"/>
            <line num="224" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatRange(Number,Number,Number) : FloatRange" num="235" count="2" type="method"/>
            <line num="236" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatRange(float,float) : FloatRange" num="246" count="92" type="method"/>
            <line num="247" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatRange(float,float,float) : FloatRange" num="258" count="10" type="method"/>
            <line num="259" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatRange(float,BoundType,float,BoundType) : FloatRange" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatRange(float,BoundType,float,BoundType,float) : FloatRange" num="286" count="42" type="method"/>
            <line num="289" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatRange(Endpoint&lt;Float&gt;,Endpoint&lt;Float&gt;,float) : FloatRange" num="300" count="3" type="method"/>
            <line num="303" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleRange(Number,Number) : DoubleRange" num="314" count="2" type="method"/>
            <line num="315" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleRange(Number,Number,Number) : DoubleRange" num="326" count="2" type="method"/>
            <line num="327" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleRange(double,double) : DoubleRange" num="337" count="92" type="method"/>
            <line num="338" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleRange(double,double,double) : DoubleRange" num="349" count="10" type="method"/>
            <line num="350" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleRange(double,BoundType,double,BoundType,double) : DoubleRange" num="363" count="42" type="method"/>
            <line num="366" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleRange(double,BoundType,double,BoundType) : DoubleRange" num="378" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleRange(Endpoint&lt;Double&gt;,Endpoint&lt;Double&gt;,double) : DoubleRange" num="391" count="3" type="method"/>
            <line num="394" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="characterRange(char,char) : CharacterRange" num="405" count="89" type="method"/>
            <line num="406" count="89" type="stmt"/>
            <line complexity="1" visibility="public" signature="characterRange(char,char,int) : CharacterRange" num="417" count="11" type="method"/>
            <line num="418" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="characterRange(char,BoundType,char,BoundType) : CharacterRange" num="430" count="0" type="method"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="characterRange(char,BoundType,char,BoundType,int) : CharacterRange" num="447" count="42" type="method"/>
            <line num="452" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="characterRange(Endpoint&lt;Character&gt;,Endpoint&lt;Character&gt;,int) : CharacterRange" num="463" count="3" type="method"/>
            <line num="466" count="3" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.generator">
         <metrics coveredelements="34" complexity="11" loc="216" methods="9" classes="3" statements="21" coveredconditionals="4" coveredmethods="9" elements="34" ncloc="68" files="3" conditionals="4" coveredstatements="21"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/BaseGenerator.java" name="BaseGenerator.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="62" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="18" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="BaseGenerator">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="BaseGenerator()" num="33" count="327" type="method"/>
            <line num="34" count="327" type="stmt"/>
            <line complexity="1" visibility="public" signature="to(Function&lt;Generator&lt;? extends E&gt;, ? extends T&gt;) : T" num="43" count="153" type="method"/>
            <line num="44" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="to(C) : C" num="51" count="20" type="method"/>
            <line num="52" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="toCollection() : Collection&lt;E&gt;" num="59" count="119" type="method"/>
            <line num="60" count="119" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/FilteredGenerator.java" name="FilteredGenerator.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="7" loc="96" coveredmethods="5" methods="5" elements="26" classes="1" ncloc="40" statements="17" conditionals="4" coveredstatements="17"/>
            <class name="FilteredGenerator">
               <metrics coveredelements="26" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="FilteredGenerator(Generator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="48" count="27" type="method"/>
            <line num="49" count="27" type="stmt"/>
            <line num="50" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Procedure&lt;? super E&gt;) : void" num="56" count="15" type="method"/>
            <line num="57" count="15" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getWrappedGenerator() : Generator&lt;? extends E&gt;" num="64" count="25" type="method"/>
            <line num="65" count="25" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="71" count="5" type="method"/>
            <line num="73" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="73" type="cond"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="76" type="cond"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="86" count="4" type="method"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/Generator.java" name="Generator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="58" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Generator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.apache.commons.functor.core.collection">
         <metrics coveredelements="285" complexity="97" loc="954" methods="61" classes="6" statements="154" coveredconditionals="70" coveredmethods="61" elements="285" ncloc="397" files="6" conditionals="70" coveredstatements="154"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/collection/FilteredIterable.java" name="FilteredIterable.java">
            <metrics coveredelements="63" coveredconditionals="14" complexity="21" loc="198" coveredmethods="14" methods="14" elements="63" classes="1" ncloc="98" statements="35" conditionals="14" coveredstatements="35"/>
            <class name="FilteredIterable">
               <metrics coveredelements="63" coveredconditionals="14" complexity="21" coveredmethods="14" methods="14" elements="63" statements="35" conditionals="14" coveredstatements="35"/>
            </class>
            <line complexity="1" visibility="public" signature="retain(Class) : FilteredIterable" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="retain(Predicate) : FilteredIterable" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="retain(Class) : FilteredIterable" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="FilteredIterable(Iterable&lt;? extends T&gt;)" num="78" count="30" type="method"/>
            <line num="79" count="30" type="stmt"/>
            <line num="80" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;T&gt;" num="86" count="24" type="method"/>
            <line num="87" count="24" type="stmt"/>
            <line num="88" count="24" type="stmt"/>
            <line num="89" count="24" type="stmt"/>
            <line num="91" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="97" count="3" type="method"/>
            <line num="99" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="retain(Predicate&lt;? super T&gt;) : FilteredIterable&lt;T&gt;" num="107" count="11" type="method"/>
            <line num="108" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="108" type="cond"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="10" type="stmt"/>
            <line num="112" count="10" type="stmt"/>
            <line falsecount="1" truecount="9" num="112" type="cond"/>
            <line num="113" count="9" type="stmt"/>
            <line num="115" count="10" type="stmt"/>
            <line num="117" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="retain(Class&lt;U&gt;) : FilteredIterable&lt;U&gt;" num="127" count="6" type="method"/>
            <line num="128" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="128" type="cond"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;U&gt;" num="133" count="5" type="method"/>
            <line num="134" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(T) : U" num="138" count="11" type="method"/>
            <line num="141" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="retain(Class&lt;?&gt;) : FilteredIterable&lt;T&gt;" num="154" count="2" type="method"/>
            <line num="155" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="155" type="cond"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(T) : boolean" num="160" count="5" type="method"/>
            <line num="161" count="5" type="stmt"/>
            <line num="162" count="9" type="stmt"/>
            <line falsecount="7" truecount="2" num="162" type="cond"/>
            <line num="163" count="2" type="stmt"/>
            <line num="166" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="of(Iterable&lt;T&gt;) : FilteredIterable&lt;T&gt;" num="179" count="26" type="method"/>
            <line num="180" count="26" type="stmt"/>
            <line falsecount="25" truecount="1" num="180" type="cond"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="25" type="stmt"/>
            <line falsecount="24" truecount="1" num="183" type="cond"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : FilteredIterable&lt;T&gt;" num="194" count="2" type="method"/>
            <line num="196" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/collection/FilteredIterator.java" name="FilteredIterator.java">
            <metrics coveredelements="65" coveredconditionals="16" complexity="18" loc="188" coveredmethods="10" methods="10" elements="65" classes="1" ncloc="82" statements="39" conditionals="16" coveredstatements="39"/>
            <class name="FilteredIterator">
               <metrics coveredelements="65" coveredconditionals="16" complexity="18" coveredmethods="10" methods="10" elements="65" statements="39" conditionals="16" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="FilteredIterator(Iterator&lt;? extends T&gt;,Predicate&lt;? super T&gt;)" num="65" count="37" type="method"/>
            <line num="66" count="37" type="stmt"/>
            <line num="67" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="77" count="176" type="method"/>
            <line num="78" count="176" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : T" num="85" count="99" type="method"/>
            <line num="86" count="99" type="stmt"/>
            <line falsecount="3" truecount="96" num="86" type="cond"/>
            <line num="87" count="96" type="stmt"/>
            <line num="89" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove() : void" num="96" count="36" type="method"/>
            <line num="97" count="36" type="stmt"/>
            <line falsecount="4" truecount="32" num="97" type="cond"/>
            <line num="98" count="32" type="stmt"/>
            <line num="99" count="32" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="108" count="9" type="method"/>
            <line num="110" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="110" type="cond"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="113" type="cond"/>
            <line num="114" count="3" type="stmt"/>
            <line num="116" count="5" type="stmt"/>
            <line num="117" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="123" count="3" type="method"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line num="130" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="136" count="3" type="method"/>
            <line num="138" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="filter(Iterator&lt;? extends T&gt;,Predicate&lt;? super T&gt;) : Iterator&lt;T&gt;" num="150" count="34" type="method"/>
            <line num="152" count="34" type="stmt"/>
            <line falsecount="18" truecount="16" num="152" type="cond"/>
            <line falsecount="17" truecount="1" num="152" type="cond"/>
            <line complexity="3" visibility="private" signature="setNext() : boolean" num="161" count="118" type="method"/>
            <line num="162" count="118" type="stmt"/>
            <line falsecount="22" truecount="162" num="162" type="cond"/>
            <line num="163" count="162" type="stmt"/>
            <line num="164" count="162" type="stmt"/>
            <line num="165" count="162" type="stmt"/>
            <line falsecount="66" truecount="96" num="165" type="cond"/>
            <line num="166" count="96" type="stmt"/>
            <line num="167" count="96" type="stmt"/>
            <line num="168" count="96" type="stmt"/>
            <line num="171" count="22" type="stmt"/>
            <line num="172" count="22" type="stmt"/>
            <line num="173" count="22" type="stmt"/>
            <line complexity="1" visibility="private" signature="returnNext() : T" num="180" count="96" type="method"/>
            <line num="181" count="96" type="stmt"/>
            <line num="182" count="96" type="stmt"/>
            <line num="183" count="96" type="stmt"/>
            <line num="184" count="96" type="stmt"/>
            <line num="185" count="96" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/collection/IsElementOf.java" name="IsElementOf.java">
            <metrics coveredelements="50" coveredconditionals="16" complexity="18" loc="152" coveredmethods="9" methods="9" elements="50" classes="1" ncloc="63" statements="25" conditionals="16" coveredstatements="25"/>
            <class name="IsElementOf">
               <metrics coveredelements="50" coveredconditionals="16" complexity="18" coveredmethods="9" methods="9" elements="50" statements="25" conditionals="16" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="IsElementOf()" num="51" count="8" type="method"/>
            <line complexity="3" visibility="public" signature="test(L,R) : boolean" num="59" count="15" type="method"/>
            <line num="60" count="15" type="stmt"/>
            <line num="61" count="14" type="stmt"/>
            <line falsecount="9" truecount="5" num="61" type="cond"/>
            <line num="62" count="5" type="stmt"/>
            <line num="64" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="64" type="cond"/>
            <line num="65" count="8" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="73" count="12" type="method"/>
            <line num="75" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="81" count="12" type="method"/>
            <line num="83" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="89" count="10" type="method"/>
            <line num="91" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="testCollection(Object,Collection&lt;?&gt;) : boolean" num="100" count="5" type="method"/>
            <line num="101" count="5" type="stmt"/>
            <line complexity="5" visibility="private" signature="testArray(Object,Object) : boolean" num="110" count="8" type="method"/>
            <line num="111" count="8" type="stmt"/>
            <line falsecount="3" truecount="20" num="111" type="cond"/>
            <line num="112" count="20" type="stmt"/>
            <line num="113" count="20" type="stmt"/>
            <line falsecount="18" truecount="2" num="113" type="cond"/>
            <line num="114" count="2" type="stmt"/>
            <line num="116" count="18" type="stmt"/>
            <line falsecount="15" truecount="3" num="116" type="cond"/>
            <line num="117" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsElementOf&lt;Object, Object&gt;" num="129" count="8" type="method"/>
            <line num="130" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="instance(Object) : Predicate&lt;A&gt;" num="140" count="4" type="method"/>
            <line num="141" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="141" type="cond"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="143" type="cond"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="145" type="cond"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/collection/IsEmpty.java" name="IsEmpty.java">
            <metrics coveredelements="36" coveredconditionals="8" complexity="14" loc="144" coveredmethods="10" methods="10" elements="36" classes="1" ncloc="54" statements="18" conditionals="8" coveredstatements="18"/>
            <class name="IsEmpty">
               <metrics coveredelements="36" coveredconditionals="8" complexity="14" coveredmethods="10" methods="10" elements="36" statements="18" conditionals="8" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="IsEmpty()" num="47" count="25" type="method"/>
            <line complexity="5" visibility="public" signature="test(A) : boolean" num="55" count="29" type="method"/>
            <line num="56" count="29" type="stmt"/>
            <line num="57" count="28" type="stmt"/>
            <line falsecount="9" truecount="19" num="57" type="cond"/>
            <line num="58" count="19" type="stmt"/>
            <line num="60" count="9" type="stmt"/>
            <line falsecount="7" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="63" type="cond"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="66" type="cond"/>
            <line num="67" count="4" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="75" count="11" type="method"/>
            <line num="77" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="83" count="10" type="method"/>
            <line num="85" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="91" count="8" type="method"/>
            <line num="93" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="testCollection(Collection&lt;?&gt;) : boolean" num="101" count="19" type="method"/>
            <line num="102" count="19" type="stmt"/>
            <line complexity="1" visibility="private" signature="testMap(Map&lt;?, ?&gt;) : boolean" num="110" count="2" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="testString(String) : boolean" num="119" count="2" type="method"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="testArray(Object) : boolean" num="128" count="4" type="method"/>
            <line num="129" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsEmpty&lt;A&gt;" num="140" count="17" type="method"/>
            <line num="141" count="17" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/collection/Size.java" name="Size.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="12" loc="122" coveredmethods="9" methods="9" elements="30" classes="1" ncloc="46" statements="15" conditionals="6" coveredstatements="15"/>
            <class name="Size">
               <metrics coveredelements="30" coveredconditionals="6" complexity="12" coveredmethods="9" methods="9" elements="30" statements="15" conditionals="6" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="Size()" num="44" count="8" type="method"/>
            <line complexity="4" visibility="public" signature="evaluate(Object) : Integer" num="49" count="71" type="method"/>
            <line num="50" count="71" type="stmt"/>
            <line num="51" count="70" type="stmt"/>
            <line falsecount="58" truecount="12" num="51" type="cond"/>
            <line num="52" count="12" type="stmt"/>
            <line num="54" count="58" type="stmt"/>
            <line falsecount="3" truecount="55" num="54" type="cond"/>
            <line num="55" count="55" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="57" type="cond"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="66" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="74" count="10" type="method"/>
            <line num="76" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="82" count="8" type="method"/>
            <line num="84" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Size&lt;Object&gt;" num="91" count="24" type="method"/>
            <line num="92" count="24" type="stmt"/>
            <line complexity="1" visibility="private" signature="evaluate(Collection&lt;?&gt;) : Integer" num="100" count="12" type="method"/>
            <line num="101" count="12" type="stmt"/>
            <line complexity="1" visibility="private" signature="evaluate(String) : Integer" num="109" count="55" type="method"/>
            <line num="110" count="55" type="stmt"/>
            <line complexity="1" visibility="private" signature="evaluateArray(Object) : Integer" num="118" count="2" type="method"/>
            <line num="119" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/collection/TransformedIterator.java" name="TransformedIterator.java">
            <metrics coveredelements="41" coveredconditionals="10" complexity="14" loc="150" coveredmethods="9" methods="9" elements="41" classes="1" ncloc="54" statements="22" conditionals="10" coveredstatements="22"/>
            <class name="TransformedIterator">
               <metrics coveredelements="41" coveredconditionals="10" complexity="14" coveredmethods="9" methods="9" elements="41" statements="22" conditionals="10" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="TransformedIterator(Iterator&lt;? extends E&gt;,Function&lt;? super E, ? extends T&gt;)" num="52" count="25" type="method"/>
            <line num="53" count="25" type="stmt"/>
            <line num="54" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="64" count="37" type="method"/>
            <line num="65" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="72" count="64" type="method"/>
            <line num="73" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="80" count="23" type="method"/>
            <line num="81" count="23" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="87" count="9" type="method"/>
            <line num="89" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="89" type="cond"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="92" type="cond"/>
            <line num="93" count="3" type="stmt"/>
            <line num="95" count="5" type="stmt"/>
            <line num="96" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="102" count="3" type="method"/>
            <line num="104" count="3" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line num="107" count="3" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line num="109" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="115" count="3" type="method"/>
            <line num="117" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="transform(Iterator&lt;? extends E&gt;,Function&lt;? super E, ? extends T&gt;) : Iterator&lt;T&gt;" num="131" count="9" type="method"/>
            <line num="132" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="132" type="cond"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="maybeTransform(Iterator&lt;? extends E&gt;,Function&lt;? super E, ?&gt;) : Iterator&lt;?&gt;" num="146" count="3" type="method"/>
            <line num="147" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="147" type="cond"/>
            <line falsecount="1" truecount="1" num="147" type="cond"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.aggregator">
         <metrics coveredelements="149" complexity="54" loc="1054" methods="44" classes="6" statements="91" coveredconditionals="16" coveredmethods="44" elements="153" ncloc="273" files="6" conditionals="18" coveredstatements="89"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/AbstractListBackedAggregator.java" name="AbstractListBackedAggregator.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="10" loc="184" coveredmethods="10" methods="10" elements="22" classes="1" ncloc="47" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="AbstractListBackedAggregator">
               <metrics coveredelements="22" coveredconditionals="0" complexity="10" coveredmethods="10" methods="10" elements="22" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractListBackedAggregator(Function&lt;List&lt;T&gt;, T&gt;)" num="66" count="9" type="method"/>
            <line num="67" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractListBackedAggregator(Function&lt;List&lt;T&gt;, T&gt;,long)" num="81" count="9" type="method"/>
            <line num="82" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractListBackedAggregator(Function&lt;List&lt;T&gt;, T&gt;,long,boolean)" num="100" count="14" type="method"/>
            <line num="102" count="14" type="stmt"/>
            <line num="103" count="14" type="stmt"/>
            <line num="104" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="doAdd(T) : void" num="114" count="1486" type="method"/>
            <line num="116" count="1486" type="stmt"/>
            <line complexity="1" visibility="protected" signature="doEvaluate() : T" num="127" count="109" type="method"/>
            <line num="129" count="109" type="stmt"/>
            <line complexity="1" visibility="protected" signature="doReset() : void" num="135" count="93" type="method"/>
            <line num="137" count="93" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getSeries() : List&lt;T&gt;" num="154" count="135" type="method"/>
            <line num="155" count="135" type="stmt"/>
            <line complexity="1" visibility="protected" signature="retrieveDataSize() : int" num="165" count="31" type="method"/>
            <line num="167" count="31" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAggregationFunction() : Function&lt;List&lt;T&gt;, T&gt;" num="176" count="12" type="method"/>
            <line num="177" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="180" count="3" type="method"/>
            <line num="182" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/AbstractNoStoreAggregator.java" name="AbstractNoStoreAggregator.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="11" loc="194" coveredmethods="11" methods="11" elements="24" classes="1" ncloc="48" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="AbstractNoStoreAggregator">
               <metrics coveredelements="24" coveredconditionals="0" complexity="11" coveredmethods="11" methods="11" elements="24" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractNoStoreAggregator(BinaryFunction&lt;T, T, T&gt;)" num="62" count="8" type="method"/>
            <line num="63" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractNoStoreAggregator(BinaryFunction&lt;T, T, T&gt;,long)" num="79" count="8" type="method"/>
            <line num="80" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractNoStoreAggregator(BinaryFunction&lt;T, T, T&gt;,long,boolean)" num="102" count="8" type="method"/>
            <line num="104" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line complexity="1" visibility="protected" signature="doAdd(T) : void" num="116" count="62" type="method"/>
            <line num="118" count="62" type="stmt"/>
            <line complexity="1" visibility="protected" signature="doEvaluate() : T" num="127" count="31" type="method"/>
            <line num="129" count="31" type="stmt"/>
            <line complexity="1" visibility="protected" signature="doReset() : void" num="137" count="31" type="method"/>
            <line num="139" count="31" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAggregationFunction() : BinaryFunction&lt;T, T, T&gt;" num="156" count="12" type="method"/>
            <line num="157" count="12" type="stmt"/>
            <line complexity="1" visibility="package" signature="getResult() : T" num="165" count="156" type="method"/>
            <line num="166" count="156" type="stmt"/>
            <line complexity="1" visibility="package" signature="setResult(T) : void" num="175" count="8" type="method"/>
            <line num="176" count="8" type="stmt"/>
            <line complexity="1" visibility="protected" signature="retrieveDataSize() : int" num="185" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="190" count="3" type="method"/>
            <line num="192" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/AbstractTimedAggregator.java" name="AbstractTimedAggregator.java">
            <metrics coveredelements="93" coveredconditionals="16" complexity="28" loc="489" coveredmethods="18" methods="18" elements="97" classes="1" ncloc="144" statements="61" conditionals="18" coveredstatements="59"/>
            <class name="AbstractTimedAggregator">
               <metrics coveredelements="93" coveredconditionals="16" complexity="28" coveredmethods="18" methods="18" elements="97" statements="61" conditionals="18" coveredstatements="59"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractTimedAggregator()" num="153" count="4" type="method"/>
            <line num="154" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractTimedAggregator(long)" num="169" count="5" type="method"/>
            <line num="170" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="AbstractTimedAggregator(long,boolean)" num="185" count="29" type="method"/>
            <line num="186" count="29" type="stmt"/>
            <line falsecount="4" truecount="25" num="186" type="cond"/>
            <line num="188" count="25" type="stmt"/>
            <line num="189" count="25" type="stmt"/>
            <line num="190" count="25" type="stmt"/>
            <line num="191" count="25" type="stmt"/>
            <line num="194" count="4" type="stmt"/>
            <line num="195" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="196" type="cond"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="3" type="stmt"/>
            <line num="202" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="203" count="51" type="method"/>
            <line num="205" count="51" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="210" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterval() : long" num="218" count="4" type="method"/>
            <line num="219" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="233" count="1548" type="method"/>
            <line num="234" count="1548" type="stmt"/>
            <line num="235" count="1548" type="stmt"/>
            <line num="236" count="1548" type="stmt"/>
            <line num="238" count="1548" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : T" num="270" count="146" type="method"/>
            <line num="271" count="146" type="stmt"/>
            <line num="272" count="146" type="stmt"/>
            <line num="273" count="146" type="stmt"/>
            <line num="275" count="146" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="299" count="130" type="method"/>
            <line num="300" count="130" type="stmt"/>
            <line num="301" count="130" type="stmt"/>
            <line num="302" count="130" type="stmt"/>
            <line num="304" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDataSize() : int" num="327" count="31" type="method"/>
            <line num="328" count="31" type="stmt"/>
            <line num="329" count="31" type="stmt"/>
            <line num="330" count="31" type="stmt"/>
            <line num="332" count="31" type="stmt"/>
            <line complexity="2" visibility="package" signature="getTimerListeners() : List&lt;TimedAggregatorListener&lt;T&gt;&gt;" num="356" count="13" type="method"/>
            <line num="357" count="13" type="stmt"/>
            <line falsecount="12" truecount="1" num="357" type="cond"/>
            <line num="358" count="1" type="stmt"/>
            <line num="360" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="addTimerListener(TimedAggregatorListener&lt;T&gt;) : void" num="375" count="3" type="method"/>
            <line num="376" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="removeTimerListener(TimedAggregatorListener&lt;T&gt;) : boolean" num="398" count="7" type="method"/>
            <line num="399" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="399" type="cond"/>
            <line num="400" count="1" type="stmt"/>
            <line num="402" count="6" type="stmt"/>
            <line complexity="2" visibility="private" signature="timer() : void" num="418" count="51" type="method"/>
            <line num="419" count="51" type="stmt"/>
            <line falsecount="0" truecount="51" num="419" type="cond"/>
            <line num="421" count="51" type="stmt"/>
            <line num="423" count="51" type="stmt"/>
            <line num="424" count="51" type="stmt"/>
            <line num="425" count="3" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTimerEnabled() : boolean" num="440" count="4" type="method"/>
            <line num="441" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSharedTimer() : boolean" num="451" count="4" type="method"/>
            <line num="452" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="stop() : void" num="461" count="32" type="method"/>
            <line num="463" count="32" type="stmt"/>
            <line falsecount="29" truecount="3" num="463" type="cond"/>
            <line num="464" count="3" type="stmt"/>
            <line num="465" count="3" type="stmt"/>
            <line num="466" count="3" type="stmt"/>
            <line num="469" count="32" type="stmt"/>
            <line falsecount="30" truecount="2" num="469" type="cond"/>
            <line num="470" count="2" type="stmt"/>
            <line num="472" count="32" type="stmt"/>
            <line num="474" count="32" type="stmt"/>
            <line falsecount="26" truecount="6" num="474" type="cond"/>
            <line num="475" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="finalize() : void" num="479" count="28" type="method"/>
            <line num="482" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="485" count="3" type="method"/>
            <line num="487" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/Aggregator.java" name="Aggregator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Aggregator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/ArrayListBackedAggregator.java" name="ArrayListBackedAggregator.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="93" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="ArrayListBackedAggregator">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayListBackedAggregator(Function&lt;List&lt;T&gt;, T&gt;)" num="40" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayListBackedAggregator(Function&lt;List&lt;T&gt;, T&gt;,long)" num="55" count="5" type="method"/>
            <line num="56" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayListBackedAggregator(Function&lt;List&lt;T&gt;, T&gt;,long,boolean)" num="73" count="5" type="method"/>
            <line num="75" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createList() : List&lt;T&gt;" num="84" count="5" type="method"/>
            <line num="86" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="89" count="3" type="method"/>
            <line num="91" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/aggregator/TimedAggregatorListener.java" name="TimedAggregatorListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TimedAggregatorListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.apache.commons.functor.core">
         <metrics coveredelements="249" complexity="115" loc="1580" methods="103" classes="14" statements="122" coveredconditionals="24" coveredmethods="103" elements="249" ncloc="499" files="14" conditionals="24" coveredstatements="122"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/Constant.java" name="Constant.java">
            <metrics coveredelements="46" coveredconditionals="10" complexity="19" loc="191" coveredmethods="14" methods="14" elements="46" classes="1" ncloc="69" statements="22" conditionals="10" coveredstatements="22"/>
            <class name="Constant">
               <metrics coveredelements="46" coveredconditionals="10" complexity="19" coveredmethods="14" methods="14" elements="46" statements="22" conditionals="10" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="Constant(T)" num="64" count="301" type="method"/>
            <line num="65" count="301" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : T" num="73" count="1776" type="method"/>
            <line num="74" count="1776" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Object) : T" num="80" count="75" type="method"/>
            <line num="81" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Object,Object) : T" num="87" count="17" type="method"/>
            <line num="88" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="94" count="1673" type="method"/>
            <line num="95" count="1673" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object) : boolean" num="101" count="596" type="method"/>
            <line num="102" count="596" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object,Object) : boolean" num="108" count="531" type="method"/>
            <line num="109" count="531" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="115" count="1292" type="method"/>
            <line num="117" count="1292" type="stmt"/>
            <line falsecount="417" truecount="875" num="117" type="cond"/>
            <line num="118" count="875" type="stmt"/>
            <line num="120" count="417" type="stmt"/>
            <line falsecount="324" truecount="93" num="120" type="cond"/>
            <line num="121" count="93" type="stmt"/>
            <line num="123" count="324" type="stmt"/>
            <line num="124" count="324" type="stmt"/>
            <line falsecount="308" truecount="16" num="124" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="130" count="2211" type="method"/>
            <line num="132" count="2211" type="stmt"/>
            <line num="133" count="2211" type="stmt"/>
            <line falsecount="24" truecount="2187" num="133" type="cond"/>
            <line num="134" count="2187" type="stmt"/>
            <line num="136" count="2211" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="142" count="2079" type="method"/>
            <line num="144" count="2079" type="stmt"/>
            <line complexity="1" visibility="public" signature="truePredicate() : Constant&lt;Boolean&gt;" num="156" count="139" type="method"/>
            <line num="157" count="139" type="stmt"/>
            <line complexity="1" visibility="public" signature="falsePredicate() : Constant&lt;Boolean&gt;" num="166" count="51" type="method"/>
            <line num="167" count="51" type="stmt"/>
            <line complexity="2" visibility="public" signature="predicate(boolean) : Constant&lt;Boolean&gt;" num="177" count="5" type="method"/>
            <line num="178" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="178" type="cond"/>
            <line complexity="1" visibility="public" signature="of(T) : Constant&lt;T&gt;" num="187" count="286" type="method"/>
            <line num="188" count="286" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/Identity.java" name="Identity.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="8" loc="113" coveredmethods="8" methods="8" elements="15" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="Identity">
               <metrics coveredelements="15" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="15" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="Identity()" num="48" count="80" type="method"/>
            <line complexity="1" visibility="public" signature="evaluate(T) : T" num="57" count="172" type="method"/>
            <line num="58" count="172" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object) : boolean" num="64" count="11" type="method"/>
            <line num="65" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Boolean) : boolean" num="73" count="10" type="method"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="80" count="67" type="method"/>
            <line num="82" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="88" count="235" type="method"/>
            <line num="90" count="235" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="96" count="207" type="method"/>
            <line num="98" count="207" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Identity&lt;T&gt;" num="109" count="36" type="method"/>
            <line num="110" count="36" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/IsEqual.java" name="IsEqual.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="110" coveredmethods="7" methods="7" elements="13" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="IsEqual">
               <metrics coveredelements="13" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="13" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="IsEqual()" num="52" count="48" type="method"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="60" count="60" type="method"/>
            <line num="61" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="67" count="12" type="method"/>
            <line num="69" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="75" count="10" type="method"/>
            <line num="77" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="83" count="9" type="method"/>
            <line num="85" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsEqual&lt;L, R&gt;" num="96" count="39" type="method"/>
            <line num="97" count="39" type="stmt"/>
            <line complexity="1" visibility="public" signature="to(R) : Predicate&lt;L&gt;" num="107" count="2" type="method"/>
            <line num="108" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/IsInstance.java" name="IsInstance.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="6" loc="98" coveredmethods="6" methods="6" elements="12" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="IsInstance">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="test(T,Class&lt;?&gt;) : boolean" num="52" count="53" type="method"/>
            <line num="53" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="59" count="12" type="method"/>
            <line num="61" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="67" count="15" type="method"/>
            <line num="69" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="75" count="13" type="method"/>
            <line num="77" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsInstance&lt;T&gt;" num="85" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(Class&lt;?&gt;) : Predicate&lt;T&gt;" num="95" count="29" type="method"/>
            <line num="96" count="29" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/IsNotEqual.java" name="IsNotEqual.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="8" loc="108" coveredmethods="7" methods="7" elements="15" classes="1" ncloc="30" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="IsNotEqual">
               <metrics coveredelements="15" coveredconditionals="2" complexity="8" coveredmethods="7" methods="7" elements="15" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="IsNotEqual()" num="49" count="11" type="method"/>
            <line complexity="2" visibility="public" signature="test(L,R) : boolean" num="57" count="13" type="method"/>
            <line num="58" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="58" type="cond"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="64" count="12" type="method"/>
            <line num="66" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="72" count="10" type="method"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="80" count="8" type="method"/>
            <line num="82" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsNotEqual&lt;L, R&gt;" num="94" count="4" type="method"/>
            <line num="95" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="to(R) : Predicate&lt;L&gt;" num="105" count="1" type="method"/>
            <line num="106" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/IsNotNull.java" name="IsNotNull.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="8" loc="121" coveredmethods="8" methods="8" elements="15" classes="1" ncloc="36" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="IsNotNull">
               <metrics coveredelements="15" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="15" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="IsNotNull()" num="56" count="12" type="method"/>
            <line complexity="1" visibility="public" signature="test(Object) : boolean" num="64" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="71" count="12" type="method"/>
            <line num="73" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="79" count="10" type="method"/>
            <line num="81" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="87" count="8" type="method"/>
            <line num="89" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsNotNull&lt;T&gt;" num="99" count="4" type="method"/>
            <line num="100" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="left() : BinaryPredicate&lt;A, Object&gt;" num="108" count="1" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="right() : BinaryPredicate&lt;Object, A&gt;" num="117" count="1" type="method"/>
            <line num="118" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/IsNotSame.java" name="IsNotSame.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="101" coveredmethods="7" methods="7" elements="13" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="IsNotSame">
               <metrics coveredelements="13" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="13" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="IsNotSame()" num="43" count="13" type="method"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="51" count="15" type="method"/>
            <line num="52" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="58" count="14" type="method"/>
            <line num="60" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="66" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="10" type="method"/>
            <line num="76" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsNotSame&lt;L, R&gt;" num="87" count="6" type="method"/>
            <line num="88" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="as(R) : Predicate&lt;L&gt;" num="98" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/IsNull.java" name="IsNull.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="8" loc="121" coveredmethods="8" methods="8" elements="15" classes="1" ncloc="36" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="IsNull">
               <metrics coveredelements="15" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="15" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="IsNull()" num="56" count="22" type="method"/>
            <line complexity="1" visibility="public" signature="test(A) : boolean" num="64" count="55" type="method"/>
            <line num="65" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="71" count="12" type="method"/>
            <line num="73" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="79" count="10" type="method"/>
            <line num="81" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="87" count="8" type="method"/>
            <line num="89" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsNull&lt;T&gt;" num="99" count="8" type="method"/>
            <line num="100" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="left() : BinaryPredicate&lt;A, Object&gt;" num="108" count="5" type="method"/>
            <line num="109" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="right() : BinaryPredicate&lt;Object, A&gt;" num="117" count="3" type="method"/>
            <line num="118" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/IsSame.java" name="IsSame.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="101" coveredmethods="7" methods="7" elements="13" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="IsSame">
               <metrics coveredelements="13" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="13" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="IsSame()" num="43" count="13" type="method"/>
            <line complexity="1" visibility="public" signature="test(L,R) : boolean" num="51" count="15" type="method"/>
            <line num="52" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="58" count="22" type="method"/>
            <line num="60" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="66" count="28" type="method"/>
            <line num="68" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="22" type="method"/>
            <line num="76" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsSame&lt;L, R&gt;" num="87" count="6" type="method"/>
            <line num="88" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="as(R) : Predicate&lt;L&gt;" num="98" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/LeftIdentity.java" name="LeftIdentity.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="74" coveredmethods="3" methods="3" elements="5" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="LeftIdentity">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="LeftIdentity()" num="49" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="function() : BinaryFunction&lt;L, R, L&gt;" num="61" count="14" type="method"/>
            <line num="62" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicate() : BinaryPredicate&lt;Boolean, R&gt;" num="70" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/Limit.java" name="Limit.java">
            <metrics coveredelements="34" coveredconditionals="6" complexity="11" loc="130" coveredmethods="8" methods="8" elements="34" classes="1" ncloc="52" statements="20" conditionals="6" coveredstatements="20"/>
            <class name="Limit">
               <metrics coveredelements="34" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="34" statements="20" conditionals="6" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="Limit(int)" num="51" count="26" type="method"/>
            <line num="52" count="26" type="stmt"/>
            <line num="53" count="25" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : boolean" num="59" count="35" type="method"/>
            <line num="61" count="35" type="stmt"/>
            <line falsecount="14" truecount="21" num="61" type="cond"/>
            <line num="62" count="21" type="stmt"/>
            <line num="63" count="21" type="stmt"/>
            <line num="65" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object) : boolean" num="71" count="12" type="method"/>
            <line num="72" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object,Object) : boolean" num="78" count="4" type="method"/>
            <line num="79" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="85" count="17" type="method"/>
            <line num="87" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="87" type="cond"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="16" type="stmt"/>
            <line falsecount="13" truecount="3" num="90" type="cond"/>
            <line num="91" count="3" type="stmt"/>
            <line num="93" count="13" type="stmt"/>
            <line num="94" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="100" count="18" type="method"/>
            <line num="102" count="18" type="stmt"/>
            <line num="103" count="18" type="stmt"/>
            <line num="104" count="18" type="stmt"/>
            <line num="105" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="111" count="14" type="method"/>
            <line num="113" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int) : Limit" num="126" count="3" type="method"/>
            <line num="127" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/NoOp.java" name="NoOp.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="10" loc="121" coveredmethods="10" methods="10" elements="16" classes="1" ncloc="38" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="NoOp">
               <metrics coveredelements="16" coveredconditionals="0" complexity="10" coveredmethods="10" methods="10" elements="16" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NoOp()" num="44" count="104" type="method"/>
            <line complexity="1" visibility="public" signature="run() : void" num="52" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="run(Object) : void" num="58" count="157" type="method"/>
            <line complexity="1" visibility="public" signature="run(Object,Object) : void" num="64" count="6" type="method"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="70" count="524" type="method"/>
            <line num="72" count="524" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="78" count="749" type="method"/>
            <line num="80" count="749" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="86" count="691" type="method"/>
            <line num="88" count="691" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : NoOp" num="97" count="107" type="method"/>
            <line num="98" count="107" type="stmt"/>
            <line complexity="1" visibility="public" signature="unaryInstance() : Procedure&lt;A&gt;" num="106" count="4" type="method"/>
            <line num="108" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="binaryInstance() : BinaryProcedure&lt;L, R&gt;" num="117" count="4" type="method"/>
            <line num="119" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/Offset.java" name="Offset.java">
            <metrics coveredelements="32" coveredconditionals="6" complexity="10" loc="117" coveredmethods="7" methods="7" elements="32" classes="1" ncloc="50" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="Offset">
               <metrics coveredelements="32" coveredconditionals="6" complexity="10" coveredmethods="7" methods="7" elements="32" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="Offset(int)" num="51" count="30" type="method"/>
            <line num="52" count="30" type="stmt"/>
            <line num="53" count="29" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : boolean" num="59" count="67" type="method"/>
            <line num="61" count="67" type="stmt"/>
            <line falsecount="30" truecount="37" num="61" type="cond"/>
            <line num="62" count="37" type="stmt"/>
            <line num="63" count="37" type="stmt"/>
            <line num="65" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object) : boolean" num="71" count="44" type="method"/>
            <line num="72" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object,Object) : boolean" num="78" count="4" type="method"/>
            <line num="79" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="85" count="16" type="method"/>
            <line num="87" count="16" type="stmt"/>
            <line falsecount="15" truecount="1" num="87" type="cond"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="15" type="stmt"/>
            <line falsecount="12" truecount="3" num="90" type="cond"/>
            <line num="91" count="3" type="stmt"/>
            <line num="93" count="12" type="stmt"/>
            <line num="94" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="100" count="24" type="method"/>
            <line num="102" count="24" type="stmt"/>
            <line num="103" count="24" type="stmt"/>
            <line num="104" count="24" type="stmt"/>
            <line num="105" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="111" count="16" type="method"/>
            <line num="113" count="16" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/core/RightIdentity.java" name="RightIdentity.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="74" coveredmethods="3" methods="3" elements="5" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="RightIdentity">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="RightIdentity()" num="49" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="function() : BinaryFunction&lt;L, R, R&gt;" num="61" count="12" type="method"/>
            <line num="62" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicate() : BinaryPredicate&lt;L, Boolean&gt;" num="70" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.generator.util">
         <metrics coveredelements="25" complexity="13" loc="157" methods="9" classes="2" statements="9" coveredconditionals="8" coveredmethods="8" elements="26" ncloc="47" files="2" conditionals="8" coveredstatements="9"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/util/CollectionTransformer.java" name="CollectionTransformer.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="78" coveredmethods="4" methods="4" elements="9" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="CollectionTransformer">
               <metrics coveredelements="9" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="CollectionTransformer(C)" num="49" count="143" type="method"/>
            <line num="50" count="143" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends E&gt;) : C" num="61" count="143" type="method"/>
            <line num="62" count="143" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(E) : void" num="63" count="800751" type="method"/>
            <line num="64" count="800751" type="stmt"/>
            <line num="67" count="143" type="stmt"/>
            <line complexity="1" visibility="public" signature="toCollection() : CollectionTransformer&lt;E, Collection&lt;E&gt;&gt;" num="75" count="121" type="method"/>
            <line num="76" count="121" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/main/java/org/apache/commons/functor/generator/util/EachElement.java" name="EachElement.java">
            <metrics coveredelements="16" coveredconditionals="8" complexity="9" loc="79" coveredmethods="4" methods="5" elements="17" classes="1" ncloc="23" statements="4" conditionals="8" coveredstatements="4"/>
            <class name="EachElement">
               <metrics coveredelements="16" coveredconditionals="8" complexity="9" coveredmethods="4" methods="5" elements="17" statements="4" conditionals="8" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="EachElement()" num="35" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="from(Iterable&lt;? extends E&gt;) : Generator&lt;E&gt;" num="44" count="9" type="method"/>
            <line num="45" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="45" type="cond"/>
            <line complexity="2" visibility="public" signature="from(Map&lt;? extends K, ? extends V&gt;) : Generator&lt;Map.Entry&lt;K, V&gt;&gt;" num="55" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="57" type="cond"/>
            <line complexity="2" visibility="public" signature="from(E) : Generator&lt;E&gt;" num="66" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="67" type="cond"/>
            <line complexity="2" visibility="public" signature="from(Iterator&lt;? extends E&gt;) : Generator&lt;E&gt;" num="76" count="12" type="method"/>
            <line num="77" count="12" type="stmt"/>
            <line falsecount="11" truecount="1" num="77" type="cond"/>
         </file>
      </package>
      <package name="org.apache.commons.functor">
         <metrics coveredelements="0" complexity="0" loc="470" methods="0" classes="13" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="48" files="13" conditionals="0" coveredstatements="0"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/BinaryFunction.java" name="BinaryFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinaryFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/BinaryFunctor.java" name="BinaryFunctor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinaryFunctor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/BinaryPredicate.java" name="BinaryPredicate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinaryPredicate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/BinaryProcedure.java" name="BinaryProcedure.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinaryProcedure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/Function.java" name="Function.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Function">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/Functor.java" name="Functor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Functor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/NullaryFunction.java" name="NullaryFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NullaryFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/NullaryFunctor.java" name="NullaryFunctor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NullaryFunctor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/NullaryPredicate.java" name="NullaryPredicate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NullaryPredicate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/NullaryProcedure.java" name="NullaryProcedure.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NullaryProcedure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/Predicate.java" name="Predicate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Predicate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/Procedure.java" name="Procedure.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Procedure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/api/src/main/java/org/apache/commons/functor/UnaryFunctor.java" name="UnaryFunctor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="UnaryFunctor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
   </project>
   <testproject name="Apache Commons Functor 1.0-SNAPSHOT (Aggregated)" timestamp="1594984868832">
      <metrics coveredelements="7113" complexity="1760" loc="22855" methods="1427" classes="257" statements="6032" packages="21" coveredconditionals="408" coveredmethods="1254" elements="7961" ncloc="14389" files="200" conditionals="502" coveredstatements="5451"/>
      <package name="org.apache.commons.functor.adapter">
         <metrics coveredelements="702" complexity="195" loc="2750" methods="195" classes="39" statements="511" coveredconditionals="0" coveredmethods="191" elements="706" ncloc="1553" files="36" conditionals="0" coveredstatements="511"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBinaryFunctionBinaryPredicate.java" name="TestBinaryFunctionBinaryPredicate.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="77" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="43" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestBinaryFunctionBinaryPredicate">
               <metrics coveredelements="19" complexity="6" methods="6" testruns="7" statements="13" coveredconditionals="0" coveredmethods="6" elements="19" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenTrue() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenFalse() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBinaryFunctionBinaryProcedure.java" name="TestBinaryFunctionBinaryProcedure.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="6" loc="81" coveredmethods="6" methods="6" elements="23" classes="2" ncloc="48" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="TestBinaryFunctionBinaryProcedure">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="6" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="16" testpasses="6"/>
            </class>
            <class name="TestBinaryFunctionBinaryProcedure.EvaluateCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="evaluate(Object,Object) : Integer" num="51" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBinaryFunctionFunction.java" name="TestBinaryFunctionFunction.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="6" loc="74" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="40" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestBinaryFunctionFunction">
               <metrics coveredelements="18" complexity="6" methods="6" testruns="7" statements="12" coveredconditionals="0" coveredmethods="6" elements="18" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="12" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenTrue() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenFalse() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBinaryPredicateBinaryFunction.java" name="TestBinaryPredicateBinaryFunction.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="73" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="39" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestBinaryPredicateBinaryFunction">
               <metrics coveredelements="19" complexity="6" methods="6" testruns="7" statements="13" coveredconditionals="0" coveredmethods="6" elements="19" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenTrue() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenFalse() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBinaryPredicatePredicate.java" name="TestBinaryPredicatePredicate.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="6" loc="78" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="44" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestBinaryPredicatePredicate">
               <metrics coveredelements="18" complexity="6" methods="6" testruns="7" statements="12" coveredconditionals="0" coveredmethods="6" elements="18" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="12" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenTrue() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenFalse() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="60" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="69" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBinaryProcedureBinaryFunction.java" name="TestBinaryProcedureBinaryFunction.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="6" loc="75" coveredmethods="5" methods="6" elements="17" classes="1" ncloc="42" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestBinaryProcedureBinaryFunction">
               <metrics coveredelements="16" complexity="6" methods="6" testruns="6" statements="11" coveredconditionals="0" coveredmethods="5" elements="17" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="11" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object,Object) : void" num="60" count="0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBinaryProcedureProcedure.java" name="TestBinaryProcedureProcedure.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="5" loc="70" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="37" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestBinaryProcedureProcedure">
               <metrics coveredelements="16" complexity="5" methods="5" testruns="6" statements="11" coveredconditionals="0" coveredmethods="5" elements="16" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBoundNullaryFunction.java" name="TestBoundNullaryFunction.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="5" loc="74" coveredmethods="5" methods="5" elements="19" classes="1" ncloc="41" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="TestBoundNullaryFunction">
               <metrics coveredelements="19" complexity="5" methods="5" testruns="6" statements="14" coveredconditionals="0" coveredmethods="5" elements="19" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="14" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBoundNullaryPredicate.java" name="TestBoundNullaryPredicate.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="5" loc="82" coveredmethods="5" methods="5" elements="22" classes="1" ncloc="49" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="TestBoundNullaryPredicate">
               <metrics coveredelements="22" complexity="5" methods="5" testruns="6" statements="17" coveredconditionals="0" coveredmethods="5" elements="22" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="17" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestBoundNullaryProcedure.java" name="TestBoundNullaryProcedure.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="75" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="42" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestBoundNullaryProcedure">
               <metrics coveredelements="20" complexity="5" methods="5" testruns="6" statements="15" coveredconditionals="0" coveredmethods="5" elements="20" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="15" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="46" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestFullyBoundNullaryFunction.java" name="TestFullyBoundNullaryFunction.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="5" loc="82" coveredmethods="5" methods="5" elements="24" classes="1" ncloc="49" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="TestFullyBoundNullaryFunction">
               <metrics coveredelements="24" complexity="5" methods="5" testruns="6" statements="19" coveredconditionals="0" coveredmethods="5" elements="24" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="19" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestFullyBoundNullaryPredicate.java" name="TestFullyBoundNullaryPredicate.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="5" loc="78" coveredmethods="5" methods="5" elements="21" classes="1" ncloc="45" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestFullyBoundNullaryPredicate">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="6" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestFullyBoundNullaryProcedure.java" name="TestFullyBoundNullaryProcedure.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="5" loc="81" coveredmethods="5" methods="5" elements="24" classes="1" ncloc="48" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="TestFullyBoundNullaryProcedure">
               <metrics coveredelements="24" complexity="5" methods="5" testruns="6" statements="19" coveredconditionals="0" coveredmethods="5" elements="24" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="19" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestFunctionPredicate.java" name="TestFunctionPredicate.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="76" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="42" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestFunctionPredicate">
               <metrics coveredelements="19" complexity="6" methods="6" testruns="7" statements="13" coveredconditionals="0" coveredmethods="6" elements="19" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenTrue() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenFalse() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestFunctionProcedure.java" name="TestFunctionProcedure.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="6" loc="81" coveredmethods="6" methods="6" elements="23" classes="2" ncloc="48" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="TestFunctionProcedure">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="6" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="6"/>
            </class>
            <class name="TestFunctionProcedure.EvaluateCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="evaluate(Object) : Integer" num="51" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestIgnoreLeftFunction.java" name="TestIgnoreLeftFunction.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="75" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="42" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestIgnoreLeftFunction">
               <metrics coveredelements="20" complexity="5" methods="5" testruns="6" statements="15" coveredconditionals="0" coveredmethods="5" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="15" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestIgnoreLeftPredicate.java" name="TestIgnoreLeftPredicate.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="78" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="45" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestIgnoreLeftPredicate">
               <metrics coveredelements="20" complexity="5" methods="5" testruns="6" statements="15" coveredconditionals="0" coveredmethods="5" elements="20" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="15" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestIgnoreLeftProcedure.java" name="TestIgnoreLeftProcedure.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="5" loc="73" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="40" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestIgnoreLeftProcedure">
               <metrics coveredelements="16" complexity="5" methods="5" testruns="6" statements="11" coveredconditionals="0" coveredmethods="5" elements="16" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestIgnoreRightFunction.java" name="TestIgnoreRightFunction.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="5" loc="76" coveredmethods="5" methods="5" elements="21" classes="1" ncloc="43" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestIgnoreRightFunction">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="6" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="16" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestIgnoreRightPredicate.java" name="TestIgnoreRightPredicate.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="5" loc="76" coveredmethods="5" methods="5" elements="18" classes="1" ncloc="43" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestIgnoreRightPredicate">
               <metrics coveredelements="18" complexity="5" methods="5" testruns="6" statements="13" coveredconditionals="0" coveredmethods="5" elements="18" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestIgnoreRightProcedure.java" name="TestIgnoreRightProcedure.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="6" loc="77" coveredmethods="5" methods="6" elements="17" classes="1" ncloc="43" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestIgnoreRightProcedure">
               <metrics coveredelements="16" complexity="6" methods="6" testruns="6" statements="11" coveredconditionals="0" coveredmethods="5" elements="17" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object) : void" num="61" count="0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestLeftBoundFunction.java" name="TestLeftBoundFunction.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="76" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="43" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestLeftBoundFunction">
               <metrics coveredelements="20" complexity="5" methods="5" testruns="6" statements="15" coveredconditionals="0" coveredmethods="5" elements="20" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="15" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestLeftBoundPredicate.java" name="TestLeftBoundPredicate.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="5" loc="78" coveredmethods="5" methods="5" elements="21" classes="1" ncloc="45" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestLeftBoundPredicate">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="6" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="55" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestLeftBoundProcedure.java" name="TestLeftBoundProcedure.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="5" loc="78" coveredmethods="5" methods="5" elements="21" classes="1" ncloc="45" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestLeftBoundProcedure">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="6" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestNullaryFunctionFunction.java" name="TestNullaryFunctionFunction.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="5" loc="72" coveredmethods="5" methods="5" elements="18" classes="1" ncloc="39" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestNullaryFunctionFunction">
               <metrics coveredelements="18" complexity="5" methods="5" testruns="6" statements="13" coveredconditionals="0" coveredmethods="5" elements="18" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestNullaryFunctionNullaryPredicate.java" name="TestNullaryFunctionNullaryPredicate.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="76" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="42" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestNullaryFunctionNullaryPredicate">
               <metrics coveredelements="19" complexity="6" methods="6" testruns="7" statements="13" coveredconditionals="0" coveredmethods="6" elements="19" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenTrue() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenFalse() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestNullaryFunctionNullaryProcedure.java" name="TestNullaryFunctionNullaryProcedure.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="6" loc="81" coveredmethods="6" methods="6" elements="23" classes="2" ncloc="48" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="TestNullaryFunctionNullaryProcedure">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="6" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="6"/>
            </class>
            <class name="TestNullaryFunctionNullaryProcedure.EvaluateCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="evaluate() : Integer" num="51" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestNullaryPredicateNullaryFunction.java" name="TestNullaryPredicateNullaryFunction.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="76" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="42" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestNullaryPredicateNullaryFunction">
               <metrics coveredelements="19" complexity="6" methods="6" testruns="7" statements="13" coveredconditionals="0" coveredmethods="6" elements="19" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenTrue() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenFalse() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestNullaryPredicatePredicate.java" name="TestNullaryPredicatePredicate.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="5" loc="71" coveredmethods="5" methods="5" elements="17" classes="1" ncloc="38" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestNullaryPredicatePredicate">
               <metrics coveredelements="17" complexity="5" methods="5" testruns="6" statements="12" coveredconditionals="0" coveredmethods="5" elements="17" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="12" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestNullaryProcedureNullaryFunction.java" name="TestNullaryProcedureNullaryFunction.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="6" loc="73" coveredmethods="5" methods="6" elements="18" classes="1" ncloc="40" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestNullaryProcedureNullaryFunction">
               <metrics coveredelements="17" complexity="6" methods="6" testruns="6" statements="12" coveredconditionals="0" coveredmethods="5" elements="18" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="12" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="59" count="0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestPredicateFunction.java" name="TestPredicateFunction.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="76" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="42" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestPredicateFunction">
               <metrics coveredelements="19" complexity="6" methods="6" testruns="7" statements="13" coveredconditionals="0" coveredmethods="6" elements="19" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="13" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenTrue() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestWhenFalse() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="57" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestProcedureFunction.java" name="TestProcedureFunction.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="6" loc="76" coveredmethods="5" methods="6" elements="18" classes="1" ncloc="43" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestProcedureFunction">
               <metrics coveredelements="17" complexity="6" methods="6" testruns="6" statements="12" coveredconditionals="0" coveredmethods="5" elements="18" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="12" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object) : void" num="60" count="0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestProcedureProcedure.java" name="TestProcedureProcedure.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="5" loc="72" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="39" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestProcedureProcedure">
               <metrics coveredelements="16" complexity="5" methods="5" testruns="6" statements="11" coveredconditionals="0" coveredmethods="5" elements="16" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestRightBoundFunction.java" name="TestRightBoundFunction.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="76" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="43" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestRightBoundFunction">
               <metrics coveredelements="20" complexity="5" methods="5" testruns="6" statements="15" coveredconditionals="0" coveredmethods="5" elements="20" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="15" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestRightBoundPredicate.java" name="TestRightBoundPredicate.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="5" loc="78" coveredmethods="5" methods="5" elements="21" classes="1" ncloc="45" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestRightBoundPredicate">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="6" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="16" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="47" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="55" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/adapter/TestRightBoundProcedure.java" name="TestRightBoundProcedure.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="5" loc="79" coveredmethods="5" methods="5" elements="22" classes="1" ncloc="46" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="TestRightBoundProcedure">
               <metrics coveredelements="22" complexity="5" methods="5" testruns="6" statements="17" coveredconditionals="0" coveredmethods="5" elements="22" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="17" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="55" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdapt() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.aggregator.functions">
         <metrics coveredelements="674" complexity="76" loc="1431" methods="55" classes="15" statements="585" coveredconditionals="34" coveredmethods="55" elements="674" ncloc="936" files="15" conditionals="34" coveredstatements="585"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/DoubleMaxAggregatorBinaryFunctionTest.java" name="DoubleMaxAggregatorBinaryFunctionTest.java">
            <metrics coveredelements="26" coveredconditionals="2" complexity="4" loc="69" coveredmethods="3" methods="3" elements="26" classes="1" ncloc="41" statements="21" conditionals="2" coveredstatements="21"/>
            <class name="DoubleMaxAggregatorBinaryFunctionTest">
               <metrics coveredelements="26" complexity="4" methods="3" testruns="4" statements="21" coveredconditionals="2" coveredmethods="3" elements="26" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="21" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulls() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMax() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="60" type="cond"/>
            <line num="61" count="31" type="stmt"/>
            <line num="62" count="31" type="stmt"/>
            <line num="63" count="31" type="stmt"/>
            <line num="64" count="31" type="stmt"/>
            <line num="65" count="31" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/DoubleMaxAggregatorFunctionTest.java" name="DoubleMaxAggregatorFunctionTest.java">
            <metrics coveredelements="37" coveredconditionals="4" complexity="5" loc="78" coveredmethods="3" methods="3" elements="37" classes="1" ncloc="52" statements="30" conditionals="4" coveredstatements="30"/>
            <class name="DoubleMaxAggregatorFunctionTest">
               <metrics coveredelements="37" complexity="5" methods="3" testruns="4" statements="30" coveredconditionals="4" coveredmethods="3" elements="37" testfailures="0" testduration="0.002" conditionals="4" coveredstatements="30" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSum() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="68" type="cond"/>
            <line num="69" count="31" type="stmt"/>
            <line num="70" count="31" type="stmt"/>
            <line num="71" count="31" type="stmt"/>
            <line falsecount="24" truecount="7" num="71" type="cond"/>
            <line num="72" count="7" type="stmt"/>
            <line num="74" count="31" type="stmt"/>
            <line num="75" count="31" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/DoubleMeanValueAggregatorFunctionTest.java" name="DoubleMeanValueAggregatorFunctionTest.java">
            <metrics coveredelements="37" coveredconditionals="4" complexity="5" loc="77" coveredmethods="3" methods="3" elements="37" classes="1" ncloc="51" statements="30" conditionals="4" coveredstatements="30"/>
            <class name="DoubleMeanValueAggregatorFunctionTest">
               <metrics coveredelements="37" complexity="5" methods="3" testruns="4" statements="30" coveredconditionals="4" coveredmethods="3" elements="37" testfailures="0" testduration="0.002" conditionals="4" coveredstatements="30" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="33" count="5" type="method"/>
            <line num="35" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMean() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="30" num="65" type="cond"/>
            <line num="66" count="30" type="stmt"/>
            <line num="67" count="30" type="stmt"/>
            <line num="68" count="30" type="stmt"/>
            <line falsecount="30" truecount="495" num="68" type="cond"/>
            <line num="69" count="495" type="stmt"/>
            <line num="70" count="495" type="stmt"/>
            <line num="72" count="30" type="stmt"/>
            <line num="73" count="30" type="stmt"/>
            <line num="74" count="30" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/DoubleMedianValueAggregatorFunctionTest.java" name="DoubleMedianValueAggregatorFunctionTest.java">
            <metrics coveredelements="71" coveredconditionals="2" complexity="7" loc="141" coveredmethods="6" methods="6" elements="71" classes="1" ncloc="94" statements="63" conditionals="2" coveredstatements="63"/>
            <class name="DoubleMedianValueAggregatorFunctionTest">
               <metrics coveredelements="71" complexity="7" methods="6" testruns="5" statements="63" coveredconditionals="2" coveredmethods="6" elements="71" testfailures="0" testduration="0.0" conditionals="2" coveredstatements="63" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMedianCopy() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="checkMedianCopy(DoubleMedianValueAggregatorFunction) : void" num="73" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMedianNotCopy() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="assertListEqualsArray(List&lt;Double&gt;,double[]) : void" num="133" count="15" type="method"/>
            <line num="134" count="15" type="stmt"/>
            <line num="135" count="15" type="stmt"/>
            <line num="136" count="15" type="stmt"/>
            <line num="137" count="15" type="stmt"/>
            <line falsecount="15" truecount="45" num="137" type="cond"/>
            <line num="138" count="45" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/DoublePercentileAggregatorFunctionTest.java" name="DoublePercentileAggregatorFunctionTest.java">
            <metrics coveredelements="99" coveredconditionals="0" complexity="7" loc="186" coveredmethods="5" methods="5" elements="99" classes="1" ncloc="127" statements="94" conditionals="0" coveredstatements="94"/>
            <class name="DoublePercentileAggregatorFunctionTest">
               <metrics coveredelements="99" complexity="7" methods="5" testruns="6" statements="94" coveredconditionals="0" coveredmethods="5" elements="99" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="94" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="40" count="6" type="method"/>
            <line num="42" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCreate() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComputeRank() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateNullEmpty() : void" num="135" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateNoCopy() : void" num="146" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/DoubleSumAggregatorBinaryFunctionTest.java" name="DoubleSumAggregatorBinaryFunctionTest.java">
            <metrics coveredelements="23" coveredconditionals="2" complexity="4" loc="64" coveredmethods="3" methods="3" elements="23" classes="1" ncloc="38" statements="18" conditionals="2" coveredstatements="18"/>
            <class name="DoubleSumAggregatorBinaryFunctionTest">
               <metrics coveredelements="23" complexity="4" methods="3" testruns="4" statements="18" coveredconditionals="2" coveredmethods="3" elements="23" testfailures="0" testduration="0.002" conditionals="2" coveredstatements="18" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulls() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSum() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="57" type="cond"/>
            <line num="58" count="31" type="stmt"/>
            <line num="59" count="31" type="stmt"/>
            <line num="60" count="31" type="stmt"/>
            <line num="61" count="31" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/DoubleSumAggregatorFunctionTest.java" name="DoubleSumAggregatorFunctionTest.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="4" loc="76" coveredmethods="3" methods="3" elements="34" classes="1" ncloc="50" statements="29" conditionals="2" coveredstatements="29"/>
            <class name="DoubleSumAggregatorFunctionTest">
               <metrics coveredelements="34" complexity="4" methods="3" testruns="4" statements="29" coveredconditionals="2" coveredmethods="3" elements="34" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="29" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSum() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="68" type="cond"/>
            <line num="69" count="31" type="stmt"/>
            <line num="70" count="31" type="stmt"/>
            <line num="71" count="31" type="stmt"/>
            <line num="72" count="31" type="stmt"/>
            <line num="73" count="31" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/IntCountAggregatorBinaryFunctionTest.java" name="IntCountAggregatorBinaryFunctionTest.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="4" loc="58" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="34" statements="15" conditionals="2" coveredstatements="15"/>
            <class name="IntCountAggregatorBinaryFunctionTest">
               <metrics coveredelements="20" complexity="4" methods="3" testruns="4" statements="15" coveredconditionals="2" coveredmethods="3" elements="20" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="15" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="31" count="5" type="method"/>
            <line num="33" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNull() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCount() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="53" type="cond"/>
            <line num="54" count="31" type="stmt"/>
            <line num="55" count="31" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/IntMaxAggregatorBinaryFunctionTest.java" name="IntMaxAggregatorBinaryFunctionTest.java">
            <metrics coveredelements="26" coveredconditionals="2" complexity="4" loc="65" coveredmethods="3" methods="3" elements="26" classes="1" ncloc="40" statements="21" conditionals="2" coveredstatements="21"/>
            <class name="IntMaxAggregatorBinaryFunctionTest">
               <metrics coveredelements="26" complexity="4" methods="3" testruns="4" statements="21" coveredconditionals="2" coveredmethods="3" elements="26" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="21" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="32" count="5" type="method"/>
            <line num="34" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulls() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMax() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="57" type="cond"/>
            <line num="58" count="31" type="stmt"/>
            <line num="59" count="31" type="stmt"/>
            <line num="60" count="31" type="stmt"/>
            <line num="61" count="31" type="stmt"/>
            <line num="62" count="31" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/IntMaxAggregatorFunctionTest.java" name="IntMaxAggregatorFunctionTest.java">
            <metrics coveredelements="37" coveredconditionals="4" complexity="5" loc="78" coveredmethods="3" methods="3" elements="37" classes="1" ncloc="52" statements="30" conditionals="4" coveredstatements="30"/>
            <class name="IntMaxAggregatorFunctionTest">
               <metrics coveredelements="37" complexity="5" methods="3" testruns="4" statements="30" coveredconditionals="4" coveredmethods="3" elements="37" testfailures="0" testduration="0.002" conditionals="4" coveredstatements="30" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSum() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="68" type="cond"/>
            <line num="69" count="31" type="stmt"/>
            <line num="70" count="31" type="stmt"/>
            <line num="71" count="31" type="stmt"/>
            <line falsecount="25" truecount="6" num="71" type="cond"/>
            <line num="72" count="6" type="stmt"/>
            <line num="74" count="31" type="stmt"/>
            <line num="75" count="31" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/IntMeanValueAggregatorFunctionTest.java" name="IntMeanValueAggregatorFunctionTest.java">
            <metrics coveredelements="37" coveredconditionals="4" complexity="5" loc="77" coveredmethods="3" methods="3" elements="37" classes="1" ncloc="51" statements="30" conditionals="4" coveredstatements="30"/>
            <class name="IntMeanValueAggregatorFunctionTest">
               <metrics coveredelements="37" complexity="5" methods="3" testruns="4" statements="30" coveredconditionals="4" coveredmethods="3" elements="37" testfailures="0" testduration="0.004" conditionals="4" coveredstatements="30" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="33" count="5" type="method"/>
            <line num="35" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMean() : void" num="49" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="30" num="65" type="cond"/>
            <line num="66" count="30" type="stmt"/>
            <line num="67" count="30" type="stmt"/>
            <line num="68" count="30" type="stmt"/>
            <line falsecount="30" truecount="495" num="68" type="cond"/>
            <line num="69" count="495" type="stmt"/>
            <line num="70" count="495" type="stmt"/>
            <line num="72" count="30" type="stmt"/>
            <line num="73" count="30" type="stmt"/>
            <line num="74" count="30" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/IntMedianValueAggregatorFunctionTest.java" name="IntMedianValueAggregatorFunctionTest.java">
            <metrics coveredelements="71" coveredconditionals="2" complexity="7" loc="137" coveredmethods="6" methods="6" elements="71" classes="1" ncloc="92" statements="63" conditionals="2" coveredstatements="63"/>
            <class name="IntMedianValueAggregatorFunctionTest">
               <metrics coveredelements="71" complexity="7" methods="6" testruns="5" statements="63" coveredconditionals="2" coveredmethods="6" elements="71" testfailures="0" testduration="0.003" conditionals="2" coveredstatements="63" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="5" type="method"/>
            <line num="38" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMedianCopy() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="checkMedianCopy(IntegerMedianValueAggregatorFunction) : void" num="70" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMedianNotCopy() : void" num="98" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="assertListEqualsArray(List&lt;Integer&gt;,int[]) : void" num="130" count="15" type="method"/>
            <line num="131" count="15" type="stmt"/>
            <line num="132" count="15" type="stmt"/>
            <line num="133" count="15" type="stmt"/>
            <line num="134" count="15" type="stmt"/>
            <line falsecount="15" truecount="45" num="134" type="cond"/>
            <line num="135" count="45" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/IntPercentileAggregatorFunctionTest.java" name="IntPercentileAggregatorFunctionTest.java">
            <metrics coveredelements="99" coveredconditionals="0" complexity="7" loc="187" coveredmethods="5" methods="5" elements="99" classes="1" ncloc="127" statements="94" conditionals="0" coveredstatements="94"/>
            <class name="IntPercentileAggregatorFunctionTest">
               <metrics coveredelements="99" complexity="7" methods="5" testruns="6" statements="94" coveredconditionals="0" coveredmethods="5" elements="99" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="94" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="41" count="6" type="method"/>
            <line num="43" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCreate() : void" num="46" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComputeRank() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateNullEmpty() : void" num="136" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateNoCopy() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/IntSumAggregatorBinaryFunctionTest.java" name="IntSumAggregatorBinaryFunctionTest.java">
            <metrics coveredelements="23" coveredconditionals="2" complexity="4" loc="62" coveredmethods="3" methods="3" elements="23" classes="1" ncloc="37" statements="18" conditionals="2" coveredstatements="18"/>
            <class name="IntSumAggregatorBinaryFunctionTest">
               <metrics coveredelements="23" complexity="4" methods="3" testruns="4" statements="18" coveredconditionals="2" coveredmethods="3" elements="23" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="18" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="32" count="5" type="method"/>
            <line num="34" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulls() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSum() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="55" type="cond"/>
            <line num="56" count="31" type="stmt"/>
            <line num="57" count="31" type="stmt"/>
            <line num="58" count="31" type="stmt"/>
            <line num="59" count="31" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/functions/IntSumAggregatorFunctionTest.java" name="IntSumAggregatorFunctionTest.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="4" loc="76" coveredmethods="3" methods="3" elements="34" classes="1" ncloc="50" statements="29" conditionals="2" coveredstatements="29"/>
            <class name="IntSumAggregatorFunctionTest">
               <metrics coveredelements="34" complexity="4" methods="3" testruns="4" statements="29" coveredconditionals="2" coveredmethods="3" elements="34" testfailures="0" testduration="0.0" conditionals="2" coveredstatements="29" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSum() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="68" type="cond"/>
            <line num="69" count="31" type="stmt"/>
            <line num="70" count="31" type="stmt"/>
            <line num="71" count="31" type="stmt"/>
            <line num="72" count="31" type="stmt"/>
            <line num="73" count="31" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.core.algorithm">
         <metrics coveredelements="269" complexity="110" loc="1113" methods="73" classes="24" statements="196" coveredconditionals="37" coveredmethods="65" elements="327" ncloc="637" files="13" conditionals="58" coveredstatements="167"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestDoUntil.java" name="TestDoUntil.java">
            <metrics coveredelements="24" coveredconditionals="4" complexity="9" loc="79" coveredmethods="5" methods="5" elements="28" classes="2" ncloc="45" statements="17" conditionals="6" coveredstatements="15"/>
            <class name="TestDoUntil">
               <metrics coveredelements="10" complexity="3" methods="2" testruns="3" statements="6" coveredconditionals="2" coveredmethods="2" elements="10" testfailures="0" testduration="0.002" conditionals="2" coveredstatements="6" testpasses="3"/>
            </class>
            <class name="TestDoUntil.Counter">
               <metrics coveredelements="14" coveredconditionals="2" complexity="6" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDoUntil() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="42" type="cond"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="53" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="70" count="8" type="method"/>
            <line num="72" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestDoWhile.java" name="TestDoWhile.java">
            <metrics coveredelements="24" coveredconditionals="4" complexity="9" loc="79" coveredmethods="5" methods="5" elements="28" classes="2" ncloc="45" statements="17" conditionals="6" coveredstatements="15"/>
            <class name="TestDoWhile">
               <metrics coveredelements="10" complexity="3" methods="2" testruns="3" statements="6" coveredconditionals="2" coveredmethods="2" elements="10" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="6" testpasses="3"/>
            </class>
            <class name="TestDoWhile.Counter">
               <metrics coveredelements="14" coveredconditionals="2" complexity="6" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDoWhile() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="42" type="cond"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="53" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="70" count="8" type="method"/>
            <line num="72" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestFindWithinGenerator.java" name="TestFindWithinGenerator.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="9" loc="119" coveredmethods="7" methods="7" elements="40" classes="1" ncloc="81" statements="29" conditionals="4" coveredstatements="27"/>
            <class name="TestFindWithinGenerator">
               <metrics coveredelements="36" complexity="9" methods="7" testruns="8" statements="29" coveredconditionals="2" coveredmethods="7" elements="40" testfailures="0" testduration="0.003" conditionals="4" coveredstatements="27" testpasses="8"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testObjectEqualsWithIfNone() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="52" type="cond"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testObjectEqualsWithNullDefault() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="68" type="cond"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="76" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDetect() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDetectIfNone() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstance() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestFoldLeft.java" name="TestFoldLeft.java">
            <metrics coveredelements="15" coveredconditionals="1" complexity="7" loc="80" coveredmethods="5" methods="6" elements="19" classes="2" ncloc="44" statements="11" conditionals="2" coveredstatements="9"/>
            <class name="TestFoldLeft">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="3" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="3"/>
            </class>
            <class name="TestFoldLeft.Sum">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFoldLeft() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="43" count="5" type="method"/>
            <line num="44" count="5" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="66" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="74" count="8" type="method"/>
            <line num="76" count="8" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestFoldRight.java" name="TestFoldRight.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="9" loc="81" coveredmethods="5" methods="6" elements="25" classes="2" ncloc="45" statements="13" conditionals="6" coveredstatements="10"/>
            <class name="TestFoldRight">
               <metrics coveredelements="11" complexity="4" methods="3" testruns="3" statements="7" coveredconditionals="1" coveredmethods="3" elements="12" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="7" testpasses="3"/>
            </class>
            <class name="TestFoldRight.StringConcatenator">
               <metrics coveredelements="6" coveredconditionals="1" complexity="5" coveredmethods="2" methods="3" elements="13" statements="6" conditionals="4" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFoldRight() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Object,Object) : Object" num="43" count="19" type="method"/>
            <line num="44" count="19" type="stmt"/>
            <line falsecount="19" truecount="0" num="44" type="cond"/>
            <line num="45" count="19" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Object,Object) : Object" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="67" count="2" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="75" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestGeneratorContains.java" name="TestGeneratorContains.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="58" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="28" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="TestGeneratorContains">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="3" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestInPlaceTransform.java" name="TestInPlaceTransform.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="8" loc="92" coveredmethods="5" methods="7" elements="22" classes="2" ncloc="50" statements="13" conditionals="2" coveredstatements="11"/>
            <class name="TestInPlaceTransform">
               <metrics coveredelements="18" complexity="7" methods="6" testruns="3" statements="12" coveredconditionals="2" coveredmethods="5" elements="20" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="11" testpasses="3"/>
            </class>
            <class name="TestInPlaceTransform.Doubler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="setUp() : void" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line falsecount="3" truecount="30" num="44" type="cond"/>
            <line num="45" count="30" type="stmt"/>
            <line num="46" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="50" count="3" type="method"/>
            <line num="52" count="3" type="stmt"/>
            <line num="53" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="59" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransform() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="67" count="10" type="method"/>
            <line num="68" count="10" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstance() : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestIndexOfInGenerator.java" name="TestIndexOfInGenerator.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="22" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="TestIndexOfInGenerator">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="3" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexOfInGenerator() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestRecursiveEvaluation.java" name="TestRecursiveEvaluation.java">
            <metrics coveredelements="36" coveredconditionals="6" complexity="21" loc="132" coveredmethods="9" methods="11" elements="54" classes="3" ncloc="86" statements="31" conditionals="12" coveredstatements="21"/>
            <class name="TestRecursiveEvaluation">
               <metrics coveredelements="11" complexity="5" methods="3" testruns="4" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="8" testpasses="4"/>
            </class>
            <class name="TestRecursiveEvaluation.RecFunc">
               <metrics coveredelements="21" coveredconditionals="6" complexity="9" coveredmethods="4" methods="4" elements="25" statements="13" conditionals="8" coveredstatements="11"/>
            </class>
            <class name="TestRecursiveEvaluation.InnerNullaryFunction">
               <metrics coveredelements="4" coveredconditionals="0" complexity="7" coveredmethods="2" methods="4" elements="16" statements="8" conditionals="4" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="31" count="3" type="method"/>
            <line num="33" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRecurse() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testConstructors() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RecFunc(int,boolean)" num="68" count="16" type="method"/>
            <line num="69" count="16" type="stmt"/>
            <line num="70" count="16" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : Object" num="73" count="12" type="method"/>
            <line num="74" count="12" type="stmt"/>
            <line falsecount="2" truecount="10" num="74" type="cond"/>
            <line num="75" count="10" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="77" type="cond"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="85" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="96" count="8" type="method"/>
            <line num="98" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="InnerNullaryFunction(int)" num="107" count="1" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : Object" num="111" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestRemoveMatching.java" name="TestRemoveMatching.java">
            <metrics coveredelements="21" coveredconditionals="4" complexity="8" loc="91" coveredmethods="5" methods="6" elements="23" classes="2" ncloc="50" statements="13" conditionals="4" coveredstatements="12"/>
            <class name="TestRemoveMatching">
               <metrics coveredelements="21" complexity="7" methods="5" testruns="3" statements="12" coveredconditionals="4" coveredmethods="5" elements="21" testfailures="0" testduration="0.0" conditionals="4" coveredstatements="12" testpasses="3"/>
            </class>
            <class name="TestRemoveMatching.Doubler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="setUp() : void" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line falsecount="3" truecount="30" num="44" type="cond"/>
            <line num="45" count="30" type="stmt"/>
            <line num="46" count="30" type="stmt"/>
            <line falsecount="15" truecount="15" num="46" type="cond"/>
            <line num="47" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="52" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="61" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="77" count="10" type="method"/>
            <line num="78" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestRetainMatching.java" name="TestRetainMatching.java">
            <metrics coveredelements="21" coveredconditionals="4" complexity="8" loc="91" coveredmethods="5" methods="6" elements="23" classes="2" ncloc="50" statements="13" conditionals="4" coveredstatements="12"/>
            <class name="TestRetainMatching">
               <metrics coveredelements="21" complexity="7" methods="5" testruns="3" statements="12" coveredconditionals="4" coveredmethods="5" elements="21" testfailures="0" testduration="0.001" conditionals="4" coveredstatements="12" testpasses="3"/>
            </class>
            <class name="TestRetainMatching.Doubler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="setUp() : void" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line falsecount="3" truecount="30" num="44" type="cond"/>
            <line num="45" count="30" type="stmt"/>
            <line num="46" count="30" type="stmt"/>
            <line falsecount="15" truecount="15" num="46" type="cond"/>
            <line num="47" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="52" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="61" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="66" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="77" count="10" type="method"/>
            <line num="78" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestUntilDo.java" name="TestUntilDo.java">
            <metrics coveredelements="24" coveredconditionals="4" complexity="9" loc="79" coveredmethods="5" methods="5" elements="28" classes="2" ncloc="45" statements="17" conditionals="6" coveredstatements="15"/>
            <class name="TestUntilDo">
               <metrics coveredelements="10" complexity="3" methods="2" testruns="3" statements="6" coveredconditionals="2" coveredmethods="2" elements="10" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="6" testpasses="3"/>
            </class>
            <class name="TestUntilDo.Counter">
               <metrics coveredelements="14" coveredconditionals="2" complexity="6" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUntilDo() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="42" type="cond"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="53" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="70" count="8" type="method"/>
            <line num="72" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/algorithm/TestWhileDo.java" name="TestWhileDo.java">
            <metrics coveredelements="24" coveredconditionals="4" complexity="9" loc="80" coveredmethods="5" methods="5" elements="28" classes="2" ncloc="46" statements="17" conditionals="6" coveredstatements="15"/>
            <class name="TestWhileDo">
               <metrics coveredelements="10" complexity="3" methods="2" testruns="3" statements="6" coveredconditionals="2" coveredmethods="2" elements="10" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="6" testpasses="3"/>
            </class>
            <class name="TestWhileDo.Counter">
               <metrics coveredelements="14" coveredconditionals="2" complexity="6" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWhileDo() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="43" type="cond"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="54" count="3" type="method"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="59" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="71" count="8" type="method"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
            <line num="76" count="8" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.generator.loop">
         <metrics coveredelements="269" complexity="79" loc="887" methods="73" classes="8" statements="200" coveredconditionals="12" coveredmethods="65" elements="285" ncloc="582" files="7" conditionals="12" coveredstatements="192"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/loop/TestGenerateUntil.java" name="TestGenerateUntil.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="9" loc="107" coveredmethods="7" methods="9" elements="29" classes="1" ncloc="68" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="TestGenerateUntil">
               <metrics coveredelements="25" complexity="9" methods="9" testruns="5" statements="20" coveredconditionals="0" coveredmethods="7" elements="29" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="18" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="5" type="method"/>
            <line num="39" count="5" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="43" count="5" type="method"/>
            <line num="45" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullWrappedPredicate() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullGenerator() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullGeneratorOrNullWrappedPredicate() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashcode() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/loop/TestGenerateWhile.java" name="TestGenerateWhile.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="9" loc="109" coveredmethods="7" methods="9" elements="29" classes="1" ncloc="68" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="TestGenerateWhile">
               <metrics coveredelements="25" complexity="9" methods="9" testruns="5" statements="20" coveredconditionals="0" coveredmethods="7" elements="29" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="18" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="5" type="method"/>
            <line num="39" count="5" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="43" count="5" type="method"/>
            <line num="45" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullPredicate() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullWrappedGenerator() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullPredicateOrNullWrappedGenerator() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashcode() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/loop/TestIteratorToGeneratorAdapter.java" name="TestIteratorToGeneratorAdapter.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="8" loc="101" coveredmethods="8" methods="8" elements="28" classes="1" ncloc="61" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="TestIteratorToGeneratorAdapter">
               <metrics coveredelements="28" complexity="8" methods="8" testruns="7" statements="20" coveredconditionals="0" coveredmethods="8" elements="28" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="20" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="makeFunctor() : Object" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="54" count="7" type="method"/>
            <line num="56" count="7" type="stmt"/>
            <line num="57" count="7" type="stmt"/>
            <line num="58" count="7" type="stmt"/>
            <line num="59" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="62" count="7" type="method"/>
            <line num="64" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNull() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdaptNonNull() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenerate() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructNull() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/loop/TestLoopGenerator.java" name="TestLoopGenerator.java">
            <metrics coveredelements="86" coveredconditionals="12" complexity="20" loc="196" coveredmethods="13" methods="14" elements="88" classes="2" ncloc="136" statements="62" conditionals="12" coveredstatements="61"/>
            <class name="TestLoopGenerator">
               <metrics coveredelements="86" complexity="19" methods="13" testruns="4" statements="61" coveredconditionals="12" coveredmethods="13" elements="86" testfailures="0" testduration="0.002" conditionals="12" coveredstatements="61" testpasses="4"/>
            </class>
            <class name="TestLoopGenerator.Summer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="setUp() : void" num="44" count="4" type="method"/>
            <line num="46" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="run(Procedure&lt;? super Integer&gt;) : void" num="47" count="8" type="method"/>
            <line num="48" count="8" type="stmt"/>
            <line falsecount="6" truecount="36" num="48" type="cond"/>
            <line num="49" count="36" type="stmt"/>
            <line num="50" count="36" type="stmt"/>
            <line falsecount="34" truecount="2" num="50" type="cond"/>
            <line num="51" count="2" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="61" count="4" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="62" type="cond"/>
            <line num="63" count="40" type="stmt"/>
            <line num="64" count="40" type="stmt"/>
            <line num="65" count="40" type="stmt"/>
            <line num="66" count="40" type="stmt"/>
            <line num="67" count="40" type="stmt"/>
            <line num="68" count="40" type="stmt"/>
            <line falsecount="20" truecount="20" num="68" type="cond"/>
            <line num="69" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="74" count="4" type="method"/>
            <line num="76" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleGenerator() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="90" count="5" type="method"/>
            <line num="91" count="5" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStop() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(Integer) : void" num="104" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="106" type="cond"/>
            <line num="107" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWrappingGenerator() : void" num="115" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Procedure&lt;? super Integer&gt;) : void" num="119" count="2" type="method"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="123" count="8" type="method"/>
            <line num="124" count="8" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="131" count="5" type="method"/>
            <line num="132" count="5" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(Integer) : void" num="143" count="3" type="method"/>
            <line num="144" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="145" type="cond"/>
            <line num="146" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTo() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Number) : void" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/loop/TestTransformedGenerator.java" name="TestTransformedGenerator.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="11" loc="125" coveredmethods="10" methods="11" elements="37" classes="1" ncloc="84" statements="26" conditionals="0" coveredstatements="25"/>
            <class name="TestTransformedGenerator">
               <metrics coveredelements="35" complexity="11" methods="11" testruns="6" statements="26" coveredconditionals="0" coveredmethods="10" elements="37" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="25" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="39" count="6" type="method"/>
            <line num="41" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="45" count="6" type="method"/>
            <line num="47" count="6" type="stmt"/>
            <line num="48" count="6" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullWrappedGenerator() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullFunction() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullWrappedGeneratorOrNullFunction() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashcode() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenerate() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="102" count="9" type="method"/>
            <line num="103" count="9" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="119" count="9" type="method"/>
            <line num="120" count="9" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/loop/TestUntilGenerate.java" name="TestUntilGenerate.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="11" loc="125" coveredmethods="10" methods="11" elements="37" classes="1" ncloc="83" statements="26" conditionals="0" coveredstatements="25"/>
            <class name="TestUntilGenerate">
               <metrics coveredelements="35" complexity="11" methods="11" testruns="6" statements="26" coveredconditionals="0" coveredmethods="10" elements="37" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="25" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="42" count="6" type="method"/>
            <line num="44" count="6" type="stmt"/>
            <line num="45" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="48" count="6" type="method"/>
            <line num="50" count="6" type="stmt"/>
            <line num="51" count="6" type="stmt"/>
            <line num="52" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullPredicate() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullWrappedGenerator() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullPredicateOrNullWrappedGenerator() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashcode() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenerate() : void" num="100" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="104" count="5" type="method"/>
            <line num="105" count="5" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="120" count="6" type="method"/>
            <line num="121" count="6" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/loop/TestWhileGenerate.java" name="TestWhileGenerate.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="11" loc="124" coveredmethods="10" methods="11" elements="37" classes="1" ncloc="82" statements="26" conditionals="0" coveredstatements="25"/>
            <class name="TestWhileGenerate">
               <metrics coveredelements="35" complexity="11" methods="11" testruns="6" statements="26" coveredconditionals="0" coveredmethods="10" elements="37" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="25" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="6" type="method"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="47" count="6" type="method"/>
            <line num="49" count="6" type="stmt"/>
            <line num="50" count="6" type="stmt"/>
            <line num="51" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullPredicate() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullWrappedGenerator() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullPredicateOrNullWrappedGenerator() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashcode() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenerate() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="103" count="4" type="method"/>
            <line num="104" count="4" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="119" count="5" type="method"/>
            <line num="120" count="5" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.core.comparator">
         <metrics coveredelements="255" complexity="52" loc="878" methods="46" classes="12" statements="215" coveredconditionals="0" coveredmethods="46" elements="261" ncloc="472" files="12" conditionals="0" coveredstatements="209"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/BaseComparisonPredicateTest.java" name="BaseComparisonPredicateTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="8" loc="81" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="47" statements="20" conditionals="0" coveredstatements="14"/>
            <class name="BaseComparisonPredicateTest">
               <metrics coveredelements="16" coveredconditionals="0" complexity="8" coveredmethods="2" methods="2" elements="22" statements="20" conditionals="0" coveredstatements="14"/>
            </class>
            <line complexity="4" visibility="public" signature="testTestNull() : void" num="33" count="6" type="method"/>
            <line num="35" count="6" type="stmt"/>
            <line num="37" count="6" type="stmt"/>
            <line num="38" count="6" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line num="50" count="6" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testTestNonComparable() : void" num="57" count="6" type="method"/>
            <line num="59" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="68" count="6" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="73" count="6" type="stmt"/>
            <line num="74" count="6" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestComparableComparator.java" name="TestComparableComparator.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="3" loc="54" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="26" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="TestComparableComparator">
               <metrics coveredelements="12" complexity="3" methods="3" testruns="3" statements="9" coveredconditionals="0" coveredmethods="3" elements="12" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="9" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testCompareIntegers() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareNull() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsAndHashCode() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestComparatorFunction.java" name="TestComparatorFunction.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="3" loc="85" coveredmethods="3" methods="3" elements="35" classes="1" ncloc="48" statements="32" conditionals="0" coveredstatements="32"/>
            <class name="TestComparatorFunction">
               <metrics coveredelements="35" complexity="3" methods="3" testruns="4" statements="32" coveredconditionals="0" coveredmethods="3" elements="35" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="32" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestIsEquivalent.java" name="TestIsEquivalent.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="4" loc="69" coveredmethods="4" methods="4" elements="19" classes="1" ncloc="35" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestIsEquivalent">
               <metrics coveredelements="19" complexity="4" methods="4" testruns="7" statements="15" coveredconditionals="0" coveredmethods="4" elements="19" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="15" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstance() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestIsGreaterThan.java" name="TestIsGreaterThan.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="4" loc="70" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="36" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestIsGreaterThan">
               <metrics coveredelements="20" complexity="4" methods="4" testruns="7" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="16" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstance() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestIsGreaterThanOrEqual.java" name="TestIsGreaterThanOrEqual.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="4" loc="70" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="36" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestIsGreaterThanOrEqual">
               <metrics coveredelements="20" complexity="4" methods="4" testruns="7" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstance() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestIsLessThan.java" name="TestIsLessThan.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="4" loc="70" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="36" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestIsLessThan">
               <metrics coveredelements="20" complexity="4" methods="4" testruns="7" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="16" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstance() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestIsLessThanOrEqual.java" name="TestIsLessThanOrEqual.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="4" loc="70" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="36" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestIsLessThanOrEqual">
               <metrics coveredelements="20" complexity="4" methods="4" testruns="7" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstance() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestIsNotEquivalent.java" name="TestIsNotEquivalent.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="4" loc="69" coveredmethods="4" methods="4" elements="19" classes="1" ncloc="35" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestIsNotEquivalent">
               <metrics coveredelements="19" complexity="4" methods="4" testruns="7" statements="15" coveredconditionals="0" coveredmethods="4" elements="19" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="15" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstance() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestIsWithinRange.java" name="TestIsWithinRange.java">
            <metrics coveredelements="34" coveredconditionals="0" complexity="6" loc="89" coveredmethods="6" methods="6" elements="34" classes="1" ncloc="53" statements="28" conditionals="0" coveredstatements="28"/>
            <class name="TestIsWithinRange">
               <metrics coveredelements="34" complexity="6" methods="6" testruns="7" statements="28" coveredconditionals="0" coveredmethods="6" elements="34" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="28" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="33" count="3" type="method"/>
            <line num="35" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvalidRange() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvalidRange2() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFactory() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestMax.java" name="TestMax.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="4" loc="75" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="42" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestMax">
               <metrics coveredelements="20" complexity="4" methods="4" testruns="5" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="16" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFunctionMin() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/comparator/TestMin.java" name="TestMin.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="4" loc="76" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="42" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="TestMin">
               <metrics coveredelements="20" complexity="4" methods="4" testruns="5" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFunctionMin() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.core.composite">
         <metrics coveredelements="1384" complexity="266" loc="3955" methods="213" classes="58" statements="1080" coveredconditionals="106" coveredmethods="204" elements="1399" ncloc="2540" files="39" conditionals="106" coveredstatements="1074"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestAbstractLoopNullaryProcedure.java" name="TestAbstractLoopNullaryProcedure.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="61" coveredmethods="3" methods="4" elements="11" classes="2" ncloc="29" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="TestAbstractLoopNullaryProcedure">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="3" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="3"/>
            </class>
            <class name="MockLoopProcedure">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MockLoopProcedure(NullaryPredicate,NullaryProcedure)" num="55" count="7" type="method"/>
            <line num="56" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="59" count="0" type="method"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestAnd.java" name="TestAnd.java">
            <metrics coveredelements="77" coveredconditionals="12" complexity="11" loc="135" coveredmethods="5" methods="5" elements="77" classes="1" ncloc="93" statements="60" conditionals="12" coveredstatements="60"/>
            <class name="TestAnd">
               <metrics coveredelements="77" complexity="11" methods="5" testruns="6" statements="60" coveredconditionals="12" coveredmethods="5" elements="77" testfailures="0" testduration="0.001" conditionals="12" coveredstatements="60" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTrue() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="54" type="cond"/>
            <line num="55" count="10" type="stmt"/>
            <line num="56" count="10" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="61" type="cond"/>
            <line num="62" count="10" type="stmt"/>
            <line num="63" count="10" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFalse() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="78" type="cond"/>
            <line num="79" count="10" type="stmt"/>
            <line num="80" count="10" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="85" type="cond"/>
            <line num="86" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDuplicateAdd() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="99" type="cond"/>
            <line num="100" count="10" type="stmt"/>
            <line num="101" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="105" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="113" type="cond"/>
            <line num="114" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestBinaryAnd.java" name="TestBinaryAnd.java">
            <metrics coveredelements="77" coveredconditionals="12" complexity="11" loc="137" coveredmethods="5" methods="5" elements="77" classes="1" ncloc="94" statements="60" conditionals="12" coveredstatements="60"/>
            <class name="TestBinaryAnd">
               <metrics coveredelements="77" complexity="11" methods="5" testruns="6" statements="60" coveredconditionals="12" coveredmethods="5" elements="77" testfailures="0" testduration="0.002" conditionals="12" coveredstatements="60" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTrue() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="55" type="cond"/>
            <line num="56" count="10" type="stmt"/>
            <line num="57" count="10" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="62" type="cond"/>
            <line num="63" count="10" type="stmt"/>
            <line num="64" count="10" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFalse() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="79" type="cond"/>
            <line num="80" count="10" type="stmt"/>
            <line num="81" count="10" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="86" type="cond"/>
            <line num="87" count="10" type="stmt"/>
            <line num="88" count="10" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDuplicateAdd() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="100" type="cond"/>
            <line num="101" count="10" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="106" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="116" type="cond"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="124" count="3" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestBinaryCompositeBinaryFunction.java" name="TestBinaryCompositeBinaryFunction.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="5" loc="113" coveredmethods="5" methods="5" elements="27" classes="1" ncloc="79" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="TestBinaryCompositeBinaryFunction">
               <metrics coveredelements="27" complexity="5" methods="5" testruns="6" statements="22" coveredconditionals="0" coveredmethods="5" elements="27" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="22" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateRaw() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateObject() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestBinaryNot.java" name="TestBinaryNot.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="6" loc="82" coveredmethods="6" methods="6" elements="20" classes="2" ncloc="44" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="TestBinaryNot">
               <metrics coveredelements="18" complexity="5" methods="5" testruns="6" statements="13" coveredconditionals="0" coveredmethods="5" elements="18" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="6"/>
            </class>
            <class name="TestBinaryNot.IsSumGreaterThanTen">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotNull() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotNotNull() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer,Integer) : boolean" num="77" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestBinaryOr.java" name="TestBinaryOr.java">
            <metrics coveredelements="81" coveredconditionals="12" complexity="11" loc="146" coveredmethods="5" methods="5" elements="81" classes="1" ncloc="100" statements="64" conditionals="12" coveredstatements="64"/>
            <class name="TestBinaryOr">
               <metrics coveredelements="81" complexity="11" methods="5" testruns="6" statements="64" coveredconditionals="12" coveredmethods="5" elements="81" testfailures="0" testduration="0.002" conditionals="12" coveredstatements="64" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTrue() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="55" type="cond"/>
            <line num="56" count="10" type="stmt"/>
            <line num="57" count="10" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="62" type="cond"/>
            <line num="63" count="10" type="stmt"/>
            <line num="64" count="10" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFalse() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="81" type="cond"/>
            <line num="82" count="10" type="stmt"/>
            <line num="83" count="10" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="88" type="cond"/>
            <line num="89" count="10" type="stmt"/>
            <line num="90" count="10" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDuplicateAdd() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="102" type="cond"/>
            <line num="103" count="10" type="stmt"/>
            <line num="104" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="120" type="cond"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="124" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line num="130" count="3" type="stmt"/>
            <line num="131" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line num="133" count="3" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestBinarySequence.java" name="TestBinarySequence.java">
            <metrics coveredelements="65" coveredconditionals="6" complexity="10" loc="136" coveredmethods="7" methods="7" elements="65" classes="2" ncloc="95" statements="52" conditionals="6" coveredstatements="52"/>
            <class name="TestBinarySequence">
               <metrics coveredelements="63" complexity="9" methods="6" testruns="7" statements="51" coveredconditionals="6" coveredmethods="6" elements="63" testfailures="0" testduration="0.001" conditionals="6" coveredstatements="51" testpasses="7"/>
            </class>
            <class name="TestBinarySequence.RunCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunZero() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunOne() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunTwo() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testThen() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="85" type="cond"/>
            <line num="86" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line num="88" count="10" type="stmt"/>
            <line num="89" count="10" type="stmt"/>
            <line num="90" count="10" type="stmt"/>
            <line falsecount="10" truecount="55" num="90" type="cond"/>
            <line num="91" count="55" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="104" type="cond"/>
            <line num="105" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line num="107" count="3" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line num="109" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="111" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(String,String) : void" num="131" count="61" type="method"/>
            <line num="132" count="61" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestComposite.java" name="TestComposite.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="24" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="TestComposite">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testUnaryMethods() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBinaryMethods() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestCompositeBinaryFunction.java" name="TestCompositeBinaryFunction.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="87" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="55" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestCompositeBinaryFunction">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="4" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="12" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestCompositeBinaryPredicate.java" name="TestCompositeBinaryPredicate.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="89" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="57" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestCompositeBinaryPredicate">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="4" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="12" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestCompositeFunction.java" name="TestCompositeFunction.java">
            <metrics coveredelements="42" coveredconditionals="8" complexity="9" loc="96" coveredmethods="5" methods="5" elements="42" classes="1" ncloc="58" statements="29" conditionals="8" coveredstatements="29"/>
            <class name="TestCompositeFunction">
               <metrics coveredelements="42" complexity="9" methods="5" testruns="5" statements="29" coveredconditionals="8" coveredmethods="5" elements="42" testfailures="0" testduration="0.001" conditionals="8" coveredstatements="29" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testOf() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Object) : Integer" num="56" count="55" type="method"/>
            <line num="57" count="55" type="stmt"/>
            <line falsecount="10" truecount="45" num="57" type="cond"/>
            <line num="58" count="45" type="stmt"/>
            <line num="60" count="10" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="65" type="cond"/>
            <line num="66" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="66" type="cond"/>
            <line num="67" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="79" type="cond"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="86" count="3" type="stmt"/>
            <line num="87" count="3" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestCompositePredicate.java" name="TestCompositePredicate.java">
            <metrics coveredelements="36" coveredconditionals="4" complexity="8" loc="92" coveredmethods="6" methods="6" elements="36" classes="1" ncloc="55" statements="26" conditionals="4" coveredstatements="26"/>
            <class name="TestCompositePredicate">
               <metrics coveredelements="36" complexity="8" methods="6" testruns="7" statements="26" coveredconditionals="4" coveredmethods="6" elements="36" testfailures="0" testduration="0.0" conditionals="4" coveredstatements="26" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullNotAllowed() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullNotAllowed2() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testOf() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="64" type="cond"/>
            <line num="65" count="10" type="stmt"/>
            <line num="66" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="77" type="cond"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestCompositeProcedure.java" name="TestCompositeProcedure.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="7" loc="86" coveredmethods="6" methods="6" elements="28" classes="1" ncloc="49" statements="20" conditionals="2" coveredstatements="20"/>
            <class name="TestCompositeProcedure">
               <metrics coveredelements="28" complexity="7" methods="6" testruns="7" statements="20" coveredconditionals="2" coveredmethods="6" elements="28" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="20" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulProcedureNotAllowed() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullProcedureNotAllowed2() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOf() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="71" type="cond"/>
            <line num="72" count="3" type="stmt"/>
            <line num="73" count="3" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditional.java" name="TestConditional.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="62" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="34" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestConditional">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="3" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="12" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testNullaryMethods() : void" num="39" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnaryMethods() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBinaryMethods() : void" num="55" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalBinaryFunction.java" name="TestConditionalBinaryFunction.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="81" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="50" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestConditionalBinaryFunction">
               <metrics coveredelements="14" complexity="3" methods="3" testruns="4" statements="11" coveredconditionals="0" coveredmethods="3" elements="14" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="11" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalBinaryPredicate.java" name="TestConditionalBinaryPredicate.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="89" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="58" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestConditionalBinaryPredicate">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="4" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="12" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalBinaryProcedure.java" name="TestConditionalBinaryProcedure.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="4" loc="107" coveredmethods="4" methods="4" elements="28" classes="2" ncloc="72" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="TestConditionalBinaryProcedure">
               <metrics coveredelements="26" complexity="3" methods="3" testruns="4" statements="23" coveredconditionals="0" coveredmethods="3" elements="26" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="23" testpasses="4"/>
            </class>
            <class name="TestConditionalBinaryProcedure.RunCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object,Object) : void" num="102" count="3" type="method"/>
            <line num="103" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalFunction.java" name="TestConditionalFunction.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="81" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="50" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestConditionalFunction">
               <metrics coveredelements="14" complexity="3" methods="3" testruns="4" statements="11" coveredconditionals="0" coveredmethods="3" elements="14" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalNullaryFunction.java" name="TestConditionalNullaryFunction.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="88" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="57" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestConditionalNullaryFunction">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="4" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="12" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalNullaryPredicate.java" name="TestConditionalNullaryPredicate.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="88" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="57" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestConditionalNullaryPredicate">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="4" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="12" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalNullaryProcedure.java" name="TestConditionalNullaryProcedure.java">
            <metrics coveredelements="43" coveredconditionals="0" complexity="4" loc="131" coveredmethods="4" methods="4" elements="43" classes="2" ncloc="96" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="TestConditionalNullaryProcedure">
               <metrics coveredelements="41" complexity="3" methods="3" testruns="4" statements="38" coveredconditionals="0" coveredmethods="3" elements="41" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="38" testpasses="4"/>
            </class>
            <class name="TestConditionalNullaryProcedure.RunCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="126" count="6" type="method"/>
            <line num="127" count="6" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalPredicate.java" name="TestConditionalPredicate.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="81" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="50" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestConditionalPredicate">
               <metrics coveredelements="14" complexity="3" methods="3" testruns="4" statements="11" coveredconditionals="0" coveredmethods="3" elements="14" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="11" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestConditionalProcedure.java" name="TestConditionalProcedure.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="4" loc="107" coveredmethods="4" methods="4" elements="28" classes="2" ncloc="72" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="TestConditionalProcedure">
               <metrics coveredelements="26" complexity="3" methods="3" testruns="4" statements="23" coveredconditionals="0" coveredmethods="3" elements="26" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="23" testpasses="4"/>
            </class>
            <class name="TestConditionalProcedure.RunCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object) : void" num="102" count="3" type="method"/>
            <line num="103" count="3" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestDoWhileNullaryProcedure.java" name="TestDoWhileNullaryProcedure.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="7" loc="114" coveredmethods="7" methods="7" elements="41" classes="2" ncloc="71" statements="34" conditionals="0" coveredstatements="34"/>
            <class name="TestDoWhileNullaryProcedure">
               <metrics coveredelements="37" complexity="5" methods="5" testruns="5" statements="32" coveredconditionals="0" coveredmethods="5" elements="37" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="32" testpasses="5"/>
            </class>
            <class name="TestDoWhileNullaryProcedure.ListRemoveFirstProcedure">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ListRemoveFirstProcedure(List&lt;Object&gt;)" num="53" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="58" count="8" type="method"/>
            <line num="59" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="getList() : List&lt;Object&gt;" num="64" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line num="66" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLoopWithAction() : void" num="74" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="93" testsuccess="true" count="3" testduration="0.0" type="method"/>
            <line num="94" count="3" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLoopForNothing() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestNot.java" name="TestNot.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="5" loc="73" coveredmethods="5" methods="5" elements="19" classes="1" ncloc="40" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="TestNot">
               <metrics coveredelements="19" complexity="5" methods="5" testruns="6" statements="14" coveredconditionals="0" coveredmethods="5" elements="19" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="14" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotNull() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotNotNull() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestNullaryAnd.java" name="TestNullaryAnd.java">
            <metrics coveredelements="75" coveredconditionals="12" complexity="11" loc="140" coveredmethods="5" methods="5" elements="75" classes="1" ncloc="95" statements="58" conditionals="12" coveredstatements="58"/>
            <class name="TestNullaryAnd">
               <metrics coveredelements="75" complexity="11" methods="5" testruns="6" statements="58" coveredconditionals="12" coveredmethods="5" elements="75" testfailures="0" testduration="0.0" conditionals="12" coveredstatements="58" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTrue() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="54" type="cond"/>
            <line num="55" count="10" type="stmt"/>
            <line num="56" count="10" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="61" type="cond"/>
            <line num="62" count="10" type="stmt"/>
            <line num="63" count="10" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFalse() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="78" type="cond"/>
            <line num="79" count="10" type="stmt"/>
            <line num="80" count="10" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="85" type="cond"/>
            <line num="86" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDuplicateAdd() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="99" type="cond"/>
            <line num="100" count="10" type="stmt"/>
            <line num="101" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="112" type="cond"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestNullaryNot.java" name="TestNullaryNot.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="5" loc="74" coveredmethods="5" methods="5" elements="19" classes="1" ncloc="41" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="TestNullaryNot">
               <metrics coveredelements="19" complexity="5" methods="5" testruns="6" statements="14" coveredconditionals="0" coveredmethods="5" elements="19" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="14" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotNull() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotNotNull() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestNullaryOr.java" name="TestNullaryOr.java">
            <metrics coveredelements="88" coveredconditionals="12" complexity="12" loc="154" coveredmethods="6" methods="6" elements="88" classes="1" ncloc="105" statements="70" conditionals="12" coveredstatements="70"/>
            <class name="TestNullaryOr">
               <metrics coveredelements="88" complexity="12" methods="6" testruns="7" statements="70" coveredconditionals="12" coveredmethods="6" elements="88" testfailures="0" testduration="0.002" conditionals="12" coveredstatements="70" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructors() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTrue() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="66" type="cond"/>
            <line num="67" count="10" type="stmt"/>
            <line num="68" count="10" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="73" type="cond"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="10" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFalse() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="91" type="cond"/>
            <line num="92" count="10" type="stmt"/>
            <line num="93" count="10" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="98" type="cond"/>
            <line num="99" count="10" type="stmt"/>
            <line num="100" count="10" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDuplicateAdd() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="112" type="cond"/>
            <line num="113" count="10" type="stmt"/>
            <line num="114" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="118" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="129" type="cond"/>
            <line num="130" count="3" type="stmt"/>
            <line num="131" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line num="133" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="135" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line num="138" count="3" type="stmt"/>
            <line num="139" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="141" count="3" type="stmt"/>
            <line num="142" count="3" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestNullarySequence.java" name="TestNullarySequence.java">
            <metrics coveredelements="69" coveredconditionals="6" complexity="11" loc="139" coveredmethods="8" methods="8" elements="69" classes="2" ncloc="95" statements="55" conditionals="6" coveredstatements="55"/>
            <class name="TestNullarySequence">
               <metrics coveredelements="67" complexity="10" methods="7" testruns="8" statements="54" coveredconditionals="6" coveredmethods="7" elements="67" testfailures="0" testduration="0.001" conditionals="6" coveredstatements="54" testpasses="8"/>
            </class>
            <class name="TestNullarySequence.RunCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructors() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunZero() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunOne() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunTwo() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testThen() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="97" type="cond"/>
            <line num="98" count="10" type="stmt"/>
            <line num="99" count="10" type="stmt"/>
            <line num="100" count="10" type="stmt"/>
            <line num="101" count="10" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line falsecount="10" truecount="55" num="102" type="cond"/>
            <line num="103" count="55" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="115" type="cond"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="134" count="58" type="method"/>
            <line num="135" count="58" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestOr.java" name="TestOr.java">
            <metrics coveredelements="79" coveredconditionals="12" complexity="11" loc="138" coveredmethods="5" methods="5" elements="79" classes="1" ncloc="93" statements="62" conditionals="12" coveredstatements="62"/>
            <class name="TestOr">
               <metrics coveredelements="79" complexity="11" methods="5" testruns="6" statements="62" coveredconditionals="12" coveredmethods="5" elements="79" testfailures="0" testduration="0.001" conditionals="12" coveredstatements="62" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTrue() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="52" type="cond"/>
            <line num="53" count="10" type="stmt"/>
            <line num="54" count="10" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="59" type="cond"/>
            <line num="60" count="10" type="stmt"/>
            <line num="61" count="10" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFalse() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="77" type="cond"/>
            <line num="78" count="10" type="stmt"/>
            <line num="79" count="10" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="84" type="cond"/>
            <line num="85" count="10" type="stmt"/>
            <line num="86" count="10" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDuplicateAdd() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="98" type="cond"/>
            <line num="99" count="10" type="stmt"/>
            <line num="100" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="115" type="cond"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="124" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestSequence.java" name="TestSequence.java">
            <metrics coveredelements="75" coveredconditionals="6" complexity="11" loc="146" coveredmethods="8" methods="8" elements="75" classes="2" ncloc="102" statements="61" conditionals="6" coveredstatements="61"/>
            <class name="TestSequence">
               <metrics coveredelements="73" complexity="10" methods="7" testruns="8" statements="60" coveredconditionals="6" coveredmethods="7" elements="73" testfailures="0" testduration="0.001" conditionals="6" coveredstatements="60" testpasses="8"/>
            </class>
            <class name="TestSequence.RunCounter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructors() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunZero() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunOne() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunTwo() : void" num="85" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testThen() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="104" type="cond"/>
            <line num="105" count="10" type="stmt"/>
            <line num="106" count="10" type="stmt"/>
            <line num="107" count="10" type="stmt"/>
            <line num="108" count="10" type="stmt"/>
            <line num="109" count="10" type="stmt"/>
            <line falsecount="10" truecount="55" num="109" type="cond"/>
            <line num="110" count="55" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="115" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="122" type="cond"/>
            <line num="123" count="3" type="stmt"/>
            <line num="124" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line num="130" count="3" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object) : void" num="141" count="61" type="method"/>
            <line num="142" count="61" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestTransformedBinaryFunction.java" name="TestTransformedBinaryFunction.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="93" coveredmethods="9" methods="11" elements="30" classes="3" ncloc="63" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="TestTransformedBinaryFunction">
               <metrics coveredelements="14" complexity="5" methods="5" testruns="4" statements="13" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="11" testpasses="4"/>
            </class>
            <class name="TestTransformedBinaryFunction.Sum">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestTransformedBinaryFunction.AddOne">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="35" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="38" count="7" type="method"/>
            <line num="40" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="42" count="18" type="method"/>
            <line num="44" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="52" count="5" type="method"/>
            <line num="54" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="56" count="18" type="method"/>
            <line num="58" count="18" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="62" count="3" type="method"/>
            <line num="64" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="67" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestTransformedBinaryProcedure.java" name="TestTransformedBinaryProcedure.java">
            <metrics coveredelements="30" coveredconditionals="0" complexity="12" loc="99" coveredmethods="10" methods="12" elements="33" classes="3" ncloc="68" statements="21" conditionals="0" coveredstatements="20"/>
            <class name="TestTransformedBinaryProcedure">
               <metrics coveredelements="16" complexity="5" methods="5" testruns="4" statements="14" coveredconditionals="0" coveredmethods="3" elements="19" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="13" testpasses="4"/>
            </class>
            <class name="TestTransformedBinaryProcedure.Sum">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestTransformedBinaryProcedure.Total">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="35" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="38" count="7" type="method"/>
            <line num="40" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="42" count="18" type="method"/>
            <line num="44" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTotal() : Integer" num="53" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="56" count="5" type="method"/>
            <line num="58" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="60" count="18" type="method"/>
            <line num="62" count="18" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="66" count="3" type="method"/>
            <line num="68" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="79" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer,Integer) : Integer" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="88" count="0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestTransformedNullaryFunction.java" name="TestTransformedNullaryFunction.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="100" coveredmethods="9" methods="11" elements="30" classes="3" ncloc="65" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="TestTransformedNullaryFunction">
               <metrics coveredelements="14" complexity="5" methods="5" testruns="4" statements="13" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="11" testpasses="4"/>
            </class>
            <class name="TestTransformedNullaryFunction.One">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestTransformedNullaryFunction.AddOne">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate() : Integer" num="35" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="39" count="7" type="method"/>
            <line num="41" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="44" count="18" type="method"/>
            <line num="46" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="51" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="55" count="5" type="method"/>
            <line num="57" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="60" count="18" type="method"/>
            <line num="62" count="18" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="69" count="3" type="method"/>
            <line num="71" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : Integer" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestTransformedNullaryProcedure.java" name="TestTransformedNullaryProcedure.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="12" loc="106" coveredmethods="10" methods="12" elements="32" classes="3" ncloc="69" statements="20" conditionals="0" coveredstatements="19"/>
            <class name="TestTransformedNullaryProcedure">
               <metrics coveredelements="15" complexity="5" methods="5" testruns="4" statements="13" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="12" testpasses="4"/>
            </class>
            <class name="TestTransformedNullaryProcedure.One">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestTransformedNullaryProcedure.AggregatorProcedure">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate() : Integer" num="35" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="39" count="7" type="method"/>
            <line num="41" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="44" count="18" type="method"/>
            <line num="46" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="53" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTotal() : int" num="57" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="61" count="5" type="method"/>
            <line num="63" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="66" count="18" type="method"/>
            <line num="68" count="18" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="75" count="3" type="method"/>
            <line num="77" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : Integer" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="96" count="0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestTransposedFunction.java" name="TestTransposedFunction.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="5" loc="73" coveredmethods="5" methods="5" elements="17" classes="1" ncloc="40" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TestTransposedFunction">
               <metrics coveredelements="17" complexity="5" methods="5" testruns="6" statements="12" coveredconditionals="0" coveredmethods="5" elements="17" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="12" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransposeNull() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTranspose() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestTransposedPredicate.java" name="TestTransposedPredicate.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="5" loc="76" coveredmethods="5" methods="5" elements="18" classes="1" ncloc="43" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TestTransposedPredicate">
               <metrics coveredelements="18" complexity="5" methods="5" testruns="6" statements="13" coveredconditionals="0" coveredmethods="5" elements="18" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransposeNull() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTranspose() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestTransposedProcedure.java" name="TestTransposedProcedure.java">
            <metrics coveredelements="27" coveredconditionals="2" complexity="7" loc="89" coveredmethods="6" methods="6" elements="27" classes="2" ncloc="51" statements="19" conditionals="2" coveredstatements="19"/>
            <class name="TestTransposedProcedure">
               <metrics coveredelements="22" complexity="5" methods="5" testruns="6" statements="17" coveredconditionals="0" coveredmethods="5" elements="22" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="17" testpasses="6"/>
            </class>
            <class name="TestTransposedProcedure.LeftNotNullCounter">
               <metrics coveredelements="5" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransposeNull() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTranspose() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(Object,Object) : void" num="81" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="82" type="cond"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/composite/TestWhileDoNullaryProcedure.java" name="TestWhileDoNullaryProcedure.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="7" loc="115" coveredmethods="7" methods="7" elements="41" classes="2" ncloc="71" statements="34" conditionals="0" coveredstatements="34"/>
            <class name="TestWhileDoNullaryProcedure">
               <metrics coveredelements="37" complexity="5" methods="5" testruns="4" statements="32" coveredconditionals="0" coveredmethods="5" elements="37" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="32" testpasses="4"/>
            </class>
            <class name="TestWhileDoNullaryProcedure.ListRemoveFirstProcedure">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ListRemoveFirstProcedure(List&lt;Object&gt;)" num="53" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="58" count="6" type="method"/>
            <line num="59" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getList() : List&lt;Object&gt;" num="64" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line num="66" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLoopWithAction() : void" num="74" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="93" testsuccess="true" count="3" testduration="0.0" type="method"/>
            <line num="94" count="3" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLoopForNothing() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.range">
         <metrics coveredelements="1543" complexity="274" loc="3828" methods="230" classes="6" statements="1327" coveredconditionals="22" coveredmethods="230" elements="1585" ncloc="3040" files="6" conditionals="28" coveredstatements="1291"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/range/TestCharacterRange.java" name="TestCharacterRange.java">
            <metrics coveredelements="290" coveredconditionals="1" complexity="51" loc="730" coveredmethods="44" methods="44" elements="298" classes="1" ncloc="580" statements="252" conditionals="2" coveredstatements="245"/>
            <class name="TestCharacterRange">
               <metrics coveredelements="290" complexity="51" methods="44" testruns="41" statements="252" coveredconditionals="1" coveredmethods="44" elements="298" testfailures="0" testduration="0.008" conditionals="2" coveredstatements="245" testpasses="41"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="55" count="41" type="method"/>
            <line num="57" count="41" type="stmt"/>
            <line num="58" count="41" type="stmt"/>
            <line num="59" count="41" type="stmt"/>
            <line num="60" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="63" count="41" type="method"/>
            <line num="65" count="41" type="stmt"/>
            <line num="66" count="41" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="69" count="3" type="method"/>
            <line num="72" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStepChecking() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectConstructor() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseStep() : void" num="128" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStep() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardRange() : void" num="140" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseRange() : void" num="146" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoundaries() : void" num="162" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscending() : void" num="171" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscending() : void" num="181" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscending() : void" num="191" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscending() : void" num="201" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepAscending() : void" num="211" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescending() : void" num="221" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescending() : void" num="232" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescending() : void" num="243" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="246" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescending() : void" num="254" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="257" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepDescending() : void" num="265" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAscending() : void" num="276" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="10" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDescending() : void" num="285" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="10" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToCollection() : void" num="294" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformedGenerator() : void" num="302" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Character&gt;) : List&lt;Character&gt;" num="308" count="1" type="method"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="10" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Character&gt;) : List&lt;Character&gt;" num="321" count="1" type="method"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="10" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyRanges() : void" num="335" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="337" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscendingContains() : void" num="377" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="380" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="385" count="4" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscendingContains() : void" num="398" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="401" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="3" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line num="413" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscendingContains() : void" num="419" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="422" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="4" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="434" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscendingContains() : void" num="440" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="443" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line num="448" count="3" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line num="454" count="1" type="stmt"/>
            <line num="455" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepAscending() : void" num="461" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="464" count="1" type="stmt"/>
            <line num="468" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="10" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="476" count="1" type="stmt"/>
            <line num="477" count="1" type="stmt"/>
            <line num="478" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescendingContains() : void" num="485" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="488" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="1" type="stmt"/>
            <line num="499" count="1" type="stmt"/>
            <line num="500" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescendingContains() : void" num="506" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="509" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="513" count="1" type="stmt"/>
            <line num="514" count="3" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line num="519" count="1" type="stmt"/>
            <line num="520" count="1" type="stmt"/>
            <line num="521" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescendingContains() : void" num="527" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="530" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="4" type="stmt"/>
            <line num="539" count="1" type="stmt"/>
            <line num="540" count="1" type="stmt"/>
            <line num="541" count="1" type="stmt"/>
            <line num="542" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescendingContains() : void" num="548" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="551" count="1" type="stmt"/>
            <line num="554" count="1" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line num="556" count="3" type="stmt"/>
            <line num="560" count="1" type="stmt"/>
            <line num="561" count="1" type="stmt"/>
            <line num="562" count="1" type="stmt"/>
            <line num="563" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepDescending() : void" num="569" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="572" count="1" type="stmt"/>
            <line num="577" count="1" type="stmt"/>
            <line num="579" count="1" type="stmt"/>
            <line num="580" count="10" type="stmt"/>
            <line num="585" count="1" type="stmt"/>
            <line num="586" count="1" type="stmt"/>
            <line num="587" count="1" type="stmt"/>
            <line num="588" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNullOrEmpty() : void" num="595" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="597" count="1" type="stmt"/>
            <line num="599" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="602" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="606" count="1" type="stmt"/>
            <line num="608" count="1" type="stmt"/>
            <line num="609" count="1" type="stmt"/>
            <line num="612" count="1" type="stmt"/>
            <line num="614" count="1" type="stmt"/>
            <line num="616" count="1" type="stmt"/>
            <line num="617" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="620" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="624" count="1" type="stmt"/>
            <line num="626" count="1" type="stmt"/>
            <line num="627" count="1" type="stmt"/>
            <line num="629" count="1" type="stmt"/>
            <line num="631" count="1" type="stmt"/>
            <line num="633" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="633" type="cond"/>
            <line num="634" count="1" type="stmt"/>
            <line num="636" count="1" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="642" count="1" type="stmt"/>
            <line num="644" count="1" type="stmt"/>
            <line num="647" count="1" type="stmt"/>
            <line num="649" count="1" type="stmt"/>
            <line num="652" count="1" type="stmt"/>
            <line num="654" count="1" type="stmt"/>
            <line num="657" count="1" type="stmt"/>
            <line num="659" count="1" type="stmt"/>
            <line num="662" count="1" type="stmt"/>
            <line num="664" count="1" type="stmt"/>
            <line num="668" count="1" type="stmt"/>
            <line num="671" count="1" type="stmt"/>
            <line num="674" count="1" type="stmt"/>
            <line num="676" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="680" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="682" count="1" type="stmt"/>
            <line num="684" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testConstructorUsingSameEndpoint() : void" num="688" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="690" count="1" type="stmt"/>
            <line num="693" count="1" type="stmt"/>
            <line num="694" count="1" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testInvalidRange() : void" num="700" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="702" count="1" type="stmt"/>
            <line num="703" count="1" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="708" count="1" type="stmt"/>
            <line num="711" count="1" type="stmt"/>
            <line num="714" count="1" type="stmt"/>
            <line num="715" count="1" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultStep() : void" num="722" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="724" count="1" type="stmt"/>
            <line num="726" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/range/TestDoubleRange.java" name="TestDoubleRange.java">
            <metrics coveredelements="304" coveredconditionals="5" complexity="54" loc="769" coveredmethods="45" methods="45" elements="312" classes="1" ncloc="608" statements="261" conditionals="6" coveredstatements="254"/>
            <class name="TestDoubleRange">
               <metrics coveredelements="304" complexity="54" methods="45" testruns="42" statements="261" coveredconditionals="5" coveredmethods="45" elements="312" testfailures="0" testduration="0.011000000000000003" conditionals="6" coveredstatements="254" testpasses="42"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="61" count="42" type="method"/>
            <line num="63" count="42" type="stmt"/>
            <line num="64" count="42" type="stmt"/>
            <line num="65" count="42" type="stmt"/>
            <line num="67" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="71" count="42" type="method"/>
            <line num="73" count="42" type="stmt"/>
            <line num="74" count="42" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="77" count="3" type="method"/>
            <line num="80" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGenerateListExample() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="94" type="cond"/>
            <line num="95" count="10" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="105" type="cond"/>
            <line num="106" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStepChecking() : void" num="111" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectConstructor() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseStep() : void" num="159" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStep() : void" num="166" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardRange() : void" num="173" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseRange() : void" num="180" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoundaries() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscending() : void" num="206" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscending() : void" num="217" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscending() : void" num="228" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="231" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscending() : void" num="239" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepAscending() : void" num="250" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="253" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescending() : void" num="261" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="264" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescending() : void" num="272" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="275" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescending() : void" num="283" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="286" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescending() : void" num="294" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="297" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepDescending() : void" num="305" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAscending() : void" num="316" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="10" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDescending() : void" num="325" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="10" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToCollection() : void" num="334" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformedGenerator() : void" num="342" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Double&gt;) : Double" num="348" count="1" type="method"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="10" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Double&gt;) : Double" num="361" count="1" type="method"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="10" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyRanges() : void" num="375" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="377" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="413" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscendingContains() : void" num="417" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="420" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="4" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscendingContains() : void" num="438" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="441" count="1" type="stmt"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="446" count="3" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscendingContains() : void" num="459" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="462" count="1" type="stmt"/>
            <line num="465" count="1" type="stmt"/>
            <line num="466" count="1" type="stmt"/>
            <line num="467" count="4" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="1" type="stmt"/>
            <line num="474" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscendingContains() : void" num="480" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="483" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="3" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line num="494" count="1" type="stmt"/>
            <line num="495" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepAscending() : void" num="501" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="504" count="1" type="stmt"/>
            <line num="507" count="1" type="stmt"/>
            <line num="508" count="1" type="stmt"/>
            <line num="509" count="4" type="stmt"/>
            <line num="513" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line num="516" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescendingContains() : void" num="523" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="526" count="1" type="stmt"/>
            <line num="529" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="531" count="4" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line num="537" count="1" type="stmt"/>
            <line num="538" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescendingContains() : void" num="544" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="547" count="1" type="stmt"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line num="552" count="3" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line num="559" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescendingContains() : void" num="565" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="568" count="1" type="stmt"/>
            <line num="571" count="1" type="stmt"/>
            <line num="572" count="1" type="stmt"/>
            <line num="573" count="4" type="stmt"/>
            <line num="577" count="1" type="stmt"/>
            <line num="578" count="1" type="stmt"/>
            <line num="579" count="1" type="stmt"/>
            <line num="580" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescendingContains() : void" num="586" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="589" count="1" type="stmt"/>
            <line num="592" count="1" type="stmt"/>
            <line num="593" count="1" type="stmt"/>
            <line num="594" count="3" type="stmt"/>
            <line num="598" count="1" type="stmt"/>
            <line num="599" count="1" type="stmt"/>
            <line num="600" count="1" type="stmt"/>
            <line num="601" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepDescending() : void" num="607" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="610" count="1" type="stmt"/>
            <line num="613" count="1" type="stmt"/>
            <line num="614" count="1" type="stmt"/>
            <line num="615" count="4" type="stmt"/>
            <line num="620" count="1" type="stmt"/>
            <line num="621" count="1" type="stmt"/>
            <line num="622" count="1" type="stmt"/>
            <line num="623" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNullOrEmpty() : void" num="630" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="632" count="1" type="stmt"/>
            <line num="634" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="637" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="641" count="1" type="stmt"/>
            <line num="643" count="1" type="stmt"/>
            <line num="644" count="1" type="stmt"/>
            <line num="647" count="1" type="stmt"/>
            <line num="649" count="1" type="stmt"/>
            <line num="651" count="1" type="stmt"/>
            <line num="652" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="655" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="659" count="1" type="stmt"/>
            <line num="661" count="1" type="stmt"/>
            <line num="662" count="1" type="stmt"/>
            <line num="664" count="1" type="stmt"/>
            <line num="666" count="1" type="stmt"/>
            <line num="668" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="668" type="cond"/>
            <line num="669" count="1" type="stmt"/>
            <line num="671" count="1" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="677" count="1" type="stmt"/>
            <line num="679" count="1" type="stmt"/>
            <line num="682" count="1" type="stmt"/>
            <line num="684" count="1" type="stmt"/>
            <line num="687" count="1" type="stmt"/>
            <line num="689" count="1" type="stmt"/>
            <line num="692" count="1" type="stmt"/>
            <line num="694" count="1" type="stmt"/>
            <line num="697" count="1" type="stmt"/>
            <line num="699" count="1" type="stmt"/>
            <line num="703" count="1" type="stmt"/>
            <line num="705" count="1" type="stmt"/>
            <line num="708" count="1" type="stmt"/>
            <line num="709" count="1" type="stmt"/>
            <line num="712" count="1" type="stmt"/>
            <line num="714" count="1" type="stmt"/>
            <line num="716" count="1" type="stmt"/>
            <line num="717" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="721" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="723" count="1" type="stmt"/>
            <line num="725" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testConstructorUsingSameEndpoint() : void" num="729" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="731" count="1" type="stmt"/>
            <line num="733" count="1" type="stmt"/>
            <line num="734" count="1" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testInvalidRange() : void" num="740" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="742" count="1" type="stmt"/>
            <line num="743" count="1" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="749" count="1" type="stmt"/>
            <line num="751" count="1" type="stmt"/>
            <line num="753" count="1" type="stmt"/>
            <line num="754" count="1" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultStep() : void" num="761" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="763" count="1" type="stmt"/>
            <line num="765" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/range/TestEndpoint.java" name="TestEndpoint.java">
            <metrics coveredelements="26" coveredconditionals="1" complexity="5" loc="82" coveredmethods="4" methods="4" elements="28" classes="1" ncloc="47" statements="22" conditionals="2" coveredstatements="21"/>
            <class name="TestEndpoint">
               <metrics coveredelements="26" complexity="5" methods="4" testruns="4" statements="22" coveredconditionals="1" coveredmethods="4" elements="28" testfailures="0" testduration="0.0" conditionals="2" coveredstatements="21" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testValue() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoundType() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="69" type="cond"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/range/TestFloatRange.java" name="TestFloatRange.java">
            <metrics coveredelements="305" coveredconditionals="5" complexity="54" loc="757" coveredmethods="45" methods="45" elements="313" classes="1" ncloc="607" statements="262" conditionals="6" coveredstatements="255"/>
            <class name="TestFloatRange">
               <metrics coveredelements="305" complexity="54" methods="45" testruns="42" statements="262" coveredconditionals="5" coveredmethods="45" elements="313" testfailures="0" testduration="0.006" conditionals="6" coveredstatements="255" testpasses="42"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="61" count="42" type="method"/>
            <line num="63" count="42" type="stmt"/>
            <line num="64" count="42" type="stmt"/>
            <line num="65" count="42" type="stmt"/>
            <line num="67" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="71" count="42" type="method"/>
            <line num="73" count="42" type="stmt"/>
            <line num="74" count="42" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="77" count="3" type="method"/>
            <line num="80" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGenerateListExample() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="93" type="cond"/>
            <line num="94" count="10" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="103" type="cond"/>
            <line num="104" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStepChecking() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectConstructor() : void" num="148" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseStep() : void" num="158" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStep() : void" num="165" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardRange() : void" num="172" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseRange() : void" num="179" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscending() : void" num="186" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscending() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscending() : void" num="208" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscending() : void" num="219" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepAscending() : void" num="230" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescending() : void" num="241" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescending() : void" num="252" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="255" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescending() : void" num="263" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescending() : void" num="274" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="277" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepDescending() : void" num="285" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAscending() : void" num="296" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="10" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDescending() : void" num="305" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="10" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToCollection() : void" num="314" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformedGenerator() : void" num="322" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Float&gt;) : Float" num="328" count="1" type="method"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="10" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Float&gt;) : Float" num="341" count="1" type="method"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="10" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyRanges() : void" num="355" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="357" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoundaries() : void" num="397" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscendingContains() : void" num="406" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="409" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line num="413" count="1" type="stmt"/>
            <line num="414" count="4" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="419" count="1" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line num="421" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscendingContains() : void" num="427" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="430" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="3" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line num="440" count="1" type="stmt"/>
            <line num="441" count="1" type="stmt"/>
            <line num="442" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscendingContains() : void" num="448" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="451" count="1" type="stmt"/>
            <line num="454" count="1" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line num="456" count="4" type="stmt"/>
            <line num="460" count="1" type="stmt"/>
            <line num="461" count="1" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscendingContains() : void" num="469" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="472" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="476" count="1" type="stmt"/>
            <line num="477" count="3" type="stmt"/>
            <line num="481" count="1" type="stmt"/>
            <line num="482" count="1" type="stmt"/>
            <line num="483" count="1" type="stmt"/>
            <line num="484" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepAscending() : void" num="490" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="493" count="1" type="stmt"/>
            <line num="496" count="1" type="stmt"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="4" type="stmt"/>
            <line num="502" count="1" type="stmt"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="1" type="stmt"/>
            <line num="505" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescendingContains() : void" num="512" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="515" count="1" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line num="519" count="1" type="stmt"/>
            <line num="520" count="4" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="1" type="stmt"/>
            <line num="526" count="1" type="stmt"/>
            <line num="527" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescendingContains() : void" num="533" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="536" count="1" type="stmt"/>
            <line num="539" count="1" type="stmt"/>
            <line num="540" count="1" type="stmt"/>
            <line num="541" count="3" type="stmt"/>
            <line num="545" count="1" type="stmt"/>
            <line num="546" count="1" type="stmt"/>
            <line num="547" count="1" type="stmt"/>
            <line num="548" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescendingContains() : void" num="554" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="557" count="1" type="stmt"/>
            <line num="560" count="1" type="stmt"/>
            <line num="561" count="1" type="stmt"/>
            <line num="562" count="4" type="stmt"/>
            <line num="566" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line num="568" count="1" type="stmt"/>
            <line num="569" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescendingContains() : void" num="575" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="578" count="1" type="stmt"/>
            <line num="581" count="1" type="stmt"/>
            <line num="582" count="1" type="stmt"/>
            <line num="583" count="3" type="stmt"/>
            <line num="587" count="1" type="stmt"/>
            <line num="588" count="1" type="stmt"/>
            <line num="589" count="1" type="stmt"/>
            <line num="590" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepDescending() : void" num="596" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="599" count="1" type="stmt"/>
            <line num="602" count="1" type="stmt"/>
            <line num="603" count="1" type="stmt"/>
            <line num="604" count="4" type="stmt"/>
            <line num="609" count="1" type="stmt"/>
            <line num="610" count="1" type="stmt"/>
            <line num="611" count="1" type="stmt"/>
            <line num="612" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNullOrEmpty() : void" num="619" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="621" count="1" type="stmt"/>
            <line num="623" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="626" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="630" count="1" type="stmt"/>
            <line num="632" count="1" type="stmt"/>
            <line num="633" count="1" type="stmt"/>
            <line num="636" count="1" type="stmt"/>
            <line num="638" count="1" type="stmt"/>
            <line num="640" count="1" type="stmt"/>
            <line num="641" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="644" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="648" count="1" type="stmt"/>
            <line num="650" count="1" type="stmt"/>
            <line num="651" count="1" type="stmt"/>
            <line num="653" count="1" type="stmt"/>
            <line num="655" count="1" type="stmt"/>
            <line num="657" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="657" type="cond"/>
            <line num="658" count="1" type="stmt"/>
            <line num="660" count="1" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="666" count="1" type="stmt"/>
            <line num="668" count="1" type="stmt"/>
            <line num="671" count="1" type="stmt"/>
            <line num="672" count="1" type="stmt"/>
            <line num="675" count="1" type="stmt"/>
            <line num="677" count="1" type="stmt"/>
            <line num="680" count="1" type="stmt"/>
            <line num="682" count="1" type="stmt"/>
            <line num="685" count="1" type="stmt"/>
            <line num="687" count="1" type="stmt"/>
            <line num="691" count="1" type="stmt"/>
            <line num="693" count="1" type="stmt"/>
            <line num="696" count="1" type="stmt"/>
            <line num="697" count="1" type="stmt"/>
            <line num="700" count="1" type="stmt"/>
            <line num="702" count="1" type="stmt"/>
            <line num="704" count="1" type="stmt"/>
            <line num="705" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="709" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="711" count="1" type="stmt"/>
            <line num="713" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testConstructorUsingSameEndpoint() : void" num="717" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="719" count="1" type="stmt"/>
            <line num="721" count="1" type="stmt"/>
            <line num="722" count="1" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testInvalidRange() : void" num="728" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="730" count="1" type="stmt"/>
            <line num="731" count="1" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="737" count="1" type="stmt"/>
            <line num="739" count="1" type="stmt"/>
            <line num="741" count="1" type="stmt"/>
            <line num="742" count="1" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultStep() : void" num="749" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="751" count="1" type="stmt"/>
            <line num="753" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/range/TestIntegerRange.java" name="TestIntegerRange.java">
            <metrics coveredelements="308" coveredconditionals="5" complexity="55" loc="747" coveredmethods="46" methods="46" elements="316" classes="1" ncloc="601" statements="264" conditionals="6" coveredstatements="257"/>
            <class name="TestIntegerRange">
               <metrics coveredelements="308" complexity="55" methods="46" testruns="43" statements="264" coveredconditionals="5" coveredmethods="46" elements="316" testfailures="0" testduration="0.007" conditionals="6" coveredstatements="257" testpasses="43"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="52" count="43" type="method"/>
            <line num="54" count="43" type="stmt"/>
            <line num="55" count="43" type="stmt"/>
            <line num="56" count="43" type="stmt"/>
            <line num="57" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="60" count="43" type="method"/>
            <line num="62" count="43" type="stmt"/>
            <line num="63" count="43" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="66" count="3" type="method"/>
            <line num="68" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGenerateListExample() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="80" type="cond"/>
            <line num="81" count="10" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="89" type="cond"/>
            <line num="90" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStepChecking() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectConstructor() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseStep() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStep() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardRange() : void" num="153" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseRange() : void" num="159" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEdgeCase() : void" num="165" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoundaries() : void" num="171" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscending() : void" num="180" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscending() : void" num="191" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscending() : void" num="202" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscending() : void" num="213" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepAscending() : void" num="224" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="227" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescending() : void" num="235" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescending() : void" num="246" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescending() : void" num="257" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescending() : void" num="268" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="271" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepDescending() : void" num="279" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="282" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAscending() : void" num="290" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="10" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDescending() : void" num="299" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="10" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToCollection() : void" num="308" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformedGenerator() : void" num="316" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Integer&gt;) : Integer" num="322" count="1" type="method"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="10" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Integer&gt;) : Integer" num="335" count="1" type="method"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="10" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyRanges() : void" num="353" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="355" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="370" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscendingContains() : void" num="395" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="398" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="4" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscendingContains() : void" num="416" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="419" count="1" type="stmt"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="3" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscendingContains() : void" num="437" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="440" count="1" type="stmt"/>
            <line num="443" count="1" type="stmt"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="4" type="stmt"/>
            <line num="449" count="1" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="452" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscendingContains() : void" num="458" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="461" count="1" type="stmt"/>
            <line num="464" count="1" type="stmt"/>
            <line num="465" count="1" type="stmt"/>
            <line num="466" count="3" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepAscending() : void" num="479" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="482" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line num="494" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescendingContains() : void" num="501" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="504" count="1" type="stmt"/>
            <line num="507" count="1" type="stmt"/>
            <line num="508" count="1" type="stmt"/>
            <line num="509" count="4" type="stmt"/>
            <line num="513" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line num="516" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescendingContains() : void" num="522" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="525" count="1" type="stmt"/>
            <line num="528" count="1" type="stmt"/>
            <line num="529" count="1" type="stmt"/>
            <line num="530" count="3" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line num="537" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescendingContains() : void" num="543" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="546" count="1" type="stmt"/>
            <line num="549" count="1" type="stmt"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="4" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescendingContains() : void" num="564" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="567" count="1" type="stmt"/>
            <line num="570" count="1" type="stmt"/>
            <line num="571" count="1" type="stmt"/>
            <line num="572" count="3" type="stmt"/>
            <line num="576" count="1" type="stmt"/>
            <line num="577" count="1" type="stmt"/>
            <line num="578" count="1" type="stmt"/>
            <line num="579" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepDescending() : void" num="585" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="588" count="1" type="stmt"/>
            <line num="591" count="1" type="stmt"/>
            <line num="592" count="1" type="stmt"/>
            <line num="593" count="4" type="stmt"/>
            <line num="598" count="1" type="stmt"/>
            <line num="599" count="1" type="stmt"/>
            <line num="600" count="1" type="stmt"/>
            <line num="601" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNullOrEmpty() : void" num="608" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="610" count="1" type="stmt"/>
            <line num="612" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="615" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="619" count="1" type="stmt"/>
            <line num="621" count="1" type="stmt"/>
            <line num="622" count="1" type="stmt"/>
            <line num="625" count="1" type="stmt"/>
            <line num="626" count="1" type="stmt"/>
            <line num="628" count="1" type="stmt"/>
            <line num="629" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="632" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="636" count="1" type="stmt"/>
            <line num="638" count="1" type="stmt"/>
            <line num="639" count="1" type="stmt"/>
            <line num="641" count="1" type="stmt"/>
            <line num="643" count="1" type="stmt"/>
            <line num="645" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="645" type="cond"/>
            <line num="646" count="1" type="stmt"/>
            <line num="648" count="1" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="654" count="1" type="stmt"/>
            <line num="656" count="1" type="stmt"/>
            <line num="659" count="1" type="stmt"/>
            <line num="661" count="1" type="stmt"/>
            <line num="664" count="1" type="stmt"/>
            <line num="666" count="1" type="stmt"/>
            <line num="669" count="1" type="stmt"/>
            <line num="671" count="1" type="stmt"/>
            <line num="674" count="1" type="stmt"/>
            <line num="676" count="1" type="stmt"/>
            <line num="680" count="1" type="stmt"/>
            <line num="682" count="1" type="stmt"/>
            <line num="685" count="1" type="stmt"/>
            <line num="687" count="1" type="stmt"/>
            <line num="690" count="1" type="stmt"/>
            <line num="692" count="1" type="stmt"/>
            <line num="694" count="1" type="stmt"/>
            <line num="695" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="699" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="701" count="1" type="stmt"/>
            <line num="703" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testConstructorUsingSameEndpoint() : void" num="707" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="709" count="1" type="stmt"/>
            <line num="712" count="1" type="stmt"/>
            <line num="713" count="1" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testInvalidRange() : void" num="719" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="721" count="1" type="stmt"/>
            <line num="722" count="1" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="727" count="1" type="stmt"/>
            <line num="729" count="1" type="stmt"/>
            <line num="731" count="1" type="stmt"/>
            <line num="732" count="1" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultStep() : void" num="739" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="741" count="1" type="stmt"/>
            <line num="743" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/range/TestLongRange.java" name="TestLongRange.java">
            <metrics coveredelements="310" coveredconditionals="5" complexity="55" loc="743" coveredmethods="46" methods="46" elements="318" classes="1" ncloc="597" statements="266" conditionals="6" coveredstatements="259"/>
            <class name="TestLongRange">
               <metrics coveredelements="310" complexity="55" methods="46" testruns="43" statements="266" coveredconditionals="5" coveredmethods="46" elements="318" testfailures="0" testduration="0.011000000000000003" conditionals="6" coveredstatements="259" testpasses="43"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="57" count="43" type="method"/>
            <line num="59" count="43" type="stmt"/>
            <line num="60" count="43" type="stmt"/>
            <line num="61" count="43" type="stmt"/>
            <line num="62" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="65" count="43" type="method"/>
            <line num="67" count="43" type="stmt"/>
            <line num="68" count="43" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="71" count="3" type="method"/>
            <line num="74" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGenerateListExample() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="86" type="cond"/>
            <line num="87" count="10" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="95" type="cond"/>
            <line num="96" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStepChecking() : void" num="101" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectConstructor() : void" num="138" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseStep() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStep() : void" num="153" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardRange() : void" num="159" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseRange() : void" num="165" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEdgeCase() : void" num="171" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscending() : void" num="177" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscending() : void" num="188" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscending() : void" num="199" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscending() : void" num="210" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepAscending() : void" num="221" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescending() : void" num="232" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescending() : void" num="243" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="246" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescending() : void" num="254" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="257" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescending() : void" num="265" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStepDescending() : void" num="276" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="279" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAscending() : void" num="287" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="10" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDescending() : void" num="296" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="10" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToCollection() : void" num="305" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformedGenerator() : void" num="313" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Long&gt;) : Long" num="319" count="1" type="method"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="10" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Generator&lt;? extends Long&gt;) : Long" num="332" count="1" type="method"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="10" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyRanges() : void" num="346" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="348" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="370" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoundaries() : void" num="388" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedAscendingContains() : void" num="397" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="400" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="4" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedAscendingContains() : void" num="418" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="421" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="3" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line num="433" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenAscendingContains() : void" num="439" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="442" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="4" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line num="454" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenAscendingContains() : void" num="460" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="463" count="1" type="stmt"/>
            <line num="466" count="1" type="stmt"/>
            <line num="467" count="1" type="stmt"/>
            <line num="468" count="3" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line num="475" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepAscending() : void" num="481" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="484" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line num="494" count="1" type="stmt"/>
            <line num="495" count="1" type="stmt"/>
            <line num="496" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedDescendingContains() : void" num="503" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="506" count="1" type="stmt"/>
            <line num="509" count="1" type="stmt"/>
            <line num="510" count="1" type="stmt"/>
            <line num="511" count="4" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line num="516" count="1" type="stmt"/>
            <line num="517" count="1" type="stmt"/>
            <line num="518" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosedDescendingContains() : void" num="524" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="527" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="531" count="1" type="stmt"/>
            <line num="532" count="3" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line num="537" count="1" type="stmt"/>
            <line num="538" count="1" type="stmt"/>
            <line num="539" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpenDescendingContains() : void" num="545" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="548" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line num="552" count="1" type="stmt"/>
            <line num="553" count="4" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line num="559" count="1" type="stmt"/>
            <line num="560" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenOpenDescendingContains() : void" num="566" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="569" count="1" type="stmt"/>
            <line num="572" count="1" type="stmt"/>
            <line num="573" count="1" type="stmt"/>
            <line num="574" count="3" type="stmt"/>
            <line num="578" count="1" type="stmt"/>
            <line num="579" count="1" type="stmt"/>
            <line num="580" count="1" type="stmt"/>
            <line num="581" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsSingleStepDescending() : void" num="587" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="590" count="1" type="stmt"/>
            <line num="593" count="1" type="stmt"/>
            <line num="594" count="1" type="stmt"/>
            <line num="595" count="4" type="stmt"/>
            <line num="600" count="1" type="stmt"/>
            <line num="601" count="1" type="stmt"/>
            <line num="602" count="1" type="stmt"/>
            <line num="603" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNullOrEmpty() : void" num="610" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="612" count="1" type="stmt"/>
            <line num="614" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="617" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="621" count="1" type="stmt"/>
            <line num="623" count="1" type="stmt"/>
            <line num="624" count="1" type="stmt"/>
            <line num="627" count="1" type="stmt"/>
            <line num="629" count="1" type="stmt"/>
            <line num="631" count="1" type="stmt"/>
            <line num="632" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquals() : void" num="635" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="639" count="1" type="stmt"/>
            <line num="641" count="1" type="stmt"/>
            <line num="642" count="1" type="stmt"/>
            <line num="644" count="1" type="stmt"/>
            <line num="646" count="1" type="stmt"/>
            <line num="648" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="648" type="cond"/>
            <line num="649" count="1" type="stmt"/>
            <line num="651" count="1" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="657" count="1" type="stmt"/>
            <line num="659" count="1" type="stmt"/>
            <line num="662" count="1" type="stmt"/>
            <line num="663" count="1" type="stmt"/>
            <line num="666" count="1" type="stmt"/>
            <line num="668" count="1" type="stmt"/>
            <line num="671" count="1" type="stmt"/>
            <line num="673" count="1" type="stmt"/>
            <line num="676" count="1" type="stmt"/>
            <line num="678" count="1" type="stmt"/>
            <line num="682" count="1" type="stmt"/>
            <line num="684" count="1" type="stmt"/>
            <line num="687" count="1" type="stmt"/>
            <line num="688" count="1" type="stmt"/>
            <line num="691" count="1" type="stmt"/>
            <line num="692" count="1" type="stmt"/>
            <line num="693" count="1" type="stmt"/>
            <line num="694" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="698" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="700" count="1" type="stmt"/>
            <line num="702" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testConstructorUsingSameEndpoint() : void" num="706" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="708" count="1" type="stmt"/>
            <line num="710" count="1" type="stmt"/>
            <line num="711" count="1" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testInvalidRange() : void" num="717" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="719" count="1" type="stmt"/>
            <line num="720" count="1" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="725" count="1" type="stmt"/>
            <line num="726" count="1" type="stmt"/>
            <line num="727" count="1" type="stmt"/>
            <line num="728" count="1" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultStep() : void" num="735" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="737" count="1" type="stmt"/>
            <line num="739" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.generator">
         <metrics coveredelements="85" complexity="21" loc="263" methods="18" classes="3" statements="65" coveredconditionals="6" coveredmethods="16" elements="89" ncloc="170" files="2" conditionals="6" coveredstatements="63"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/TestBaseGenerator.java" name="TestBaseGenerator.java">
            <metrics coveredelements="50" coveredconditionals="6" complexity="10" loc="137" coveredmethods="6" methods="7" elements="52" classes="2" ncloc="87" statements="39" conditionals="6" coveredstatements="38"/>
            <class name="TestBaseGenerator">
               <metrics coveredelements="50" complexity="9" methods="6" testruns="2" statements="38" coveredconditionals="6" coveredmethods="6" elements="50" testfailures="0" testduration="0.001" conditionals="6" coveredstatements="38" testpasses="2"/>
            </class>
            <class name="TestBaseGenerator.Summer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="setUp() : void" num="44" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(Procedure&lt;? super Integer&gt;) : void" num="47" count="5" type="method"/>
            <line num="48" count="5" type="stmt"/>
            <line falsecount="5" truecount="25" num="48" type="cond"/>
            <line num="49" count="25" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="59" type="cond"/>
            <line num="60" count="20" type="stmt"/>
            <line num="61" count="20" type="stmt"/>
            <line num="62" count="20" type="stmt"/>
            <line num="63" count="20" type="stmt"/>
            <line num="64" count="20" type="stmt"/>
            <line num="65" count="20" type="stmt"/>
            <line falsecount="10" truecount="10" num="65" type="cond"/>
            <line num="66" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="71" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleGenerator() : void" num="83" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="87" count="5" type="method"/>
            <line num="88" count="5" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTo() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Number) : void" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/TestFilteredGenerator.java" name="TestFilteredGenerator.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="11" loc="126" coveredmethods="10" methods="11" elements="37" classes="1" ncloc="83" statements="26" conditionals="0" coveredstatements="25"/>
            <class name="TestFilteredGenerator">
               <metrics coveredelements="35" complexity="11" methods="11" testruns="6" statements="26" coveredconditionals="0" coveredmethods="10" elements="37" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="25" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="6" type="method"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="47" count="6" type="method"/>
            <line num="49" count="6" type="stmt"/>
            <line num="50" count="6" type="stmt"/>
            <line num="51" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullPredicate() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullWrappedGenerator() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNullPredicateOrNullWrappedGenerator() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashcode() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenerate() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="105" count="4" type="method"/>
            <line num="106" count="4" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="120" count="9" type="method"/>
            <line num="121" count="9" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.core.collection">
         <metrics coveredelements="480" complexity="130" loc="1095" methods="99" classes="6" statements="340" coveredconditionals="52" coveredmethods="96" elements="491" ncloc="804" files="6" conditionals="52" coveredstatements="332"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/collection/TestFilteredIterable.java" name="TestFilteredIterable.java">
            <metrics coveredelements="138" coveredconditionals="14" complexity="35" loc="280" coveredmethods="28" methods="28" elements="138" classes="1" ncloc="217" statements="96" conditionals="14" coveredstatements="96"/>
            <class name="TestFilteredIterable">
               <metrics coveredelements="138" complexity="35" methods="28" testruns="26" statements="96" coveredconditionals="14" coveredmethods="28" elements="138" testfailures="0" testduration="0.006" conditionals="14" coveredstatements="96" testpasses="26"/>
            </class>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="52" count="41" type="method"/>
            <line num="53" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="makeFunctor() : Object" num="57" count="3" type="method"/>
            <line num="59" count="3" type="stmt"/>
            <line num="60" count="3" type="stmt"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="setUp() : void" num="67" count="26" type="method"/>
            <line num="69" count="26" type="stmt"/>
            <line num="70" count="26" type="stmt"/>
            <line num="71" count="26" type="stmt"/>
            <line falsecount="26" truecount="260" num="71" type="cond"/>
            <line num="72" count="260" type="stmt"/>
            <line num="73" count="260" type="stmt"/>
            <line falsecount="130" truecount="130" num="73" type="cond"/>
            <line num="74" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="79" count="26" type="method"/>
            <line num="81" count="26" type="stmt"/>
            <line num="82" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomePass() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="5" type="stmt"/>
            <line num="96" count="5" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllPass() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="5" type="stmt"/>
            <line num="108" count="5" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllPass2() : void" num="113" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="10" type="stmt"/>
            <line num="118" count="10" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyFilteredIterable() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="132" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonePass() : void" num="137" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextWithoutHasNext() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="146" type="cond"/>
            <line num="147" count="5" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextAfterEndOfList() : void" num="152" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="156" type="cond"/>
            <line num="157" count="5" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextOnEmptyList() : void" num="162" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveBeforeNext() : void" num="167" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAfterNext() : void" num="173" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemoveSome() : void" num="181" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="184" type="cond"/>
            <line num="185" count="5" type="stmt"/>
            <line num="186" count="5" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemoveAll() : void" num="191" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="194" type="cond"/>
            <line num="195" count="10" type="stmt"/>
            <line num="196" count="10" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemoveWithoutHasNext() : void" num="201" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="204" type="cond"/>
            <line num="205" count="10" type="stmt"/>
            <line num="206" count="10" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFilterWithNullIteratorReturnsNull() : void" num="211" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFilterWithFilteredIterableReturnsItself() : void" num="216" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainOneType() : void" num="222" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainOneType2() : void" num="231" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainMultipleTypes() : void" num="240" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultipleLevels() : void" num="249" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultipleLevels2() : void" num="258" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainNullType() : void" num="266" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainNullTypes() : void" num="271" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="273" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainNullPredicate() : void" num="276" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="278" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/collection/TestFilteredIterator.java" name="TestFilteredIterator.java">
            <metrics coveredelements="127" coveredconditionals="22" complexity="36" loc="244" coveredmethods="23" methods="25" elements="131" classes="1" ncloc="192" statements="84" conditionals="22" coveredstatements="82"/>
            <class name="TestFilteredIterator">
               <metrics coveredelements="127" complexity="36" methods="25" testruns="21" statements="84" coveredconditionals="22" coveredmethods="23" elements="131" testfailures="0" testduration="0.003" conditionals="22" coveredstatements="82" testpasses="21"/>
            </class>
            <line complexity="1" visibility="public" signature="makeFunctor() : Object" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="setUp() : void" num="49" count="21" type="method"/>
            <line num="51" count="21" type="stmt"/>
            <line num="52" count="21" type="stmt"/>
            <line num="53" count="21" type="stmt"/>
            <line falsecount="21" truecount="210" num="53" type="cond"/>
            <line num="54" count="210" type="stmt"/>
            <line num="55" count="210" type="stmt"/>
            <line falsecount="105" truecount="105" num="55" type="cond"/>
            <line num="56" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="61" count="21" type="method"/>
            <line num="63" count="21" type="stmt"/>
            <line num="64" count="21" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSomePass() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="74" type="cond"/>
            <line num="75" count="5" type="stmt"/>
            <line num="76" count="5" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAllPass() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="85" type="cond"/>
            <line num="86" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAllPass2() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="96" type="cond"/>
            <line num="97" count="10" type="stmt"/>
            <line num="98" count="10" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonePass() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextWithoutHasNext() : void" num="116" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="120" type="cond"/>
            <line num="121" count="5" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextAfterEndOfList() : void" num="126" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="130" type="cond"/>
            <line num="131" count="5" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextOnEmptyList() : void" num="136" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveBeforeNext() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAfterNext() : void" num="148" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRemoveSome() : void" num="156" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="159" type="cond"/>
            <line num="160" count="5" type="stmt"/>
            <line num="161" count="5" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="163" type="cond"/>
            <line num="164" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemoveAll() : void" num="168" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="171" type="cond"/>
            <line num="172" count="10" type="stmt"/>
            <line num="173" count="10" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemoveWithoutHasNext() : void" num="178" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="181" type="cond"/>
            <line num="182" count="10" type="stmt"/>
            <line num="183" count="10" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFilterWithNullIteratorReturnsNull() : void" num="188" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFilterWithNullPredicateReturnsIdentity() : void" num="193" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNull() : void" num="199" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNull2() : void" num="204" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNull3() : void" num="209" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="214" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Float) : boolean" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="239" count="46" type="method"/>
            <line num="240" count="46" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/collection/TestIsElementOf.java" name="TestIsElementOf.java">
            <metrics coveredelements="43" coveredconditionals="0" complexity="12" loc="129" coveredmethods="9" methods="9" elements="46" classes="1" ncloc="83" statements="37" conditionals="0" coveredstatements="34"/>
            <class name="TestIsElementOf">
               <metrics coveredelements="43" complexity="12" methods="9" testruns="10" statements="37" coveredconditionals="0" coveredmethods="9" elements="46" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="34" testpasses="10"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestCollection() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestArray() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestArrayWithNull() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWrapNull() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWrapNonCollection() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestNull() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTestNonCollection() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="120" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/collection/TestIsEmpty.java" name="TestIsEmpty.java">
            <metrics coveredelements="37" coveredconditionals="0" complexity="9" loc="116" coveredmethods="8" methods="8" elements="38" classes="1" ncloc="77" statements="30" conditionals="0" coveredstatements="29"/>
            <class name="TestIsEmpty">
               <metrics coveredelements="37" complexity="9" methods="8" testruns="9" statements="30" coveredconditionals="0" coveredmethods="8" elements="38" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="29" testpasses="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="44" count="3" type="method"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestNull() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTestNonCollection() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestArray() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestString() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestMap() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="107" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/collection/TestSize.java" name="TestSize.java">
            <metrics coveredelements="39" coveredconditionals="4" complexity="10" loc="112" coveredmethods="7" methods="7" elements="40" classes="1" ncloc="74" statements="29" conditionals="4" coveredstatements="28"/>
            <class name="TestSize">
               <metrics coveredelements="39" complexity="10" methods="7" testruns="8" statements="29" coveredconditionals="4" coveredmethods="7" elements="40" testfailures="0" testduration="0.0" conditionals="4" coveredstatements="28" testpasses="8"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="43" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testEvaluate() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="67" type="cond"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateNull() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEvaluateNonCollection() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateArray() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateString() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/collection/TestTransformedIterator.java" name="TestTransformedIterator.java">
            <metrics coveredelements="96" coveredconditionals="12" complexity="28" loc="214" coveredmethods="21" methods="22" elements="98" classes="1" ncloc="161" statements="64" conditionals="12" coveredstatements="63"/>
            <class name="TestTransformedIterator">
               <metrics coveredelements="96" complexity="28" methods="22" testruns="19" statements="64" coveredconditionals="12" coveredmethods="21" elements="98" testfailures="0" testduration="0.003" conditionals="12" coveredstatements="63" testpasses="19"/>
            </class>
            <line complexity="1" visibility="public" signature="makeFunctor() : Object" num="44" count="3" type="method"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="setUp() : void" num="54" count="19" type="method"/>
            <line num="56" count="19" type="stmt"/>
            <line num="57" count="19" type="stmt"/>
            <line num="58" count="19" type="stmt"/>
            <line falsecount="19" truecount="190" num="58" type="cond"/>
            <line num="59" count="190" type="stmt"/>
            <line num="60" count="190" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="64" count="19" type="method"/>
            <line num="66" count="19" type="stmt"/>
            <line num="67" count="19" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBasicTransform() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="77" type="cond"/>
            <line num="78" count="10" type="stmt"/>
            <line num="79" count="10" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyList() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextWithoutHasNext() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="95" type="cond"/>
            <line num="96" count="10" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextAfterEndOfList() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="105" type="cond"/>
            <line num="106" count="10" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextOnEmptyList() : void" num="111" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveBeforeNext() : void" num="118" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAfterNext() : void" num="124" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemoveAll() : void" num="132" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="135" type="cond"/>
            <line num="136" count="10" type="stmt"/>
            <line num="137" count="10" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemoveWithoutHasNext() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="145" type="cond"/>
            <line num="146" count="10" type="stmt"/>
            <line num="147" count="10" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformWithNullIteratorReturnsNull() : void" num="152" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformWithNullFunctionReturnsIdentity() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformWithNullIteratorAndNullFunctionReturnsNull() : void" num="163" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransform() : void" num="168" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNull() : void" num="174" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNull2() : void" num="179" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorProhibitsNull3() : void" num="184" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="189" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Number) : Double" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Number) : Integer" num="209" count="51" type="method"/>
            <line num="210" count="51" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.aggregator">
         <metrics coveredelements="264" complexity="59" loc="620" methods="39" classes="10" statements="200" coveredconditionals="32" coveredmethods="36" elements="273" ncloc="407" files="4" conditionals="34" coveredstatements="196"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/AbstractListBackedAggregatorTest.java" name="AbstractListBackedAggregatorTest.java">
            <metrics coveredelements="112" coveredconditionals="20" complexity="22" loc="214" coveredmethods="11" methods="11" elements="112" classes="3" ncloc="146" statements="81" conditionals="20" coveredstatements="81"/>
            <class name="AbstractListBackedAggregatorTest">
               <metrics coveredelements="95" complexity="17" methods="7" testruns="8" statements="70" coveredconditionals="18" coveredmethods="7" elements="95" testfailures="0" testduration="0.011" conditionals="18" coveredstatements="70" testpasses="8"/>
            </class>
            <class name="AbstractListBackedAggregatorTest.TestFunction">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="AbstractListBackedAggregatorTest.TestListBackedAggregator">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="9" type="method"/>
            <line num="40" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testListCreated() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAdd() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="62" type="cond"/>
            <line num="63" count="31" type="stmt"/>
            <line num="64" count="31" type="stmt"/>
            <line num="65" count="31" type="stmt"/>
            <line complexity="2" visibility="public" signature="testReset() : void" num="69" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="74" type="cond"/>
            <line num="75" count="31" type="stmt"/>
            <line num="76" count="31" type="stmt"/>
            <line num="77" count="31" type="stmt"/>
            <line complexity="4" visibility="public" signature="testEvaluate() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="91" type="cond"/>
            <line num="92" count="31" type="stmt"/>
            <line num="93" count="31" type="stmt"/>
            <line num="94" count="31" type="stmt"/>
            <line num="95" count="31" type="stmt"/>
            <line num="96" count="31" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="103" type="cond"/>
            <line num="104" count="31" type="stmt"/>
            <line num="105" count="31" type="stmt"/>
            <line num="106" count="31" type="stmt"/>
            <line num="107" count="31" type="stmt"/>
            <line num="109" count="31" type="stmt"/>
            <line num="111" count="31" type="stmt"/>
            <line num="112" count="31" type="stmt"/>
            <line num="113" count="31" type="stmt"/>
            <line num="114" count="31" type="stmt"/>
            <line num="115" count="31" type="stmt"/>
            <line complexity="4" visibility="public" signature="testAddEvaluateReset() : void" num="122" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="130" type="cond"/>
            <line num="131" count="31" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="136" type="cond"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line falsecount="1" truecount="17" num="142" type="cond"/>
            <line num="143" count="17" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGetSize() : void" num="149" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="158" type="cond"/>
            <line num="159" count="31" type="stmt"/>
            <line num="160" count="31" type="stmt"/>
            <line num="161" count="31" type="stmt"/>
            <line falsecount="31" truecount="1424" num="161" type="cond"/>
            <line num="162" count="1424" type="stmt"/>
            <line num="164" count="31" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(List&lt;T&gt;) : T" num="177" count="64" type="method"/>
            <line num="178" count="64" type="stmt"/>
            <line num="179" count="64" type="stmt"/>
            <line falsecount="33" truecount="31" num="179" type="cond"/>
            <line num="180" count="31" type="stmt"/>
            <line num="181" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestListBackedAggregator()" num="191" count="9" type="method"/>
            <line num="192" count="9" type="stmt"/>
            <line num="193" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetUsage() : void" num="200" count="10" type="method"/>
            <line num="201" count="10" type="stmt"/>
            <line num="202" count="10" type="stmt"/>
            <line num="203" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createList() : List&lt;T&gt;" num="206" count="9" type="method"/>
            <line num="210" count="9" type="stmt"/>
            <line num="211" count="9" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/AbstractNoStoreAggregatorTest.java" name="AbstractNoStoreAggregatorTest.java">
            <metrics coveredelements="75" coveredconditionals="10" complexity="16" loc="172" coveredmethods="10" methods="10" elements="75" classes="3" ncloc="112" statements="55" conditionals="10" coveredstatements="55"/>
            <class name="AbstractNoStoreAggregatorTest">
               <metrics coveredelements="56" complexity="11" methods="6" testruns="7" statements="42" coveredconditionals="8" coveredmethods="6" elements="56" testfailures="0" testduration="0.007" conditionals="8" coveredstatements="42" testpasses="7"/>
            </class>
            <class name="AbstractNoStoreAggregatorTest.TestBinaryFunction">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="AbstractNoStoreAggregatorTest.TestNoStoreAggregator">
               <metrics coveredelements="12" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="7" type="method"/>
            <line num="39" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInitialised() : void" num="45" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testAdd() : void" num="55" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="61" type="cond"/>
            <line num="62" count="31" type="stmt"/>
            <line num="63" count="31" type="stmt"/>
            <line num="64" count="31" type="stmt"/>
            <line num="65" count="31" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="72" type="cond"/>
            <line num="73" count="31" type="stmt"/>
            <line num="74" count="31" type="stmt"/>
            <line num="75" count="31" type="stmt"/>
            <line num="77" count="31" type="stmt"/>
            <line num="79" count="31" type="stmt"/>
            <line num="80" count="31" type="stmt"/>
            <line num="81" count="31" type="stmt"/>
            <line num="82" count="31" type="stmt"/>
            <line complexity="2" visibility="public" signature="testReset() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="94" type="cond"/>
            <line num="95" count="31" type="stmt"/>
            <line num="96" count="31" type="stmt"/>
            <line num="97" count="31" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEvaluate() : void" num="104" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="111" type="cond"/>
            <line num="112" count="31" type="stmt"/>
            <line num="113" count="31" type="stmt"/>
            <line num="114" count="31" type="stmt"/>
            <line num="115" count="31" type="stmt"/>
            <line num="116" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDataSize() : void" num="120" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(T,T) : T" num="133" count="62" type="method"/>
            <line num="134" count="62" type="stmt"/>
            <line num="135" count="62" type="stmt"/>
            <line falsecount="31" truecount="31" num="135" type="cond"/>
            <line num="136" count="31" type="stmt"/>
            <line num="137" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestNoStoreAggregator(T)" num="149" count="8" type="method"/>
            <line num="150" count="8" type="stmt"/>
            <line num="151" count="8" type="stmt"/>
            <line num="152" count="8" type="stmt"/>
            <line num="153" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetUsage() : void" num="160" count="9" type="method"/>
            <line num="161" count="9" type="stmt"/>
            <line num="162" count="9" type="stmt"/>
            <line num="163" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initialValue() : T" num="166" count="47" type="method"/>
            <line num="168" count="47" type="stmt"/>
            <line num="169" count="47" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/AbstractTimedAggregatorTest.java" name="AbstractTimedAggregatorTest.java">
            <metrics coveredelements="58" coveredconditionals="0" complexity="15" loc="159" coveredmethods="12" methods="15" elements="63" classes="2" ncloc="108" statements="48" conditionals="0" coveredstatements="46"/>
            <class name="AbstractTimedAggregatorTest">
               <metrics coveredelements="48" complexity="8" methods="8" testruns="6" statements="41" coveredconditionals="0" coveredmethods="7" elements="49" testfailures="0" testduration="3.0649999999999995" conditionals="0" coveredstatements="41" testpasses="6"/>
            </class>
            <class name="AbstractTimedAggregatorTest.SimpleStoreTimedAggregator">
               <metrics coveredelements="10" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="40" count="4" type="method"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateNoTimer() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="standardTimerTesting(SimpleStoreTimedAggregator,long) : void" num="59" count="3" type="method"/>
            <line num="60" count="3" type="stmt"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="onTimer(AbstractTimedAggregator&lt;Integer&gt;,Integer) : void" num="62" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line num="71" count="3" type="stmt"/>
            <line num="72" count="3" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="onTimer(AbstractTimedAggregator&lt;Integer&gt;,Integer) : void" num="77" count="0" type="method"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="87" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateIntervalParam() : void" num="91" testsuccess="true" count="1" testduration="1.023" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateNotSharedTimer() : void" num="100" testsuccess="true" count="1" testduration="1.021" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateSharedTimer() : void" num="109" testsuccess="true" count="1" testduration="1.021" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleStoreTimedAggregator()" num="127" count="4" type="method"/>
            <line num="128" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleStoreTimedAggregator(long)" num="131" count="1" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleStoreTimedAggregator(long,boolean)" num="135" count="2" type="method"/>
            <line num="136" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="doAdd(Integer) : void" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="doEvaluate() : Integer" num="144" count="6" type="method"/>
            <line num="146" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="retrieveDataSize() : int" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="doReset() : void" num="154" count="6" type="method"/>
            <line num="156" count="6" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/aggregator/ArrayListBackedAggregatorTest.java" name="ArrayListBackedAggregatorTest.java">
            <metrics coveredelements="19" coveredconditionals="2" complexity="6" loc="75" coveredmethods="3" methods="3" elements="23" classes="2" ncloc="41" statements="16" conditionals="4" coveredstatements="14"/>
            <class name="ArrayListBackedAggregatorTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="3" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="10" testpasses="3"/>
            </class>
            <class name="ArrayListBackedAggregatorTest.SelectFirstFunction">
               <metrics coveredelements="7" coveredconditionals="2" complexity="4" coveredmethods="1" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateList() : void" num="41" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluate(List&lt;T&gt;) : T" num="66" count="45" type="method"/>
            <line num="67" count="45" type="stmt"/>
            <line num="68" count="45" type="stmt"/>
            <line falsecount="45" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="45" type="stmt"/>
            <line falsecount="0" truecount="45" num="70" type="cond"/>
            <line num="71" count="45" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.core">
         <metrics coveredelements="413" complexity="86" loc="1229" methods="81" classes="14" statements="340" coveredconditionals="0" coveredmethods="78" elements="421" ncloc="734" files="14" conditionals="0" coveredstatements="335"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestConstant.java" name="TestConstant.java">
            <metrics coveredelements="52" coveredconditionals="0" complexity="7" loc="118" coveredmethods="7" methods="7" elements="52" classes="1" ncloc="75" statements="45" conditionals="0" coveredstatements="45"/>
            <class name="TestConstant">
               <metrics coveredelements="52" complexity="7" methods="7" testruns="8" statements="45" coveredconditionals="0" coveredmethods="7" elements="52" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="45" testpasses="8"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluateConstantNull() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstantTrue() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstantFalse() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstants() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestIdentity.java" name="TestIdentity.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="7" loc="88" coveredmethods="5" methods="5" elements="27" classes="1" ncloc="53" statements="22" conditionals="0" coveredstatements="20"/>
            <class name="TestIdentity">
               <metrics coveredelements="25" complexity="7" methods="5" testruns="6" statements="22" coveredconditionals="0" coveredmethods="5" elements="27" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="20" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTest() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestIsEqual.java" name="TestIsEqual.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="5" loc="86" coveredmethods="5" methods="5" elements="29" classes="1" ncloc="51" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="TestIsEqual">
               <metrics coveredelements="29" complexity="5" methods="5" testruns="6" statements="24" coveredconditionals="0" coveredmethods="5" elements="29" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="24" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToPredicate() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestIsInstance.java" name="TestIsInstance.java">
            <metrics coveredelements="30" coveredconditionals="0" complexity="7" loc="91" coveredmethods="6" methods="6" elements="31" classes="1" ncloc="56" statements="25" conditionals="0" coveredstatements="24"/>
            <class name="TestIsInstance">
               <metrics coveredelements="30" complexity="7" methods="6" testruns="7" statements="25" coveredconditionals="0" coveredmethods="6" elements="31" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="24" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoundTest() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInstanceOfNull() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoundEquals() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestIsNotEqual.java" name="TestIsNotEqual.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="5" loc="81" coveredmethods="5" methods="5" elements="27" classes="1" ncloc="47" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="TestIsNotEqual">
               <metrics coveredelements="27" complexity="5" methods="5" testruns="6" statements="22" coveredconditionals="0" coveredmethods="5" elements="27" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="22" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToPredicate() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestIsNotNull.java" name="TestIsNotNull.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="4" loc="63" coveredmethods="4" methods="4" elements="15" classes="1" ncloc="31" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestIsNotNull">
               <metrics coveredelements="15" complexity="4" methods="4" testruns="5" statements="11" coveredconditionals="0" coveredmethods="4" elements="15" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="11" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestIsNotSame.java" name="TestIsNotSame.java">
            <metrics coveredelements="30" coveredconditionals="0" complexity="5" loc="87" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="52" statements="25" conditionals="0" coveredstatements="25"/>
            <class name="TestIsNotSame">
               <metrics coveredelements="30" complexity="5" methods="5" testruns="6" statements="25" coveredconditionals="0" coveredmethods="5" elements="30" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="25" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAsPredicate() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestIsNull.java" name="TestIsNull.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="72" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="39" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestIsNull">
               <metrics coveredelements="20" complexity="5" methods="5" testruns="6" statements="15" coveredconditionals="0" coveredmethods="5" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="15" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAsBinary() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestIsSame.java" name="TestIsSame.java">
            <metrics coveredelements="30" coveredconditionals="0" complexity="5" loc="87" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="52" statements="25" conditionals="0" coveredstatements="25"/>
            <class name="TestIsSame">
               <metrics coveredelements="30" complexity="5" methods="5" testruns="6" statements="25" coveredconditionals="0" coveredmethods="5" elements="30" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="25" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAsPredicate() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestLeftIdentity.java" name="TestLeftIdentity.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="6" loc="87" coveredmethods="6" methods="6" elements="29" classes="1" ncloc="53" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="TestLeftIdentity">
               <metrics coveredelements="29" complexity="6" methods="6" testruns="7" statements="23" coveredconditionals="0" coveredmethods="6" elements="29" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="23" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJavabeanConstructor() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestLimit.java" name="TestLimit.java">
            <metrics coveredelements="38" coveredconditionals="0" complexity="9" loc="107" coveredmethods="8" methods="8" elements="39" classes="1" ncloc="68" statements="31" conditionals="0" coveredstatements="30"/>
            <class name="TestLimit">
               <metrics coveredelements="38" complexity="9" methods="8" testruns="9" statements="31" coveredconditionals="0" coveredmethods="8" elements="39" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="30" testpasses="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZero() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadArgs() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestNullary() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestUnary() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestBinary() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLimits() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestNoOp.java" name="TestNoOp.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="7" loc="76" coveredmethods="4" methods="7" elements="29" classes="1" ncloc="44" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="TestNoOp">
               <metrics coveredelements="26" complexity="7" methods="7" testruns="5" statements="22" coveredconditionals="0" coveredmethods="4" elements="29" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="22" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="62" count="0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object) : void" num="63" count="0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object,Object) : void" num="64" count="0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestOffset.java" name="TestOffset.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="8" loc="99" coveredmethods="7" methods="7" elements="34" classes="1" ncloc="60" statements="27" conditionals="0" coveredstatements="26"/>
            <class name="TestOffset">
               <metrics coveredelements="33" complexity="8" methods="7" testruns="8" statements="27" coveredconditionals="0" coveredmethods="7" elements="34" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="26" testpasses="8"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZero() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadArgs() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestNullary() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestUnary() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestBinary() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/core/TestRightIdentity.java" name="TestRightIdentity.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="6" loc="87" coveredmethods="6" methods="6" elements="29" classes="1" ncloc="53" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="TestRightIdentity">
               <metrics coveredelements="29" complexity="6" methods="6" testruns="7" statements="23" coveredconditionals="0" coveredmethods="6" elements="29" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="23" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJavabeanConstructor() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluate() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTest() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstant() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.generator.util">
         <metrics coveredelements="67" complexity="14" loc="140" methods="8" classes="1" statements="48" coveredconditionals="11" coveredmethods="8" elements="68" ncloc="97" files="1" conditionals="12" coveredstatements="48"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/generator/util/TestEachElement.java" name="TestEachElement.java">
            <metrics coveredelements="67" coveredconditionals="11" complexity="14" loc="140" coveredmethods="8" methods="8" elements="68" classes="1" ncloc="97" statements="48" conditionals="12" coveredstatements="48"/>
            <class name="TestEachElement">
               <metrics coveredelements="67" complexity="14" methods="8" testruns="8" statements="48" coveredconditionals="11" coveredmethods="8" elements="68" testfailures="0" testduration="0.003" conditionals="12" coveredstatements="48" testpasses="8"/>
            </class>
            <line complexity="1" visibility="protected" signature="makeFunctor() : Object" num="47" count="3" type="method"/>
            <line num="49" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="55" count="8" type="method"/>
            <line num="57" count="8" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="59" count="8" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line num="61" count="8" type="stmt"/>
            <line num="62" count="8" type="stmt"/>
            <line num="64" count="8" type="stmt"/>
            <line num="65" count="8" type="stmt"/>
            <line num="66" count="8" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line num="68" count="8" type="stmt"/>
            <line num="69" count="8" type="stmt"/>
            <line num="71" count="8" type="stmt"/>
            <line num="72" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
            <line num="76" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFromNull() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithList() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="testWithMap() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="102" type="cond"/>
            <line num="103" count="5" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="104" type="cond"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="106" type="cond"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="108" type="cond"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="110" type="cond"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="112" type="cond"/>
            <line num="113" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithArray() : void" num="120" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithStop() : void" num="126" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithIterator() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.example.kata.one">
         <metrics coveredelements="4" complexity="43" loc="628" methods="41" classes="11" statements="132" coveredconditionals="0" coveredmethods="2" elements="177" ncloc="305" files="10" conditionals="4" coveredstatements="2"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/Add.java" name="Add.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="39" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Add">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Number,Number) : Number" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Add" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="to(int) : Function&lt;Number, Number&gt;" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/ArithmeticOperation.java" name="ArithmeticOperation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArithmeticOperation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/Divide.java" name="Divide.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="40" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Divide">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Number,Number) : Number" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Divide" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="by(int) : Function&lt;Number, Number&gt;" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/Mod.java" name="Mod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="39" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Mod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Number,Number) : Number" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Mod" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="by(int) : Function&lt;Number, Number&gt;" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/Money.java" name="Money.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="52" coveredmethods="0" methods="5" elements="15" classes="1" ncloc="27" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="Money">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="15" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Money(int)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAsCents() : int" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/Multiply.java" name="Multiply.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="40" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Multiply">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Number,Number) : Number" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Multiply" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="by(int) : Function&lt;Number, Number&gt;" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/Product.java" name="Product.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="67" coveredmethods="0" methods="9" elements="20" classes="1" ncloc="36" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="Product">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Product(String,String,int)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Product(String,String,Function&lt;? super Integer, Money&gt;)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPriceFunction() : Function&lt;? super Integer, Money&gt;" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSku() : String" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setName(String) : void" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPriceFunction(Function&lt;? super Integer, Money&gt;) : void" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSku(String) : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPrice(int) : Money" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/Subtract.java" name="Subtract.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="39" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="Subtract">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Number,Number) : Number" num="26" count="96" type="method"/>
            <line num="27" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Subtract" num="30" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="from(int) : Function&lt;Number, Number&gt;" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/SupermarketPricingExample.java" name="SupermarketPricingExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="250" coveredmethods="0" methods="9" elements="106" classes="2" ncloc="148" statements="95" conditionals="2" coveredstatements="0"/>
            <class name="SupermarketPricingExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="91" statements="84" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SupermarketPricingExample.BuyNGetMFree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="15" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testConstantPricePerUnit() : void" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFourForADollar_A() : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFourForADollar_B() : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuyTwoGetOneFree_1() : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuyNGetMFree(int,int,int)" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Number) : Number" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuyTwoGetOneFree_2() : void" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuyThreeGetTwoFree() : void" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuyTwoGetFiveFree() : void" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/one/ToMoney.java" name="ToMoney.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="40" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ToMoney">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Number) : Money" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : ToMoney" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from(Function&lt;? super X, ? extends Number&gt;) : Function&lt;X, Money&gt;" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.example.lines">
         <metrics coveredelements="74" complexity="36" loc="437" methods="30" classes="9" statements="55" coveredconditionals="3" coveredmethods="26" elements="89" ncloc="221" files="8" conditionals="4" coveredstatements="45"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/lines/Contains.java" name="Contains.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="35" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="Contains">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="Contains(String)" num="26" count="4" type="method"/>
            <line num="27" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T) : boolean" num="30" count="48" type="method"/>
            <line num="31" count="48" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/lines/Count.java" name="Count.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="34" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="Count">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="run() : void" num="25" count="44" type="method"/>
            <line num="26" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : int" num="29" count="4" type="method"/>
            <line num="30" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/lines/Lines.java" name="Lines.java">
            <metrics coveredelements="17" coveredconditionals="3" complexity="13" loc="92" coveredmethods="4" methods="7" elements="30" classes="2" ncloc="60" statements="19" conditionals="4" coveredstatements="10"/>
            <class name="Lines">
               <metrics coveredelements="17" coveredconditionals="3" complexity="11" coveredmethods="4" methods="5" elements="25" statements="16" conditionals="4" coveredstatements="10"/>
            </class>
            <class name="Lines.TunneledException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="from(Reader) : Lines" num="32" count="16" type="method"/>
            <line num="33" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="from(File) : Lines" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="Lines(Reader)" num="40" count="16" type="method"/>
            <line num="41" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="16" type="stmt"/>
            <line complexity="4" visibility="public" signature="run(Procedure&lt;? super String&gt;) : void" num="48" count="16" type="method"/>
            <line num="49" count="16" type="stmt"/>
            <line num="50" count="16" type="stmt"/>
            <line falsecount="16" truecount="319" num="50" type="cond"/>
            <line num="51" count="319" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="16" type="stmt"/>
            <line complexity="3" visibility="public" signature="stop() : void" num="62" count="16" type="method"/>
            <line num="64" count="16" type="stmt"/>
            <line num="65" count="16" type="stmt"/>
            <line num="66" count="16" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="TunneledException(Exception)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCause() : Throwable" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/lines/StartsWith.java" name="StartsWith.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="35" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="StartsWith">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="StartsWith(String)" num="26" count="4" type="method"/>
            <line num="27" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T) : boolean" num="30" count="64" type="method"/>
            <line num="31" count="64" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/lines/Sum.java" name="Sum.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="34" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="Sum">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Number,Number) : Integer" num="25" count="78" type="method"/>
            <line num="26" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Sum" num="29" count="6" type="method"/>
            <line num="30" count="6" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/lines/TestAll.java" name="TestAll.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="38" coveredmethods="1" methods="2" elements="6" classes="1" ncloc="14" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="TestAll">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="TestAll(String)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="31" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/lines/TestLines.java" name="TestLines.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="11" loc="133" coveredmethods="11" methods="11" elements="33" classes="1" ncloc="91" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="TestLines">
               <metrics coveredelements="33" complexity="11" methods="11" testruns="14" statements="22" coveredconditionals="0" coveredmethods="11" elements="33" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="22" testpasses="14"/>
            </class>
            <line complexity="1" visibility="public" signature="TestLines(String)" num="41" count="14" type="method"/>
            <line num="42" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="45" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="51" count="14" type="method"/>
            <line num="53" count="14" type="stmt"/>
            <line num="54" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="57" count="14" type="method"/>
            <line num="59" count="14" type="stmt"/>
            <line num="60" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountCharacters() : void" num="63" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWords() : void" num="70" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountLines() : void" num="77" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWordsExcludingComments() : void" num="86" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountCommentLines() : void" num="94" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindMatchingLines() : void" num="102" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindMatchingFromTail() : void" num="108" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/lines/WordCount.java" name="WordCount.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="36" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="WordCount">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(String) : Integer" num="27" count="52" type="method"/>
            <line num="28" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : WordCount" num="31" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor">
         <metrics coveredelements="105" complexity="26" loc="290" methods="21" classes="5" statements="76" coveredconditionals="10" coveredmethods="20" elements="107" ncloc="196" files="2" conditionals="10" coveredstatements="75"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/BaseFunctorTest.java" name="BaseFunctorTest.java">
            <metrics coveredelements="29" coveredconditionals="2" complexity="6" loc="86" coveredmethods="5" methods="5" elements="29" classes="1" ncloc="45" statements="22" conditionals="2" coveredstatements="22"/>
            <class name="BaseFunctorTest">
               <metrics coveredelements="29" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="29" statements="22" conditionals="2" coveredstatements="22"/>
            </class>
            <line complexity="2" visibility="public" signature="testObjectEquals() : void" num="38" count="142" type="method"/>
            <line num="40" count="142" type="stmt"/>
            <line num="41" count="142" type="stmt"/>
            <line num="42" count="142" type="stmt"/>
            <line num="43" count="142" type="stmt"/>
            <line num="45" count="142" type="stmt"/>
            <line num="46" count="142" type="stmt"/>
            <line falsecount="24" truecount="118" num="46" type="cond"/>
            <line num="47" count="118" type="stmt"/>
            <line num="48" count="118" type="stmt"/>
            <line num="50" count="24" type="stmt"/>
            <line num="53" count="142" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToStringIsOverridden() : void" num="56" count="142" type="method"/>
            <line num="58" count="142" type="stmt"/>
            <line num="59" count="142" type="stmt"/>
            <line num="60" count="142" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertObjectsAreEqual(Object,Object) : void" num="67" count="232" type="method"/>
            <line num="68" count="232" type="stmt"/>
            <line num="69" count="232" type="stmt"/>
            <line num="70" count="232" type="stmt"/>
            <line num="71" count="232" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertObjectsAreNotEqual(Object,Object) : void" num="74" count="341" type="method"/>
            <line num="75" count="341" type="stmt"/>
            <line num="76" count="341" type="stmt"/>
            <line num="77" count="341" type="stmt"/>
            <line num="78" count="341" type="stmt"/>
            <line complexity="1" visibility="private" signature="objectToString(Object) : String" num="83" count="142" type="method"/>
            <line num="84" count="142" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/TestAlgorithms.java" name="TestAlgorithms.java">
            <metrics coveredelements="76" coveredconditionals="8" complexity="20" loc="204" coveredmethods="15" methods="16" elements="78" classes="4" ncloc="151" statements="54" conditionals="8" coveredstatements="53"/>
            <class name="TestAlgorithms">
               <metrics coveredelements="72" complexity="17" methods="13" testruns="9" statements="51" coveredconditionals="8" coveredmethods="13" elements="72" testfailures="0" testduration="0.045" conditionals="8" coveredstatements="51" testpasses="9"/>
            </class>
            <class name="TestAlgorithms.Counter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestAlgorithms.Summer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestAlgorithms.Doubler">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="3" visibility="public" signature="setUp() : void" num="50" count="9" type="method"/>
            <line num="52" count="9" type="stmt"/>
            <line num="53" count="9" type="stmt"/>
            <line num="54" count="9" type="stmt"/>
            <line num="55" count="9" type="stmt"/>
            <line num="56" count="9" type="stmt"/>
            <line num="57" count="9" type="stmt"/>
            <line falsecount="9" truecount="90" num="57" type="cond"/>
            <line num="58" count="90" type="stmt"/>
            <line num="59" count="90" type="stmt"/>
            <line num="60" count="90" type="stmt"/>
            <line num="61" count="90" type="stmt"/>
            <line num="62" count="90" type="stmt"/>
            <line num="63" count="90" type="stmt"/>
            <line falsecount="45" truecount="45" num="63" type="cond"/>
            <line num="64" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="69" count="9" type="method"/>
            <line num="71" count="9" type="stmt"/>
            <line num="72" count="9" type="stmt"/>
            <line num="73" count="9" type="stmt"/>
            <line num="74" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRun() : void" num="80" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelect1() : void" num="87" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelect2() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReject1() : void" num="103" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReject2() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testApplyToGenerator() : void" num="120" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testApply() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testApply2() : void" num="139" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="145" type="cond"/>
            <line num="146" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testApply3() : void" num="150" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="157" type="cond"/>
            <line num="158" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="170" count="20" type="method"/>
            <line num="171" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Integer) : boolean" num="175" count="20" type="method"/>
            <line num="176" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Integer) : void" num="192" count="14" type="method"/>
            <line num="193" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Integer) : Integer" num="200" count="14" type="method"/>
            <line num="201" count="14" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.example.map">
         <metrics coveredelements="226" complexity="82" loc="738" methods="66" classes="10" statements="181" coveredconditionals="14" coveredmethods="54" elements="261" ncloc="462" files="8" conditionals="14" coveredstatements="158"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/map/FixedSizeMap.java" name="FixedSizeMap.java">
            <metrics coveredelements="22" coveredconditionals="4" complexity="5" loc="64" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="39" statements="15" conditionals="4" coveredstatements="15"/>
            <class name="FixedSizeMap">
               <metrics coveredelements="22" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="22" statements="15" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="FixedSizeMap(Map&lt;K, V&gt;)" num="34" count="12" type="method"/>
            <line num="35" count="12" type="stmt"/>
            <line num="36" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Map&lt;K,V&gt;,Object[]) : V" num="37" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="40" type="cond"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="48" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(Map&lt;K,V&gt;,Map&lt;K,V&gt;) : void" num="49" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="53" type="cond"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="61" count="12" type="stmt"/>
            <line num="62" count="12" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/map/FunctoredMap.java" name="FunctoredMap.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="34" loc="213" coveredmethods="21" methods="32" elements="73" classes="3" ncloc="146" statements="41" conditionals="0" coveredstatements="25"/>
            <class name="FunctoredMap">
               <metrics coveredelements="33" coveredconditionals="0" complexity="26" coveredmethods="15" methods="26" elements="58" statements="32" conditionals="0" coveredstatements="18"/>
            </class>
            <class name="FunctoredMap.ContainsKey">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="FunctoredMap.Throw">
               <metrics coveredelements="9" coveredconditionals="0" complexity="6" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="FunctoredMap(Map&lt;? super K, ? super V&gt;)" num="35" count="24" type="method"/>
            <line num="36" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : Collection&lt;V&gt;" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keySet() : Set&lt;K&gt;" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Object) : V" num="57" count="62" type="method"/>
            <line num="58" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="61" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="65" count="4" type="method"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(Object,Object) : Object" num="69" count="10" type="method"/>
            <line num="70" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="putAll(Map&lt;? extends K, ? extends V&gt;) : void" num="73" count="6" type="method"/>
            <line num="74" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="entrySet() : Set&lt;Map.Entry&lt;K, V&gt;&gt;" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsKey(Object) : boolean" num="81" count="42" type="method"/>
            <line num="82" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : V" num="89" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsValue(Object) : boolean" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setOnClear(Procedure&lt;Map&lt;K, V&gt;&gt;) : void" num="104" count="12" type="method"/>
            <line num="105" count="12" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setOnPut(BinaryFunction&lt;Map&lt;K, V&gt;, Object[], V&gt;) : void" num="108" count="20" type="method"/>
            <line num="109" count="20" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setOnGet(BinaryFunction&lt;Map&lt;K, V&gt;, K, V&gt;) : void" num="112" count="4" type="method"/>
            <line num="113" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setOnPutAll(BinaryProcedure&lt;Map&lt;K, V&gt;, Map&lt;K, V&gt;&gt;) : void" num="116" count="20" type="method"/>
            <line num="117" count="20" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setOnRemove(BinaryFunction&lt;Map&lt;K, V&gt;, K, V&gt;) : void" num="120" count="12" type="method"/>
            <line num="121" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Map&lt;K, V&gt;,Object[]) : V" num="127" count="2" type="method"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Map&lt;K, V&gt;,K) : V" num="138" count="18" type="method"/>
            <line num="139" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Map&lt;K, V&gt;,Map&lt;K, V&gt;) : void" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Map&lt;K, V&gt;,K) : V" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Map&lt;K, V&gt;) : void" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ContainsKey(Map&lt;?, ?&gt;)" num="177" count="4" type="method"/>
            <line num="178" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Object) : boolean" num="181" count="10" type="method"/>
            <line num="182" count="10" type="stmt"/>
            <line complexity="1" visibility="package" signature="Throw(RuntimeException)" num="189" count="32" type="method"/>
            <line num="190" count="32" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="193" count="8" type="method"/>
            <line num="194" count="8" type="stmt"/>
            <line num="195" count="8" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Map&lt;K, V&gt;) : void" num="203" count="2" type="method"/>
            <line num="204" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(K,V) : void" num="207" count="6" type="method"/>
            <line num="208" count="6" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/map/LazyMap.java" name="LazyMap.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="3" loc="42" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="20" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="LazyMap">
               <metrics coveredelements="11" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="LazyMap(Map&lt;K, V&gt;,Function&lt;K, V&gt;)" num="28" count="4" type="method"/>
            <line num="29" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Map&lt;K, V&gt;,K) : V" num="31" count="44" type="method"/>
            <line num="32" count="44" type="stmt"/>
            <line falsecount="22" truecount="22" num="32" type="cond"/>
            <line num="33" count="22" type="stmt"/>
            <line num="35" count="22" type="stmt"/>
            <line num="36" count="22" type="stmt"/>
            <line num="37" count="22" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/map/PredicatedMap.java" name="PredicatedMap.java">
            <metrics coveredelements="15" coveredconditionals="4" complexity="6" loc="58" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="35" statements="8" conditionals="4" coveredstatements="8"/>
            <class name="PredicatedMap">
               <metrics coveredelements="15" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="15" statements="8" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="PredicatedMap(Map&lt;K, V&gt;,Predicate&lt;K&gt;,Predicate&lt;V&gt;)" num="33" count="8" type="method"/>
            <line num="34" count="8" type="stmt"/>
            <line num="35" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Map&lt;K, V&gt;,Object[]) : boolean" num="37" count="6" type="method"/>
            <line num="39" count="6" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="run(Map&lt;K, V&gt;,Map&lt;K, V&gt;) : void" num="47" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="2" truecount="8" num="48" type="cond"/>
            <line num="49" count="8" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="50" type="cond"/>
            <line num="52" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/map/TestAll.java" name="TestAll.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="40" coveredmethods="1" methods="2" elements="8" classes="1" ncloc="16" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="TestAll">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="TestAll(String)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="31" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/map/TestFixedSizeMap.java" name="TestFixedSizeMap.java">
            <metrics coveredelements="48" coveredconditionals="0" complexity="14" loc="127" coveredmethods="10" methods="10" elements="52" classes="1" ncloc="82" statements="42" conditionals="0" coveredstatements="38"/>
            <class name="TestFixedSizeMap">
               <metrics coveredelements="48" complexity="14" methods="10" testruns="12" statements="42" coveredconditionals="0" coveredmethods="10" elements="52" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="38" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="TestFixedSizeMap(String)" num="31" count="12" type="method"/>
            <line num="32" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="35" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="42" count="12" type="method"/>
            <line num="44" count="12" type="stmt"/>
            <line num="45" count="12" type="stmt"/>
            <line num="46" count="12" type="stmt"/>
            <line num="47" count="12" type="stmt"/>
            <line num="48" count="12" type="stmt"/>
            <line num="49" count="12" type="stmt"/>
            <line num="50" count="12" type="stmt"/>
            <line num="52" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="55" count="12" type="method"/>
            <line num="57" count="12" type="stmt"/>
            <line num="58" count="12" type="stmt"/>
            <line num="59" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCantPutNewPair() : void" num="64" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCantPutNewPairViaPutAll() : void" num="73" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCantClear() : void" num="90" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCantRemove() : void" num="99" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCanAssociateNewValueWithOldKey() : void" num="108" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCanAssociateNewValueWithOldKeyViaPutAll() : void" num="115" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/map/TestLazyMap.java" name="TestLazyMap.java">
            <metrics coveredelements="49" coveredconditionals="4" complexity="8" loc="102" coveredmethods="6" methods="6" elements="49" classes="1" ncloc="68" statements="39" conditionals="4" coveredstatements="39"/>
            <class name="TestLazyMap">
               <metrics coveredelements="49" complexity="8" methods="6" testruns="4" statements="39" coveredconditionals="4" coveredmethods="6" elements="49" testfailures="0" testduration="0.002" conditionals="4" coveredstatements="39" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="TestLazyMap(String)" num="34" count="4" type="method"/>
            <line num="35" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="46" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="60" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="test() : void" num="70" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="71" type="cond"/>
            <line num="72" count="10" type="stmt"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="10" type="stmt"/>
            <line num="76" count="10" type="stmt"/>
            <line num="77" count="10" type="stmt"/>
            <line num="78" count="10" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="83" type="cond"/>
            <line num="84" count="10" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
            <line num="86" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line num="88" count="10" type="stmt"/>
            <line num="89" count="10" type="stmt"/>
            <line num="90" count="10" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseMapOverrides() : void" num="96" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/map/TestPredicatedMap.java" name="TestPredicatedMap.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="10" loc="92" coveredmethods="8" methods="8" elements="31" classes="1" ncloc="56" statements="23" conditionals="0" coveredstatements="21"/>
            <class name="TestPredicatedMap">
               <metrics coveredelements="29" complexity="10" methods="8" testruns="8" statements="23" coveredconditionals="0" coveredmethods="8" elements="31" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="21" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="TestPredicatedMap(String)" num="34" count="8" type="method"/>
            <line num="35" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="44" count="8" type="method"/>
            <line num="46" count="8" type="stmt"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="51" count="8" type="method"/>
            <line num="53" count="8" type="stmt"/>
            <line num="54" count="8" type="stmt"/>
            <line num="55" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCanPutMatchingPair() : void" num="60" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCantPutInvalidValue() : void" num="63" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCantPutInvalidKey() : void" num="72" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOnlyValidPairsAreAddedInPutAll() : void" num="81" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.example.kata.two">
         <metrics coveredelements="244" complexity="76" loc="753" methods="45" classes="6" statements="139" coveredconditionals="61" coveredmethods="45" elements="246" ncloc="348" files="4" conditionals="62" coveredstatements="138"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/two/BaseBinaryChop.java" name="BaseBinaryChop.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="6" loc="54" coveredmethods="5" methods="5" elements="15" classes="1" ncloc="25" statements="8" conditionals="2" coveredstatements="8"/>
            <class name="BaseBinaryChop">
               <metrics coveredelements="15" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="15" statements="8" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="find(int,int[]) : int" num="28" count="152" type="method"/>
            <line num="29" count="152" type="stmt"/>
            <line num="30" count="152" type="stmt"/>
            <line falsecount="152" truecount="472" num="30" type="cond"/>
            <line num="31" count="472" type="stmt"/>
            <line num="33" count="152" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Integer,Integer[]) : int" num="36" count="152" type="method"/>
            <line num="37" count="152" type="stmt"/>
            <line complexity="1" visibility="protected" signature="compare(List&lt;Integer&gt;,int,Integer) : int" num="40" count="812" type="method"/>
            <line num="41" count="812" type="stmt"/>
            <line complexity="1" visibility="protected" signature="greaterThan(List&lt;Integer&gt;,int,Integer) : boolean" num="44" count="658" type="method"/>
            <line num="45" count="658" type="stmt"/>
            <line complexity="1" visibility="protected" signature="equals(List&lt;Integer&gt;,int,Integer) : boolean" num="48" count="154" type="method"/>
            <line num="49" count="154" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/two/BinaryChop.java" name="BinaryChop.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinaryChop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/two/EiffelStyleLoop.java" name="EiffelStyleLoop.java">
            <metrics coveredelements="38" coveredconditionals="5" complexity="12" loc="118" coveredmethods="9" methods="9" elements="40" classes="1" ncloc="61" statements="25" conditionals="6" coveredstatements="24"/>
            <class name="EiffelStyleLoop">
               <metrics coveredelements="38" coveredconditionals="5" complexity="12" coveredmethods="9" methods="9" elements="40" statements="25" conditionals="6" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="from(NullaryProcedure) : EiffelStyleLoop" num="45" count="23" type="method"/>
            <line num="46" count="23" type="stmt"/>
            <line num="47" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="invariant(NullaryPredicate) : EiffelStyleLoop" num="50" count="23" type="method"/>
            <line num="51" count="23" type="stmt"/>
            <line num="52" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="variant(NullaryPredicate) : EiffelStyleLoop" num="55" count="23" type="method"/>
            <line num="56" count="23" type="stmt"/>
            <line num="57" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="variant(NullaryFunction&lt;Object&gt;) : EiffelStyleLoop" num="60" count="23" type="method"/>
            <line num="62" count="23" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : boolean" num="63" count="94" type="method"/>
            <line num="64" count="94" type="stmt"/>
            <line num="65" count="94" type="stmt"/>
            <line num="66" count="94" type="stmt"/>
            <line falsecount="20" truecount="74" num="66" type="cond"/>
            <line num="67" count="74" type="stmt"/>
            <line num="69" count="94" type="stmt"/>
            <line num="70" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="until(NullaryPredicate) : EiffelStyleLoop" num="76" count="23" type="method"/>
            <line num="77" count="23" type="stmt"/>
            <line num="78" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="loop(NullaryProcedure) : EiffelStyleLoop" num="81" count="23" type="method"/>
            <line num="82" count="23" type="stmt"/>
            <line num="83" count="23" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="86" count="23" type="method"/>
            <line num="87" count="23" type="stmt"/>
            <line num="88" count="23" type="stmt"/>
            <line num="89" count="23" type="stmt"/>
            <line falsecount="23" truecount="94" num="89" type="cond"/>
            <line num="90" count="94" type="stmt"/>
            <line num="91" count="94" type="stmt"/>
            <line num="92" count="94" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertTrue(boolean) : void" num="106" count="211" type="method"/>
            <line num="107" count="211" type="stmt"/>
            <line falsecount="211" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/two/TestBinaryChop.java" name="TestBinaryChop.java">
            <metrics coveredelements="191" coveredconditionals="54" complexity="58" loc="550" coveredmethods="31" methods="31" elements="191" classes="3" ncloc="256" statements="106" conditionals="54" coveredstatements="106"/>
            <class name="TestBinaryChop">
               <metrics coveredelements="161" complexity="48" methods="24" testruns="29" statements="89" coveredconditionals="48" coveredmethods="24" elements="161" testfailures="0" testduration="0.251" conditionals="48" coveredstatements="89" testpasses="29"/>
            </class>
            <class name="TestBinaryChop.Loop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestBinaryChop.BinarySearchLoop">
               <metrics coveredelements="30" complexity="10" methods="7" testruns="68" statements="17" coveredconditionals="6" coveredmethods="7" elements="30" testfailures="0" testduration="0.0" conditionals="6" coveredstatements="17" testpasses="68"/>
            </class>
            <line complexity="1" visibility="private" signature="chopTest(BinaryChop) : void" num="84" count="8" type="method"/>
            <line num="85" count="8" type="stmt"/>
            <line num="86" count="8" type="stmt"/>
            <line num="87" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line num="91" count="8" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line num="93" count="8" type="stmt"/>
            <line num="94" count="8" type="stmt"/>
            <line num="95" count="8" type="stmt"/>
            <line num="97" count="8" type="stmt"/>
            <line num="98" count="8" type="stmt"/>
            <line num="99" count="8" type="stmt"/>
            <line num="100" count="8" type="stmt"/>
            <line num="101" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line num="103" count="8" type="stmt"/>
            <line num="104" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="107" count="8" type="stmt"/>
            <line num="110" count="8" type="stmt"/>
            <line num="111" count="8" type="stmt"/>
            <line num="112" count="8" type="stmt"/>
            <line num="113" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuiltIn() : void" num="123" testsuccess="true" count="1" testduration="0.036" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="find(Integer,List&lt;Integer&gt;) : int" num="126" count="23" type="method"/>
            <line num="127" count="23" type="stmt"/>
            <line num="135" count="23" type="stmt"/>
            <line falsecount="12" truecount="11" num="135" type="cond"/>
            <line complexity="1" visibility="public" signature="testIterative() : void" num="153" testsuccess="true" count="1" testduration="0.041" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="find(Integer,List&lt;Integer&gt;) : int" num="156" count="23" type="method"/>
            <line num="157" count="23" type="stmt"/>
            <line num="158" count="23" type="stmt"/>
            <line num="159" count="23" type="stmt"/>
            <line falsecount="23" truecount="94" num="159" type="cond"/>
            <line num="160" count="94" type="stmt"/>
            <line num="161" count="94" type="stmt"/>
            <line falsecount="32" truecount="62" num="161" type="cond"/>
            <line num="162" count="62" type="stmt"/>
            <line num="164" count="32" type="stmt"/>
            <line num="167" count="23" type="stmt"/>
            <line falsecount="22" truecount="1" num="167" type="cond"/>
            <line falsecount="11" truecount="11" num="167" type="cond"/>
            <line complexity="1" visibility="public" signature="testIterativeWithInvariants() : void" num="277" count="1" type="method"/>
            <line num="279" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Integer,List&lt;Integer&gt;) : int" num="281" count="23" type="method"/>
            <line num="282" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="287" testsuccess="true" count="117" testduration="0.0" type="method"/>
            <line num="288" count="117" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="292" count="94" type="method"/>
            <line num="293" count="94" type="stmt"/>
            <line num="294" count="94" type="stmt"/>
            <line falsecount="32" truecount="62" num="294" type="cond"/>
            <line num="295" count="62" type="stmt"/>
            <line num="297" count="32" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : Object" num="305" count="23" type="method"/>
            <line num="306" count="23" type="stmt"/>
            <line falsecount="22" truecount="1" num="307" type="cond"/>
            <line falsecount="11" truecount="11" num="309" type="cond"/>
            <line num="313" count="23" type="stmt"/>
            <line num="314" count="23" type="stmt"/>
            <line complexity="1" visibility="package" signature="BinarySearchLoop(Integer,List&lt;Integer&gt;)" num="344" count="23" type="method"/>
            <line num="345" count="23" type="stmt"/>
            <line num="346" count="23" type="stmt"/>
            <line num="348" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="349" count="23" type="method"/>
            <line num="350" count="23" type="stmt"/>
            <line num="351" count="23" type="stmt"/>
            <line num="355" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="356" testsuccess="true" count="117" testduration="0.0" type="method"/>
            <line num="357" count="117" type="stmt"/>
            <line num="361" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : Object" num="362" count="94" type="method"/>
            <line num="363" count="94" type="stmt"/>
            <line num="367" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : boolean" num="368" testsuccess="true" count="117" testduration="0.0" type="method"/>
            <line num="369" count="117" type="stmt"/>
            <line num="373" count="23" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="374" count="94" type="method"/>
            <line num="375" count="94" type="stmt"/>
            <line num="376" count="94" type="stmt"/>
            <line falsecount="32" truecount="62" num="376" type="cond"/>
            <line num="377" count="62" type="stmt"/>
            <line num="379" count="32" type="stmt"/>
            <line complexity="3" visibility="package" signature="getResult() : int" num="385" count="23" type="method"/>
            <line num="386" count="23" type="stmt"/>
            <line falsecount="22" truecount="1" num="386" type="cond"/>
            <line falsecount="11" truecount="11" num="386" type="cond"/>
            <line complexity="1" visibility="public" signature="testIterativeWithInvariantsAndAssertions() : void" num="395" count="1" type="method"/>
            <line num="397" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Integer,List&lt;Integer&gt;) : int" num="398" count="23" type="method"/>
            <line num="399" count="23" type="stmt"/>
            <line num="400" count="23" type="stmt"/>
            <line num="401" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRecursive() : void" num="410" testsuccess="true" count="1" testduration="0.051" type="method"/>
            <line num="412" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Integer,List&lt;Integer&gt;) : int" num="413" count="23" type="method"/>
            <line num="414" count="23" type="stmt"/>
            <line complexity="5" visibility="private" signature="find(Integer,List&lt;Integer&gt;,int,int) : int" num="417" count="117" type="method"/>
            <line num="418" count="117" type="stmt"/>
            <line falsecount="23" truecount="94" num="418" type="cond"/>
            <line num="419" count="94" type="stmt"/>
            <line num="420" count="94" type="stmt"/>
            <line falsecount="32" truecount="62" num="420" type="cond"/>
            <line num="421" count="62" type="stmt"/>
            <line num="423" count="32" type="stmt"/>
            <line num="426" count="23" type="stmt"/>
            <line falsecount="22" truecount="1" num="426" type="cond"/>
            <line falsecount="11" truecount="11" num="426" type="cond"/>
            <line complexity="1" visibility="public" signature="testTailRecursive() : void" num="444" testsuccess="true" count="1" testduration="0.037" type="method"/>
            <line num="446" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Integer,List&lt;Integer&gt;) : int" num="447" count="23" type="method"/>
            <line num="448" count="23" type="stmt"/>
            <line complexity="5" visibility="public" signature="evaluate() : Object" num="449" count="117" type="method"/>
            <line num="450" count="117" type="stmt"/>
            <line falsecount="23" truecount="94" num="450" type="cond"/>
            <line num="451" count="94" type="stmt"/>
            <line num="452" count="94" type="stmt"/>
            <line falsecount="32" truecount="62" num="452" type="cond"/>
            <line num="453" count="62" type="stmt"/>
            <line num="455" count="32" type="stmt"/>
            <line num="457" count="94" type="stmt"/>
            <line num="459" count="23" type="stmt"/>
            <line falsecount="22" truecount="1" num="459" type="cond"/>
            <line falsecount="11" truecount="11" num="461" type="cond"/>
            <line complexity="1" visibility="public" signature="testRecursive2() : void" num="490" testsuccess="true" count="1" testduration="0.035" type="method"/>
            <line num="492" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Integer,List&lt;Integer&gt;) : int" num="493" count="23" type="method"/>
            <line num="494" count="23" type="stmt"/>
            <line complexity="5" visibility="private" signature="find(Integer,List&lt;Integer&gt;,int) : int" num="497" count="117" type="method"/>
            <line num="498" count="117" type="stmt"/>
            <line falsecount="116" truecount="1" num="498" type="cond"/>
            <line num="499" count="1" type="stmt"/>
            <line num="500" count="116" type="stmt"/>
            <line falsecount="94" truecount="22" num="500" type="cond"/>
            <line num="501" count="22" type="stmt"/>
            <line falsecount="11" truecount="11" num="501" type="cond"/>
            <line num="503" count="94" type="stmt"/>
            <line num="504" count="94" type="stmt"/>
            <line falsecount="32" truecount="62" num="504" type="cond"/>
            <line num="505" count="62" type="stmt"/>
            <line num="507" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTailRecursive2() : void" num="520" testsuccess="true" count="1" testduration="0.05" type="method"/>
            <line num="522" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Integer,List&lt;Integer&gt;) : int" num="523" count="23" type="method"/>
            <line num="524" count="23" type="stmt"/>
            <line complexity="5" visibility="public" signature="evaluate() : Object" num="525" count="117" type="method"/>
            <line num="526" count="117" type="stmt"/>
            <line falsecount="116" truecount="1" num="526" type="cond"/>
            <line num="527" count="1" type="stmt"/>
            <line num="528" count="116" type="stmt"/>
            <line falsecount="94" truecount="22" num="528" type="cond"/>
            <line num="529" count="22" type="stmt"/>
            <line falsecount="11" truecount="11" num="529" type="cond"/>
            <line num="533" count="94" type="stmt"/>
            <line num="534" count="94" type="stmt"/>
            <line falsecount="32" truecount="62" num="534" type="cond"/>
            <line num="535" count="62" type="stmt"/>
            <line num="537" count="32" type="stmt"/>
            <line num="538" count="32" type="stmt"/>
            <line num="540" count="94" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.example">
         <metrics coveredelements="0" complexity="87" loc="1106" methods="59" classes="6" statements="228" coveredconditionals="0" coveredmethods="0" elements="335" ncloc="551" files="2" conditionals="48" coveredstatements="0"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/FlexiMapExample.java" name="FlexiMapExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="46" loc="542" coveredmethods="0" methods="39" elements="165" classes="3" ncloc="284" statements="116" conditionals="10" coveredstatements="0"/>
            <class name="FlexiMapExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="21" elements="118" statements="91" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="FlexiMapExample.FlexiMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="13" elements="34" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="FlexiMapExample.UniversalFunctor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testBasicMap() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasicMapReturnsNullForMissingKey() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasicMapAllowsNull() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasicMapAllowsMultipleTypes() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasicMapStoresOnlyOneValuePerKey() : void" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testForbidNull() : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullDefaultsToZero() : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testIntegerValuesOnly() : void" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiMap() : void" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringConcatMap() : void" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="FlexiMap(BinaryFunction&lt;Object, Object, Object&gt;,BinaryFunction&lt;Object, Object, Object&gt;)" num="274" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Object) : Object" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(Object,Object) : Object" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsKey(Object) : boolean" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsValue(Object) : boolean" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entrySet() : Set&lt;Map.Entry&lt;Object, Object&gt;&gt;" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="320" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keySet() : Set&lt;Object&gt;" num="324" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putAll(Map&lt;?, ?&gt;) : void" num="328" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : Object" num="332" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : Collection&lt;Object&gt;" num="340" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeBasicMap() : Map&lt;Object, Object&gt;" num="358" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeNullForbiddenMap() : Map&lt;Object, Object&gt;" num="365" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeDefaultValueForNullMap(Object) : Map&lt;Object, Object&gt;" num="393" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeTypeConstrainedMap(Class&lt;?&gt;) : Map&lt;Object, Object&gt;" num="420" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeMultiMap() : Map&lt;Object, Object&gt;" num="443" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Object,Object) : Object" num="445" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeStringConcatMap() : Map&lt;Object, Object&gt;" num="462" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Object,Object) : Object" num="468" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="470" type="cond"/>
            <line num="471" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(Object,Object) : Object" num="484" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="485" type="cond"/>
            <line num="486" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object) : void" num="504" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Object,Object) : void" num="508" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : Object" num="512" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Object) : Object" num="517" count="0" type="method"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Object,Object) : Object" num="522" count="0" type="method"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="529" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="536" count="0" type="method"/>
            <line num="538" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/QuicksortExample.java" name="QuicksortExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="564" coveredmethods="0" methods="20" elements="170" classes="3" ncloc="267" statements="112" conditionals="38" coveredstatements="0"/>
            <class name="QuicksortExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="18" elements="146" statements="100" conditionals="28" coveredstatements="0"/>
            </class>
            <class name="QuicksortExample.ListFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="10" statements="5" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="QuicksortExample.ObjectListFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="1" elements="14" statements="7" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSortEmpty() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortSingleElementList() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSortSingleValueList() : void" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSortSorted() : void" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSortReversed() : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSortShuffled() : void" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSortRandom() : void" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTimings() : void" num="228" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="quicksort(List&lt;?&gt;) : List&lt;?&gt;" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(List&lt;?&gt;) : Object" num="347" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate(Object) : Object" num="395" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="evaluate(Object,Object) : Object" num="416" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="417" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="419" type="cond"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(List&lt;?&gt;) : Object" num="438" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate(List&lt;?&gt;) : Object" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="450" type="cond"/>
            <line complexity="1" visibility="public" signature="evaluate(Object,List&lt;?&gt;) : Object" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Object,List&lt;?&gt;) : Object" num="479" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHeadFunction() : void" num="492" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTailFunction() : void" num="509" count="0" type="method"/>
            <line num="510" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testLesserTail() : void" num="535" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="537" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="540" type="cond"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="544" type="cond"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testGreaterTail() : void" num="550" count="0" type="method"/>
            <line num="551" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="552" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="555" type="cond"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="559" type="cond"/>
            <line num="560" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.example.aggregator.nostore">
         <metrics coveredelements="0" complexity="12" loc="183" methods="10" classes="3" statements="45" coveredconditionals="0" coveredmethods="0" elements="59" ncloc="102" files="2" conditionals="4" coveredstatements="0"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/aggregator/nostore/AggregatedFunctionSample.java" name="AggregatedFunctionSample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="58" coveredmethods="0" methods="3" elements="12" classes="2" ncloc="24" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="AggregatedFunctionSample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AggregatedFunctionSample.OwnBinaryFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="useOwnFunction() : void" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initialValue() : Boolean" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Boolean,Boolean) : Boolean" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/aggregator/nostore/NoStoreAggregatorSample.java" name="NoStoreAggregatorSample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="125" coveredmethods="0" methods="7" elements="47" classes="1" ncloc="78" statements="36" conditionals="4" coveredstatements="0"/>
            <class name="NoStoreAggregatorSample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="47" statements="36" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="countItems() : void" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initialValue() : Integer" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sumItems() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onTimer(AbstractTimedAggregator&lt;Integer&gt;,Integer) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initialValue() : Integer" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="maxValue() : void" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initialValue() : Integer" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.example.kata.four">
         <metrics coveredelements="55" complexity="24" loc="365" methods="17" classes="7" statements="30" coveredconditionals="8" coveredmethods="17" elements="55" ncloc="146" files="7" conditionals="8" coveredstatements="30"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/four/Abs.java" name="Abs.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="38" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="Abs">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluate(Number) : Integer" num="29" count="96" type="method"/>
            <line num="30" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : Abs" num="33" count="4" type="method"/>
            <line num="34" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/four/DataMunger.java" name="DataMunger.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="99" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="52" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="DataMunger">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="process(InputStream,int,int,int) : Object" num="47" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="process(Reader,int,int,int) : Object" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="lesserSpread(int,int) : BinaryFunction&lt;String, String, String&gt;" num="68" count="2" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="absSpread(int,int) : Function&lt;String, Integer&gt;" num="88" count="4" type="method"/>
            <line num="89" count="4" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/four/IsInteger.java" name="IsInteger.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="42" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="15" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="IsInteger">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="2" visibility="public" signature="test(String) : boolean" num="28" count="95" type="method"/>
            <line num="29" count="95" type="stmt"/>
            <line num="30" count="95" type="stmt"/>
            <line num="31" count="50" type="stmt"/>
            <line num="33" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : IsInteger" num="37" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/four/NthColumn.java" name="NthColumn.java">
            <metrics coveredelements="13" coveredconditionals="4" complexity="6" loc="47" coveredmethods="3" methods="3" elements="13" classes="1" ncloc="18" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="NthColumn">
               <metrics coveredelements="13" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="13" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NthColumn(int)" num="30" count="12" type="method"/>
            <line num="31" count="12" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluate(String) : String" num="34" count="289" type="method"/>
            <line num="35" count="289" type="stmt"/>
            <line num="36" count="289" type="stmt"/>
            <line falsecount="289" truecount="707" num="36" type="cond"/>
            <line num="37" count="707" type="stmt"/>
            <line num="39" count="289" type="stmt"/>
            <line falsecount="11" truecount="278" num="39" type="cond"/>
            <line complexity="1" visibility="public" signature="instance(int) : NthColumn" num="44" count="12" type="method"/>
            <line num="45" count="12" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/four/TestSoccer.java" name="TestSoccer.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TestSoccer">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testProcess() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/four/TestWeather.java" name="TestWeather.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="47" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="TestWeather">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.02" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="TestWeather(String)" num="30" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProcess() : void" num="38" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/kata/four/ToInteger.java" name="ToInteger.java">
            <metrics coveredelements="15" coveredconditionals="4" complexity="5" loc="51" coveredmethods="2" methods="2" elements="15" classes="1" ncloc="23" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="ToInteger">
               <metrics coveredelements="15" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="4" visibility="public" signature="evaluate(String) : Integer" num="30" count="287" type="method"/>
            <line num="31" count="287" type="stmt"/>
            <line num="32" count="287" type="stmt"/>
            <line falsecount="220" truecount="522" num="32" type="cond"/>
            <line num="33" count="522" type="stmt"/>
            <line falsecount="56" truecount="466" num="33" type="cond"/>
            <line num="34" count="466" type="stmt"/>
            <line num="36" count="56" type="stmt"/>
            <line num="39" count="276" type="stmt"/>
            <line num="40" count="276" type="stmt"/>
            <line num="42" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance() : ToInteger" num="46" count="103" type="method"/>
            <line num="47" count="103" type="stmt"/>
         </file>
      </package>
      <package name="org.apache.commons.functor.example.aggregator.list">
         <metrics coveredelements="0" complexity="12" loc="166" methods="8" classes="4" statements="39" coveredconditionals="0" coveredmethods="0" elements="53" ncloc="86" files="2" conditionals="6" coveredstatements="0"/>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/aggregator/list/OwnFunctionImplementationSample.java" name="OwnFunctionImplementationSample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="94" coveredmethods="0" methods="3" elements="37" classes="2" ncloc="49" statements="28" conditionals="6" coveredstatements="0"/>
            <class name="OwnFunctionImplementationSample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="22" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OwnFunctionImplementationSample.OwnFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="15" statements="7" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="findValue() : void" num="32" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OwnFunction(int)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="evaluate(List&lt;Integer&gt;) : Integer" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/root/qrx/experiment/test-code-transformation/experiment/7/origin/commons-functor-master/core/src/test/java/org/apache/commons/functor/example/aggregator/list/OwnListImplementationSample.java" name="OwnListImplementationSample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="72" coveredmethods="0" methods="5" elements="16" classes="2" ncloc="37" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="OwnListImplementationSample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="8" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OwnListImplementationSample.CustomListAggregator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="sampleCreateOwnList() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CustomListAggregator(Function&lt;List&lt;T&gt;, T&gt;)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CustomListAggregator(Function&lt;List&lt;T&gt;, T&gt;,long)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CustomListAggregator(Function&lt;List&lt;T&gt;, T&gt;,long,boolean)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createList() : List&lt;T&gt;" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>